(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7456],{71884:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return n_}});var l,i=t(52322),r=t(45392),o=t(96835),s=t(67622),a=t(53310),c=t(70758),u=t(66785),d=t(73645),m=t(2784),h=t(1248);function x(){return(x=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}function p(e){return function(e){if(Array.isArray(e))return g(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||f(e)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(e,n){if(e){if("string"==typeof e)return g(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return g(e,n)}}function g(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,l=Array(n);t<n;t++)l[t]=e[t];return l}var M={policies:[{id:"0",description:"Default policy"}].concat(p(Array.from({length:10},function(e,n){return{id:String(n+1),description:"Policy ".concat(n+1)}})))},j=(l=new Map,M.policies.forEach(function(e){var n=String(e.id);l.set(n,e)}),l),b=p(j.keys()),v=function(e){var n=j.get(e);return null==n?void 0:n.description},I=function(e){var n=e.length,t=n===b.length;if(0===n){var l="Select";return m.createElement(m.Fragment,null,m.createElement(s.Z,{mr:"2x"},"Policy:"),m.createElement(a.Z,{PopperProps:{usePortal:!0},label:l},l))}if(t)return m.createElement(m.Fragment,null,m.createElement(s.Z,{mr:"2x"},"Policy:"),m.createElement(a.Z,{PopperProps:{usePortal:!0},label:"All"},"All"));var i=e.map(v).join(", ");return m.createElement(m.Fragment,null,m.createElement(s.Z,{mr:"2x"},"Policy:"),m.createElement(a.Z,{PopperProps:{usePortal:!0},label:i},i),m.createElement(c.Z,{ml:"1x"},"(".concat(n,")")))},T=function(){var e,n=function(e){if(Array.isArray(e))return e}(e=(0,m.useState)(b))||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var l,i,r,o,s=[],a=!0,c=!1;try{for(r=(t=t.call(e)).next;!(a=(l=r.call(t)).done)&&(s.push(l.value),2!==s.length);a=!0);}catch(e){c=!0,i=e}finally{try{if(!a&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw i}}return s}}(e,2)||f(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),t=n[0],l=n[1],i="calc(".concat(200,"px - 48px)");return m.createElement(h.Z,{isSearchable:!0,value:t,onChange:l,options:b,renderOption:v,shouldSelectAllIfNoneSelected:!0},function(e){var n=e.getToggleProps;return m.createElement(u.Z,x({},n(),{variant:"secondary",width:200}),m.createElement(d.Z,{maxWidth:i},I(t)))})},y=t(19148);function w(){return(w=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}function S(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,l=Array(n);t<n;t++)l[t]=e[t];return l}var L=["all","network-events","system-events"],E=function(e){return({all:"All","network-events":"Network events","system-events":"System events"})[e]},Z=function(e){var n=E(e);return m.createElement(m.Fragment,null,m.createElement(s.Z,{mr:"2x"},"Event status:"),m.createElement(a.Z,{PopperProps:{usePortal:!0},label:n},n))},k=function(){var e,n=function(e){if(Array.isArray(e))return e}(e=(0,m.useState)("all"))||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var l,i,r,o,s=[],a=!0,c=!1;try{for(r=(t=t.call(e)).next;!(a=(l=r.call(t)).done)&&(s.push(l.value),2!==s.length);a=!0);}catch(e){c=!0,i=e}finally{try{if(!a&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw i}}return s}}(e,2)||function(e,n){if(e){if("string"==typeof e)return S(e,2);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return S(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),t=n[0],l=n[1],i="calc(".concat(200,"px - 48px)");return m.createElement(y.Z,{value:t,onChange:l,options:L,renderOption:E},function(e){var n=e.getToggleProps;return m.createElement(u.Z,w({},n(),{variant:"secondary",width:200}),m.createElement(d.Z,{maxWidth:i},Z(t)))})},A=t(40596),C=t(85017),O=t(83513),P=t(15192),F=t(12226),B=t(87888),D=t(49857),R=t(94829),N=t(3342),G=t(68010),U=t(53860),H=t(99723),z=t(52903),V=["children","title"],W=(0,m.forwardRef)(function(e,n){var t=e.children,l=e.title,i=(0,U.Kd)(e,V),r=(0,H.Ln)();return(0,z.BX)(z.HY,{children:[(0,z.tZ)(D.Z,(0,U.Zj)((0,U.Zj)((0,U.Zj)({ref:n,role:"group"},r),i),{},{children:l})),t]})});W.displayName="MenuGroup";var _=t(57805),$=t(22231),Y=t(83718),K=t(30047),X=t(69432),J=t(30883),Q=t(36699),q=t(31461),ee=t(7896),en=t(54225),et=t(40689),el={width:"1px",height:"0px",padding:0,overflow:"hidden",position:"fixed",top:"1px",left:"1px"},ei=t(64597),er=(0,ei.s)({},function(e){return{target:e.target,currentTarget:e.currentTarget}}),eo=(0,ei.s)(),es=(0,ei.s)(),ea=(0,ei._)({async:!0,ssr:"undefined"!=typeof document}),ec=(0,m.createContext)(void 0),eu=[],ed=m.forwardRef(function(e,n){var t,l=m.useState(),i=l[0],r=l[1],o=m.useRef(),s=m.useRef(!1),a=m.useRef(null),c=m.useState({})[1],u=e.children,d=e.disabled,h=void 0!==d&&d,x=e.noFocusGuards,p=void 0!==x&&x,f=e.persistentFocus,g=e.crossFrame,M=e.autoFocus,j=(e.allowTextSelection,e.group),b=e.className,v=e.whiteList,I=e.hasPositiveIndices,T=e.shards,y=void 0===T?eu:T,w=e.as,S=e.lockProps,L=e.sideCar,E=e.returnFocus,Z=void 0!==E&&E,k=e.focusOptions,A=e.onActivation,C=e.onDeactivation,O=m.useState({})[0],P=m.useCallback(function(e){var n=e.captureFocusRestore;if(!a.current){var t,l=null==(t=document)?void 0:t.activeElement;a.current=l,l!==document.body&&(a.current=n(l))}o.current&&A&&A(o.current),s.current=!0,c()},[A]),F=m.useCallback(function(){s.current=!1,C&&C(o.current),c()},[C]),B=m.useCallback(function(e){var n=a.current;if(n){var t=("function"==typeof n?n():n)||document.body,l="function"==typeof Z?Z(t):Z;if(l){var i="object"==typeof l?l:void 0;a.current=null,e?Promise.resolve().then(function(){return t.focus(i)}):t.focus(i)}}},[Z]),D=m.useCallback(function(e){s.current&&er.useMedium(e)},[]),R=eo.useMedium,N=m.useCallback(function(e){o.current!==e&&(o.current=e,r(e))},[]),G=(0,ee.Z)(((t={})[en.FOCUS_DISABLED]=h&&"disabled",t[en.FOCUS_GROUP]=j,t),void 0===S?{}:S),U=!0!==p,H=U&&"tail"!==p,z=(0,et.q)([n,N]),V=m.useMemo(function(){return{observed:o,shards:y,enabled:!h,active:s.current}},[h,s.current,y,i]);return m.createElement(m.Fragment,null,U&&[m.createElement("div",{key:"guard-first","data-focus-guard":!0,tabIndex:h?-1:0,style:el}),I?m.createElement("div",{key:"guard-nearest","data-focus-guard":!0,tabIndex:h?-1:1,style:el}):null],!h&&m.createElement(L,{id:O,sideCar:ea,observed:i,disabled:h,persistentFocus:void 0!==f&&f,crossFrame:void 0===g||g,autoFocus:void 0===M||M,whiteList:v,shards:y,onActivation:P,onDeactivation:F,returnFocus:B,focusOptions:k}),m.createElement(void 0===w?"div":w,(0,ee.Z)({ref:z},G,{className:b,onBlur:R,onFocus:D}),m.createElement(ec.Provider,{value:V},u)),H&&m.createElement("div",{"data-focus-guard":!0,tabIndex:h?-1:0,style:el}))});ed.propTypes={};var em=t(60444),eh=t(75226),ex=t(7413),ep=t(19096),ef=t(68557),eg=t(55632),eM=t(82091);function ej(e){setTimeout(e,1)}var eb=function(e){return e&&"current"in e?e.current:e},ev=null,eI=null,eT=null,ey=!1,ew=function(e,n){eT={observerNode:e,portaledElement:n}};function eS(e,n,t,l){var i=null,r=e;do{var o=l[r];if(o.guard)o.node.dataset.focusAutoGuard&&(i=o);else if(o.lockItem){if(r!==e)return;i=null}else break}while((r+=t)!==n);i&&(i.node.tabIndex=0)}var eL=function(){var e=!1;if(ev){var n=ev,t=n.observed,l=n.persistentFocus,i=n.autoFocus,r=n.shards,o=n.crossFrame,s=n.focusOptions,a=t||eT&&eT.portaledElement,c=document&&document.activeElement;if(a){var u=[a].concat(r.map(eb).filter(Boolean));if((!c||(ev.whiteList||function(){return!0})(c))&&(l||(o?!!ey:"meanwhile"===ey)||!(document&&document.activeElement===document.body||(0,eh.U)())||!eI&&i)&&(a&&!((0,ex.S)(u)||c&&u.some(function(e){return function e(n,t,l){return t&&(t.host===n&&(!t.activeElement||l.contains(t.activeElement))||t.parentNode&&e(n,t.parentNode,l))}(c,e,e)})||eT&&eT.portaledElement===c)&&(document&&!eI&&c&&!i?(c.blur&&c.blur(),document.body.focus()):(e=(0,ep.L)(u,eI,{focusOptions:s}),eT={})),ey=!1,eI=document&&document.activeElement),document&&c!==document.activeElement&&document.querySelector("[data-focus-auto-guard]")){var d=document&&document.activeElement,m=(0,ef.T)(u),h=m.map(function(e){return e.node}).indexOf(d);h>-1&&(m.filter(function(e){var n=e.guard,t=e.node;return n&&t.dataset.focusAutoGuard}).forEach(function(e){return e.node.removeAttribute("tabIndex")}),eS(h,m.length,1,m),eS(h,-1,-1,m))}}}return e},eE=function(e){eL()&&e&&(e.stopPropagation(),e.preventDefault())},eZ=function(){return ej(eL)},ek=function(){ey="just",ej(function(){ey="meanwhile"})},eA=function(){document.addEventListener("focusin",eE),document.addEventListener("focusout",eZ),window.addEventListener("blur",ek)},eC=function(){document.removeEventListener("focusin",eE),document.removeEventListener("focusout",eZ),window.removeEventListener("blur",ek)},eO={moveFocusInside:ep.L,focusInside:ex.S,focusNextElement:eg.pf,focusPrevElement:eg.mX,focusFirstElement:eg.w4,focusLastElement:eg.fW,captureFocusRestore:eM.T};er.assignSyncMedium(function(e){var n=e.target,t=e.currentTarget;t.contains(n)||ew(t,n)}),eo.assignMedium(eZ),es.assignMedium(function(e){return e(eO)});var eP=(0,em.default)(function(e){return e.filter(function(e){return!e.disabled})},function(e){var n=e.slice(-1)[0];n&&!ev&&eA();var t=ev,l=t&&n&&n.id===t.id;ev=n,!t||l||(t.onDeactivation(),e.filter(function(e){return e.id===t.id}).length||t.returnFocus(!n)),n?(eI=null,l&&t.observed===n.observed||n.onActivation(eO),eL(!0),ej(eL)):(eC(),eI=null)})(function(){return null}),eF=m.forwardRef(function(e,n){return m.createElement(ed,(0,ee.Z)({sideCar:eP,ref:n},e))}),eB=ed.propTypes||{};function eD(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var l,i,r,o,s=[],a=!0,c=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;a=!1}else for(;!(a=(l=r.call(t)).done)&&(s.push(l.value),s.length!==n);a=!0);}catch(e){c=!0,i=e}finally{try{if(!a&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return eR(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return eR(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function eR(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,l=Array(n);t<n;t++)l[t]=e[t];return l}function eN(){return(eN=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}eB.sideCar,(0,q.Z)(eB,["sideCar"]),eF.propTypes={};var eG=function(e){return m.createElement(d.Z,eN({p:"1x",borderRadius:"50%",alignItems:"center",justifyContent:"center",fontSize:"xs",lineHeight:"1"},e))},eU=function(e){var n=eD((0,A.Z)(),1)[0],t=eD((0,C.Z)({colorMode:n}),1)[0];return m.createElement(O.Z,eN({color:t.color.secondary,tabIndex:0,_disabled:{color:t.color.disabled},_hover:{color:t.color.primary}},e))},eH=!1,ez=function(){var e=eD((0,A.Z)(),2),n=e[0],t=e[1],l=eD((0,C.Z)({colorMode:n}),1)[0],i=eD((0,m.useState)("main"),2),r=i[0],o=i[1],s=function(e){return function(n){n.preventDefault(),eH=!0,o(e)}};return m.createElement(P.Z,{onOpen:function(){o("main")}},m.createElement(F.Z,null,m.createElement(eG,{backgroundColor:l.background.secondary,color:l.color.secondary,_hover:{color:l.color.primary}},m.createElement(_.Z,{size:"5x"}))),m.createElement(eF,{persistentFocus:!0},m.createElement(B.Z,{width:"max-content",onBlur:function(e){eH&&(e.preventDefault(),eH=!1)}},m.createElement(D.Z,{display:"main"===r?"block":"none"},m.createElement(R.Z,null,m.createElement(d.Z,{flex:"none",mr:"3x"},m.createElement($.Z,null)),m.createElement(d.Z,{flex:"auto"},m.createElement(c.Z,null,"Settings"))),m.createElement(R.Z,null,m.createElement(d.Z,{flex:"none",mr:"3x"},m.createElement(_.Z,null)),m.createElement(d.Z,{flex:"auto"},m.createElement(c.Z,null,"Accounts"))),m.createElement(R.Z,null,m.createElement(d.Z,{flex:"none",mr:"3x"},m.createElement(Y.Z,null)),m.createElement(d.Z,{flex:"auto"},m.createElement(c.Z,null,"Privacy control"))),m.createElement(N.Z,null),m.createElement(R.Z,{onClick:s("appearance")},m.createElement(d.Z,{flex:"none",mr:"3x"},m.createElement(K.Z,null)),m.createElement(d.Z,{flex:"auto"},m.createElement(c.Z,null,"Appearance:"),m.createElement(G.Z,{width:"2x"}),m.createElement(c.Z,{textTransform:"capitalize"},n)),m.createElement(d.Z,{flex:"none",ml:"3x"},m.createElement(X.Z,null)))),m.createElement(D.Z,{display:"appearance"===r?"block":"none"},m.createElement(d.Z,{alignItems:"center",px:"3x",py:"1x"},m.createElement(d.Z,{flex:"none",mr:"3x"},m.createElement(eU,{onClick:s("main")},m.createElement(J.Z,null))),m.createElement(d.Z,{flex:"auto"},m.createElement(c.Z,{fontSize:"md",lineHeight:"md"},"Appearance"))),m.createElement(N.Z,null),m.createElement(W,{title:m.createElement(c.Z,{fontSize:"xs",lineHeight:"xs"},"Setting applies to this browser only")},m.createElement(R.Z,{onClick:function(e){t("dark")}},m.createElement(d.Z,{flex:"none",mr:"3x",minWidth:"4x"},"dark"===n&&m.createElement(Q.Z,null)),m.createElement(d.Z,{flex:"auto"},"Dark theme")),m.createElement(R.Z,{onClick:function(){t("light")}},m.createElement(d.Z,{flex:"none",mr:"3x",minWidth:"4x"},"light"===n&&m.createElement(Q.Z,null)),m.createElement(d.Z,{flex:"auto"},"Light theme")))))))},eV=t(743),eW=t(56818),e_=t(92307),e$=t.n(e_),eY=t(65204),eK=t(20655),eX=t(52741),eJ=["children","defaultIsOpen","isOpen","offset","onClose","onOpen","placement"],eQ=e$()(function(e){return(0,U.Zj)({},e)}),eq=(0,m.forwardRef)(function(e,n){var t=e.children,l=e.defaultIsOpen,i=e.isOpen,r=e.offset,o=e.onClose,s=e.onOpen,a=e.placement,c=(0,U.Kd)(e,eJ),u=(0,m.useRef)(null),d=(0,m.useRef)(null),h=(0,m.useRef)(),x=(0,m.useRef)(),p=(0,m.useState)(null!=i?i:void 0!==l&&l),f=(0,U.ZQ)(p,2),g=f[0],M=f[1];(0,m.useEffect)(function(){void 0!==i&&M(i)},[i]);var j=(0,m.useCallback)(function(){void 0!==i||M(!1),"function"==typeof o&&o()},[i,o]),b=(0,m.useCallback)(function(){void 0!==i||M(!0),"function"==typeof s&&s()},[i,s]),v=(0,eK.Z)(),I="".concat(eY.Z.name,":Submenu-").concat(v),T="".concat(eY.Z.name,":SubmenuToggle-").concat(v),y=(0,H.$T)(),w=eQ({isHoveringSubmenuContentRef:h,isHoveringSubmenuToggleRef:x,isOpen:g,offset:r,onClose:j,onOpen:b,placement:void 0===a?"right-start":a,submenuId:I,submenuToggleId:T,submenuContentRef:u,submenuToggleRef:d});return(0,z.tZ)(eX.z.Provider,{value:w,children:(0,z.tZ)(D.Z,(0,U.Zj)((0,U.Zj)((0,U.Zj)({ref:n},y),c),{},{children:(0,eW.Pu)(t,w)}))})});eq.displayName="Submenu";var e0=t(20325),e1=t(5081),e2=function(){if(!m.useContext)throw Error("The `useContext` hook is not available with your React version.");return(0,m.useContext)(eX.z)},e3=["children","disabled","onMouseEnter","onMouseLeave"],e4=(0,m.forwardRef)(function(e,n){var t=e.children,l=e.disabled,i=e.onMouseEnter,r=e.onMouseLeave,o=(0,U.Kd)(e,e3),s=(0,m.useRef)(),a=e2(),c=(0,U.Zj)({},a),u=c.isHoveringSubmenuContentRef,d=c.isHoveringSubmenuToggleRef,h=c.isOpen,x=c.onClose,p=c.onOpen,f=c.submenuId,g=c.submenuToggleId,M=c.submenuToggleRef,j=(0,e0.Z)(M,n),b=(0,H.TP)(),v={};v.onMouseEnter=function(e){if(l){e.preventDefault();return}d.current=!0,s.current&&(clearTimeout(s.current),s.current=void 0),(0,e1.zU)(p)()},v.onMouseLeave=function(e){if(l){e.preventDefault();return}d.current=!1,s.current&&(clearTimeout(s.current),s.current=void 0),s.current=setTimeout(function(){s.current=void 0,d.current||u.current||(0,e1.zU)(x)()},100)};var I=function(){return(0,U.Zj)((0,U.Zj)({"aria-controls":f,"aria-disabled":(0,eW.Qm)(l),"aria-expanded":(0,eW.Qm)(h),"aria-haspopup":"menu",disabled:l,id:g,onMouseEnter:(0,eW.N)(i,v.onMouseEnter),onMouseLeave:(0,eW.N)(r,v.onMouseLeave),ref:j,role:"presentation"},b),o)};return"function"==typeof t?t({getSubmenuToggleProps:I}):(0,z.tZ)(D.Z,(0,U.Zj)((0,U.Zj)({},I()),{},{children:t}))});e4.displayName="SubmenuToggle";var e5=t(67250),e8=t(14594),e7=["PopperComponent","PopperProps","TransitionComponent","TransitionProps","children","onMouseEnter","onMouseLeave"],e9=(0,m.forwardRef)(function(e,n){e.PopperComponent;var t=e.PopperProps,l=e.TransitionComponent,i=void 0===l?e8.Z:l,r=e.TransitionProps,o=e.children,s=e.onMouseEnter,a=e.onMouseLeave,c=(0,U.Kd)(e,e7),u=(0,m.useRef)(null),d=(0,e0.Z)(u,n),h=(0,m.useRef)(),x=e2(),p=(0,U.Zj)({},x),f=p.isHoveringSubmenuContentRef,g=p.isHoveringSubmenuToggleRef,M=p.isOpen,j=p.offset,b=p.onClose,v=p.placement,I=p.submenuId,T=p.submenuToggleId,y=p.submenuToggleRef,w=p.submenuContentRef,S={};S.onMouseEnter=function(e){f.current=!0,h.current&&(clearTimeout(h.current),h.current=void 0)},S.onMouseLeave=function(e){f.current=!1,h.current&&(clearTimeout(h.current),h.current=void 0),h.current=setTimeout(function(){h.current=void 0,g.current||f.current||(0,e1.zU)(b)()},100)};var L=(0,H._N)({tabIndex:-1}),E=(0,e1.rY)(j),Z=(0,U.ZQ)(E,2),k=Z[0],A=void 0===k?0:k,C=Z[1],O=void 0===C?0:C,P=(0,m.useMemo)(function(){return[{name:"flip",enabled:!1},{name:"offset",options:{offset:[A,O]}},{name:"eventListeners",options:{scroll:!1,resize:!0}}]},[A,O]);return(0,z.tZ)(e5.Z,(0,U.Zj)((0,U.Zj)((0,U.Zj)((0,U.Zj)({"aria-labelledby":T,anchorEl:null==y?void 0:y.current,"data-submenu-id":I,id:I,isOpen:M,placement:v,ref:w,role:"menu",tabIndex:-1,unmountOnExit:!0,usePortal:!1,willUseTransition:!0,zIndex:"dropdown",onMouseEnter:(0,eW.N)(s,S.onMouseEnter),onMouseLeave:(0,eW.N)(a,S.onMouseLeave)},t),{},{modifiers:[].concat((0,U.u)(P),(0,U.u)((0,e1.rY)(null==t?void 0:t.modifiers)))},L),c),{},{children:function(e){e.placement;var n=e.transition,t=(0,U.Zj)({},n),l=t.in,s=t.onEnter,a=t.onExited;return(0,z.tZ)(i,(0,U.Zj)((0,U.Zj)({appear:!0,easing:"linear",timeout:{enter:133,exit:Math.floor(93.1)}},r),{},{ref:d,in:l,onEnter:(0,eW.PP)(s,null==r?void 0:r.onEnter),onExited:(0,eW.PP)(a,null==r?void 0:r.onExited),children:o}))}}))});e9.displayName="SubmenuContent";var e6=(0,m.forwardRef)(function(e,n){var t=e2(),l=(0,U.Zj)({},t),i=l.isOpen,r=l.placement,o=(0,H.O6)({isOpen:i,placement:r});return(0,z.tZ)(e9,(0,U.Zj)((0,U.Zj)({ref:n},o),e))});e6.displayName="SubmenuList";var ne=t(45795),nn=function(){return m.createElement(P.Z,{display:"block"},m.createElement(u.Z,{variant:"secondary",width:200},m.createElement(c.Z,null,"Options")),m.createElement(B.Z,{width:200},m.createElement(eV.Z,{height:200,overflowY:"visible"},Array.from({length:100}).map(function(e,n){return m.createElement(eq,{key:n,placement:"right-start"},m.createElement(e4,{width:"100%"},m.createElement(R.Z,null,m.createElement(d.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:"100%"},m.createElement(c.Z,null,"List Item ",n+1),m.createElement(ne.Z,null)))),m.createElement(e6,{PopperProps:{usePortal:!0},width:"max-content"},m.createElement(R.Z,null,m.createElement(c.Z,null,"List item")),m.createElement(R.Z,null,m.createElement(c.Z,null,"List item"))))}))))},nt=function(){return m.createElement(P.Z,{display:"block"},m.createElement(u.Z,{variant:"secondary",width:200},m.createElement(c.Z,null,"Options")),m.createElement(B.Z,{maxHeight:200,overflow:"auto",width:200},Array.from({length:100}).map(function(e,n){return m.createElement(eq,{key:n,placement:"right-start"},m.createElement(e4,{width:"100%"},m.createElement(R.Z,null,m.createElement(d.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:"100%"},m.createElement(c.Z,null,"List Item ",n+1),m.createElement(ne.Z,null)))),m.createElement(e6,{PopperProps:{usePortal:!0},width:"max-content"},m.createElement(R.Z,null,m.createElement(c.Z,null,"List item")),m.createElement(R.Z,null,m.createElement(c.Z,null,"List item"))))})))},nl=function(){return m.createElement(P.Z,{offset:[16,8]},m.createElement(u.Z,{variant:"secondary"},m.createElement(c.Z,null,"Options")),m.createElement(B.Z,null,m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3")))},ni=t(6194),nr=t(62080);function no(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var l,i,r,o,s=[],a=!0,c=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;a=!1}else for(;!(a=(l=r.call(t)).done)&&(s.push(l.value),s.length!==n);a=!0);}catch(e){c=!0,i=e}finally{try{if(!a&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return ns(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return ns(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ns(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,l=Array(n);t<n;t++)l[t]=e[t];return l}var na=function(e){var n=no((0,m.useState)(e),2),t=n[0],l=n[1];return[t,function(e){return function(){return l(e)}}]},nc=[["top-start","top","top-end"],[".",".","."],[".","center","."],[".",".","."],["bottom-start","bottom","bottom-end"]],nu=function(){var e=no(na("bottom-start"),2),n=e[0],t=e[1],l=nc.map(function(e){return'"'+e.join(" ")+'"'}).join(" ");return m.createElement(d.Z,null,m.createElement(ni.Z,{templateAreas:l,autoColumns:"minmax(0, 1fr)",autoFlow:"row",gap:"2x"},nc.flat().map(function(e,l){if("."===e)return m.createElement(D.Z,{key:l});if("center"===e)return m.createElement(D.Z,{key:l},m.createElement(P.Z,{placement:n},m.createElement(u.Z,{variant:"secondary",width:150},m.createElement(c.Z,null,"Options")),m.createElement(B.Z,null,m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3"))));var i=t(e);return m.createElement(D.Z,{key:l},m.createElement(nr.Z,{selected:e===n,onClick:function(){i()},width:"100%"},e))})))},nd=function(){return m.createElement(P.Z,null,m.createElement(u.Z,{variant:"secondary"},m.createElement(c.Z,null,"Options")),m.createElement(B.Z,{width:"max-content"},m.createElement(R.Z,null,"This is a very long list item 1"),m.createElement(R.Z,null,"This is a very long list item 2"),m.createElement(R.Z,null,"This is a very long list item 3")))},nm=function(){return m.createElement(P.Z,null,m.createElement(u.Z,{variant:"secondary"},m.createElement(c.Z,null,"Options")),m.createElement(B.Z,{width:"min-content"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3")))},nh=function(){return m.createElement(P.Z,{display:"block"},m.createElement(u.Z,{variant:"secondary",width:"100%"},m.createElement(c.Z,null,"Options")),m.createElement(B.Z,{width:"100%"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3")))},nx=function(){return m.createElement(P.Z,null,m.createElement(u.Z,{variant:"secondary"},m.createElement(c.Z,null,"This is a very long menu button")),m.createElement(B.Z,{width:200},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3")))},np=t(69269);function nf(){return(nf=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}var ng=function(e){return m.createElement(d.Z,nf({p:"1x",borderRadius:"50%",alignItems:"center",justifyContent:"center",fontSize:"xs",lineHeight:"1"},e))},nM=function(){return m.createElement(d.Z,{flexDirection:"column",width:"fit-content"},m.createElement(R.Z,null,m.createElement(c.Z,null,"My Profile")),m.createElement(N.Z,null),m.createElement(W,{title:m.createElement(d.Z,{justifyContent:"space-between"},m.createElement(c.Z,null,"Other profiles"),m.createElement(G.Z,{minWidth:"10x"}),m.createElement(O.Z,{title:"Manage profiles"},m.createElement($.Z,{size:"3x"})))},m.createElement(R.Z,null,m.createElement(ng,{color:"white",bg:"blue:50",mr:"3x"},"JD"),m.createElement(c.Z,null,"John Doe")),m.createElement(R.Z,null,m.createElement(ng,{color:"white",bg:"gray:50",mr:"3x"},m.createElement(np.Z,{size:"3x"})),m.createElement(c.Z,null,"Guest"))))},nj=function(){return m.createElement(P.Z,null,m.createElement(u.Z,{variant:"secondary"},m.createElement(c.Z,null,"Options")),m.createElement(B.Z,{width:"max-content"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3")))},nb=t(24718),nv=t(85163),nI=t(20012),nT=t(40809);function ny(){return(ny=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}var nw=function(){return m.createElement(P.Z,{placement:"bottom-start"},function(e){var n=e.isOpen,t=e.direction;return m.createElement(m.Fragment,null,m.createElement(F.Z,null,m.createElement(nb.Z,null,function(e,l){var i=l.ref,r=l.style,o={up:nv.Z,down:nI.Z,left:nT.Z,right:ne.Z}[t];return"up"===t||"down"===t?r.transform=n?"scaleY(-1)":"scaleY(1)":("left"===t||"right"===t)&&(r.transform=n?"scaleX(-1)":"scaleX(1)"),m.createElement(o,ny({ref:i,size:"4x"},r))})),m.createElement(B.Z,{width:"max-content"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3")))})},nS=function(){return m.createElement(P.Z,null,m.createElement(F.Z,null,m.createElement(nb.Z,null)),m.createElement(B.Z,{width:"max-content"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3")))},nL=t(2215),nE=t(10707),nZ=t(33846);function nk(){return(nk=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}var nA=function(){return m.createElement(P.Z,null,m.createElement(F.Z,{disabled:!0},function(e){var n=e.getMenuToggleProps;return m.createElement(nL.Z,{disabled:!1,trigger:"hover"},m.createElement(nE.Z,{shouldWrapChildren:!0},m.createElement(nr.Z,nk({},n(),{variant:"secondary",columnGap:"1x"}),m.createElement(c.Z,null,"Options"),m.createElement(nb.Z,null))),m.createElement(nZ.Z,null,"Popover"))}),m.createElement(B.Z,{width:"max-content"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3")))},nC=t(72448);function nO(){return(nO=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var l in t)Object.prototype.hasOwnProperty.call(t,l)&&(e[l]=t[l])}return e}).apply(this,arguments)}var nP=function(){return m.createElement(d.Z,{alignItems:"center"},m.createElement(P.Z,null,m.createElement(F.Z,null,m.createElement(c.Z,null,"Options")),m.createElement(B.Z,{width:"max-content"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3"))),m.createElement(nC.Z,{variant:"solid",orientation:"vertical",height:"5x",mx:"4x"}),m.createElement(P.Z,null,m.createElement(F.Z,null,m.createElement(d.Z,{alignItems:"center",userSelect:"none"},m.createElement(c.Z,null,"Options"),m.createElement(G.Z,{width:"1x"}),m.createElement(nb.Z,null))),m.createElement(B.Z,{width:"max-content"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3"))),m.createElement(nC.Z,{variant:"solid",orientation:"vertical",height:"5x",mx:"4x"}),m.createElement(P.Z,null,m.createElement(F.Z,null,function(e){var n=e.getMenuToggleProps;return m.createElement(nr.Z,nO({},n(),{variant:"default"}),m.createElement(c.Z,null,"Options"),m.createElement(G.Z,{width:"1x"}),m.createElement(nb.Z,null))}),m.createElement(B.Z,{width:"max-content"},m.createElement(R.Z,null,"List item 1"),m.createElement(R.Z,null,"List item 2"),m.createElement(R.Z,null,"List item 3"))))},nF=t(13409);function nB(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,l=Array(n);t<n;t++)l[t]=e[t];return l}var nD=function(){var e,n=function(e){if(Array.isArray(e))return e}(e=(0,m.useState)(null))||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var l,i,r,o,s=[],a=!0,c=!1;try{for(r=(t=t.call(e)).next;!(a=(l=r.call(t)).done)&&(s.push(l.value),2!==s.length);a=!0);}catch(e){c=!0,i=e}finally{try{if(!a&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw i}}return s}}(e,2)||function(e,n){if(e){if("string"==typeof e)return nB(e,2);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return nB(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),t=n[0],l=n[1];return m.createElement(d.Z,{columnGap:"4x",alignItems:"center"},m.createElement(P.Z,null,m.createElement(u.Z,null,"Options"),m.createElement(B.Z,{onClick:function(e){var n=e.target.getAttribute("value");(0,nF.Rw)(n)||l(n)},width:"max-content"},m.createElement(R.Z,{value:1},"List item 1"),m.createElement(R.Z,{value:2},"List item 2"),m.createElement(N.Z,null),m.createElement(eq,null,m.createElement(e4,null,m.createElement(R.Z,null,m.createElement(d.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:"100%"},"Submenu",m.createElement(ne.Z,null)))),m.createElement(e6,{width:"max-content"},m.createElement(R.Z,{value:3},"List item 3"),m.createElement(R.Z,{value:4},"List item 4"))))),m.createElement(c.Z,null,"Selected: ",t))},nR=t(65019);function nN(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var l,i,r,o,s=[],a=!0,c=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;a=!1}else for(;!(a=(l=r.call(t)).done)&&(s.push(l.value),s.length!==n);a=!0);}catch(e){c=!0,i=e}finally{try{if(!a&&null!=t.return&&(o=t.return(),Object(o)!==o))return}finally{if(c)throw i}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return nG(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return nG(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function nG(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,l=Array(n);t<n;t++)l[t]=e[t];return l}var nU=function(){var e=nN((0,nR.Z)(!1),2),n=e[0],t=e[1],l=nN((0,m.useState)(null),2),i=l[0],r=l[1];return m.createElement(d.Z,{columnGap:"4x",alignItems:"center"},m.createElement(P.Z,{isOpen:n,onClose:function(){return t(!1)}},m.createElement(u.Z,{onClick:t},"Options"),m.createElement(B.Z,{onClick:function(e){var n=e.target.getAttribute("value");(0,nF.Rw)(n)||r(n)},width:"max-content"},m.createElement(R.Z,{value:1},"List item 1"),m.createElement(R.Z,{value:2},"List item 2"),m.createElement(N.Z,null),m.createElement(eq,null,m.createElement(e4,null,m.createElement(R.Z,null,m.createElement(d.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:"100%"},"Submenu",m.createElement(ne.Z,null)))),m.createElement(e6,{width:"max-content"},m.createElement(R.Z,{value:3},"List item 3"),m.createElement(R.Z,{value:4},"List item 4"))))),m.createElement(c.Z,null,"Selected: ",i))},nH=function(){return m.createElement(d.Z,{justify:"space-between"},m.createElement(d.Z,{flexDirection:"column"},m.createElement(R.Z,null,m.createElement(c.Z,null,"List item")),m.createElement(R.Z,null,m.createElement(c.Z,null,"List item")),m.createElement(N.Z,null),m.createElement(eq,null,m.createElement(e4,null,m.createElement(R.Z,null,m.createElement(d.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:"100%"},m.createElement(c.Z,null,"Submenu"),m.createElement(ne.Z,null)))),m.createElement(e6,{width:"max-content"},m.createElement(R.Z,null,m.createElement(c.Z,null,"List item")),m.createElement(R.Z,null,m.createElement(c.Z,null,"List item")),m.createElement(eq,null,m.createElement(e4,null,m.createElement(R.Z,null,m.createElement(d.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:"100%"},m.createElement(c.Z,null,"Submenu"),m.createElement(ne.Z,null)))),m.createElement(e6,{width:"max-content"},m.createElement(R.Z,null,m.createElement(c.Z,null,"List item")),m.createElement(R.Z,null,m.createElement(c.Z,null,"List item"))))))),m.createElement(d.Z,{flexDirection:"column"},m.createElement(R.Z,{pl:"9x"},m.createElement(c.Z,null,"List item")),m.createElement(R.Z,{pl:"9x"},m.createElement(c.Z,null,"List item")),m.createElement(N.Z,null),m.createElement(eq,{placement:"left-start"},m.createElement(e4,null,m.createElement(R.Z,null,m.createElement(d.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:"100%"},m.createElement(nT.Z,null),m.createElement(c.Z,null,"Submenu")))),m.createElement(e6,{width:"max-content"},m.createElement(R.Z,{pl:"9x"},m.createElement(c.Z,null,"List item")),m.createElement(R.Z,{pl:"9x"},m.createElement(c.Z,null,"List item")),m.createElement(eq,{placement:"left-start"},m.createElement(e4,null,m.createElement(R.Z,null,m.createElement(d.Z,{alignItems:"center",columnGap:"2x",justifyContent:"space-between",width:"100%"},m.createElement(nT.Z,null),m.createElement(c.Z,null,"Submenu")))),m.createElement(e6,{width:"max-content"},m.createElement(R.Z,null,m.createElement(c.Z,null,"List item")),m.createElement(R.Z,null,m.createElement(c.Z,null,"List item"))))))))},nz=t(78412),nV=function(){return m.createElement(d.Z,{display:"inline-flex",flexDirection:"column"},m.createElement(R.Z,{value:"settings"},m.createElement($.Z,{mr:"2x"}),m.createElement(c.Z,null,"Settings")),m.createElement(R.Z,{value:"accounts"},m.createElement(_.Z,{mr:"2x"}),m.createElement(c.Z,null,"Accounts")),m.createElement(R.Z,{value:"privacy-control"},m.createElement(Y.Z,{mr:"2x"}),m.createElement(c.Z,null,"Privacy control")),m.createElement(N.Z,null),m.createElement(R.Z,{disabled:!0,value:"restore-defaults"},m.createElement(nz.Z,{mr:"2x"}),m.createElement(c.Z,null,"Restore Defaults")))};function nW(e){var n=Object.assign({div:"div",h1:"h1",p:"p",h2:"h2",a:"a",svg:"svg",use:"use",ul:"ul",li:"li",code:"code",pre:"pre",h3:"h3",h4:"h4",strong:"strong",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,r.ah)(),e.components);return(0,i.jsxs)(n.div,{className:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,i.jsx)(n.h1,{id:"menu",children:"Menu"}),"\n",(0,i.jsx)(n.p,{children:"A menu is used to display a list of options to the user. It appears when the user interacts with a button, link, or other control that triggers an action."}),"\n",(0,i.jsxs)(n.h2,{id:"import",children:["Import",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Menu"}),": The component that provides the menu functionality."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MenuButton"}),": A button that composes ",(0,i.jsx)(n.code,{children:"Button"}),", ",(0,i.jsx)(n.code,{children:"MenuToggle"}),", and ",(0,i.jsx)(n.code,{children:"MenuToggleIcon"})," to create a menu button."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MenuContent"}),": An unstyled component that provides the menu content."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MenuDivider"}),": A divider that separates menu items."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MenuGroup"}),": A component that groups menu items."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MenuItem"}),": The individual menu items."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MenuList"}),": A styled ",(0,i.jsx)(n.code,{children:"MenuContent"})," that wraps the menu items."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MenuToggle"}),": The toggle that opens the menu. This is usually a button or link."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"MenuToggleIcon"}),": An indicator that appears next to the toggle. This is usually a chevron or arrow."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Submenu"}),": The component that provides the submenu functionality."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SubmenuContent"}),": An unstyled component that provides the submenu content."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SubmenuList"}),": A styled ",(0,i.jsx)(n.code,{children:"SubmenuContent"})," that wraps the submenu items."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SubmenuToggle"}),": The toggle that opens the submenu when the menu item is hovered over."]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-js",children:"import {\n  Menu,\n  MenuButton,\n  MenuContent,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  MenuToggle,\n  MenuToggleIcon,\n  Submenu,\n  SubmenuContent,\n  SubmenuList,\n  SubmenuToggle,\n  useMenu,\n  useSubmenu,\n} from '@tonic-ui/react';\n"})}),"\n",(0,i.jsxs)(n.h2,{id:"usage",children:["Usage",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.h3,{id:"basic-menus",children:["Basic menus",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#basic-menus",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsx)(n.p,{children:"Below is a simple example that shows the basic menu structure."}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nV,file:{data:'import { Flex, MenuDivider, MenuItem, Text } from \'@tonic-ui/react\';\nimport { LockIcon, SettingsIcon, UndoIcon, UserTeamIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst App = () => (\n<Flex\n  display="inline-flex"\n  flexDirection="column"\n>\n  <MenuItem value="settings">\n    <SettingsIcon mr="2x" />\n    <Text>Settings</Text>\n  </MenuItem>\n  <MenuItem value="accounts">\n    <UserTeamIcon mr="2x" />\n    <Text>Accounts</Text>\n  </MenuItem>\n  <MenuItem value="privacy-control">\n    <LockIcon mr="2x" />\n    <Text>Privacy control</Text>\n  </MenuItem>\n  <MenuDivider />\n  <MenuItem disabled value="restore-defaults">\n    <UndoIcon mr="2x" />\n    <Text>Restore Defaults</Text>\n  </MenuItem>\n</Flex>\n);\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import { Flex, MenuDivider, MenuItem, Text } from \'@tonic-ui/react\';\nimport { LockIcon, SettingsIcon, UndoIcon, UserTeamIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst App = () => (\n<Flex\n  display="inline-flex"\n  flexDirection="column"\n>\n  <MenuItem value="settings">\n    <SettingsIcon mr="2x" />\n    <Text>Settings</Text>\n  </MenuItem>\n  <MenuItem value="accounts">\n    <UserTeamIcon mr="2x" />\n    <Text>Accounts</Text>\n  </MenuItem>\n  <MenuItem value="privacy-control">\n    <LockIcon mr="2x" />\n    <Text>Privacy control</Text>\n  </MenuItem>\n  <MenuDivider />\n  <MenuItem disabled value="restore-defaults">\n    <UndoIcon mr="2x" />\n    <Text>Restore Defaults</Text>\n  </MenuItem>\n</Flex>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"cascading-submenus",children:["Cascading submenus",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#cascading-submenus",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsx)(n.p,{children:"The following example shows a menu with cascading submenus."}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nH,file:{data:'import { Flex, MenuDivider, MenuItem, Submenu, SubmenuList, SubmenuToggle, Text } from \'@tonic-ui/react\';\nimport { AngleLeftIcon, AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst App = () => (\n  <Flex\n    justify="space-between"\n  >\n    <Flex\n      flexDirection="column"\n    >\n      <MenuItem>\n        <Text>List item</Text>\n      </MenuItem>\n      <MenuItem>\n        <Text>List item</Text>\n      </MenuItem>\n      <MenuDivider />\n      <Submenu>\n        <SubmenuToggle>\n          <MenuItem>\n            <Flex\n              alignItems="center"\n              columnGap="2x"\n              justifyContent="space-between"\n              width="100%"\n            >\n              <Text>Submenu</Text>\n              <AngleRightIcon />\n            </Flex>\n          </MenuItem>\n        </SubmenuToggle>\n        <SubmenuList width="max-content">\n          <MenuItem>\n            <Text>List item</Text>\n          </MenuItem>\n          <MenuItem>\n            <Text>List item</Text>\n          </MenuItem>\n          <Submenu>\n            <SubmenuToggle>\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  <Text>Submenu</Text>\n                  <AngleRightIcon />\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList width="max-content">\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        </SubmenuList>\n      </Submenu>\n    </Flex>\n    <Flex\n      flexDirection="column"\n    >\n      <MenuItem pl="9x">\n        <Text>List item</Text>\n      </MenuItem>\n      <MenuItem pl="9x">\n        <Text>List item</Text>\n      </MenuItem>\n      <MenuDivider />\n      <Submenu placement="left-start">\n        <SubmenuToggle>\n          <MenuItem>\n            <Flex\n              alignItems="center"\n              columnGap="2x"\n              justifyContent="space-between"\n              width="100%"\n            >\n              <AngleLeftIcon />\n              <Text>Submenu</Text>\n            </Flex>\n          </MenuItem>\n        </SubmenuToggle>\n        <SubmenuList width="max-content">\n          <MenuItem pl="9x">\n            <Text>List item</Text>\n          </MenuItem>\n          <MenuItem pl="9x">\n            <Text>List item</Text>\n          </MenuItem>\n          <Submenu placement="left-start">\n            <SubmenuToggle>\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  <AngleLeftIcon />\n                  <Text>Submenu</Text>\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList\n              width="max-content"\n            >\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        </SubmenuList>\n      </Submenu>\n    </Flex>\n  </Flex>\n);\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import { Flex, MenuDivider, MenuItem, Submenu, SubmenuList, SubmenuToggle, Text } from \'@tonic-ui/react\';\nimport { AngleLeftIcon, AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst App = () => (\n  <Flex\n    justify="space-between"\n  >\n    <Flex\n      flexDirection="column"\n    >\n      <MenuItem>\n        <Text>List item</Text>\n      </MenuItem>\n      <MenuItem>\n        <Text>List item</Text>\n      </MenuItem>\n      <MenuDivider />\n      <Submenu>\n        <SubmenuToggle>\n          <MenuItem>\n            <Flex\n              alignItems="center"\n              columnGap="2x"\n              justifyContent="space-between"\n              width="100%"\n            >\n              <Text>Submenu</Text>\n              <AngleRightIcon />\n            </Flex>\n          </MenuItem>\n        </SubmenuToggle>\n        <SubmenuList width="max-content">\n          <MenuItem>\n            <Text>List item</Text>\n          </MenuItem>\n          <MenuItem>\n            <Text>List item</Text>\n          </MenuItem>\n          <Submenu>\n            <SubmenuToggle>\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  <Text>Submenu</Text>\n                  <AngleRightIcon />\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList width="max-content">\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        </SubmenuList>\n      </Submenu>\n    </Flex>\n    <Flex\n      flexDirection="column"\n    >\n      <MenuItem pl="9x">\n        <Text>List item</Text>\n      </MenuItem>\n      <MenuItem pl="9x">\n        <Text>List item</Text>\n      </MenuItem>\n      <MenuDivider />\n      <Submenu placement="left-start">\n        <SubmenuToggle>\n          <MenuItem>\n            <Flex\n              alignItems="center"\n              columnGap="2x"\n              justifyContent="space-between"\n              width="100%"\n            >\n              <AngleLeftIcon />\n              <Text>Submenu</Text>\n            </Flex>\n          </MenuItem>\n        </SubmenuToggle>\n        <SubmenuList width="max-content">\n          <MenuItem pl="9x">\n            <Text>List item</Text>\n          </MenuItem>\n          <MenuItem pl="9x">\n            <Text>List item</Text>\n          </MenuItem>\n          <Submenu placement="left-start">\n            <SubmenuToggle>\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  <AngleLeftIcon />\n                  <Text>Submenu</Text>\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList\n              width="max-content"\n            >\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        </SubmenuList>\n      </Submenu>\n    </Flex>\n  </Flex>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"controlled-and-uncontrolled-menu",children:["Controlled and uncontrolled menu",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#controlled-and-uncontrolled-menu",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["Pass ",(0,i.jsx)(n.code,{children:"isOpen"})," to the ",(0,i.jsx)(n.code,{children:"Menu"})," component to control the state of the menu."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nU,file:{data:'import {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Submenu,\n  SubmenuList,\n  SubmenuToggle,\n  Text,\n} from \'@tonic-ui/react\';\nimport { AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport { isNullish } from \'@tonic-ui/utils\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [isOpen, toggleIsOpen] = useToggle(false);\n  const onClose = () => toggleIsOpen(false);\n  const [selectedValue, setSelectedValue] = useState(null);\n  const handleClickMenuItem = (event) => {\n    const value = event.target.getAttribute(\'value\');\n    if (!isNullish(value)) {\n      setSelectedValue(value);\n    }\n  };\n\n  return (\n    <Flex columnGap="4x" alignItems="center">\n      <Menu isOpen={isOpen} onClose={onClose}>\n        <MenuButton onClick={toggleIsOpen}>\n          Options\n        </MenuButton>\n        <MenuList\n          onClick={handleClickMenuItem}\n          width="max-content"\n        >\n          <MenuItem value={1}>\n            List item 1\n          </MenuItem>\n          <MenuItem value={2}>\n            List item 2\n          </MenuItem>\n          <MenuDivider />\n          <Submenu>\n            <SubmenuToggle>\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  Submenu\n                  <AngleRightIcon />\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList width="max-content">\n              <MenuItem value={3}>\n                List item 3\n              </MenuItem>\n              <MenuItem value={4}>\n                List item 4\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        </MenuList>\n      </Menu>\n      <Text>Selected: {selectedValue}</Text>\n    </Flex>\n  );\n};\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Submenu,\n  SubmenuList,\n  SubmenuToggle,\n  Text,\n} from \'@tonic-ui/react\';\nimport { AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport { isNullish } from \'@tonic-ui/utils\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [isOpen, toggleIsOpen] = useToggle(false);\n  const onClose = () => toggleIsOpen(false);\n  const [selectedValue, setSelectedValue] = useState(null);\n  const handleClickMenuItem = (event) => {\n    const value = event.target.getAttribute(\'value\');\n    if (!isNullish(value)) {\n      setSelectedValue(value);\n    }\n  };\n\n  return (\n    <Flex columnGap="4x" alignItems="center">\n      <Menu isOpen={isOpen} onClose={onClose}>\n        <MenuButton onClick={toggleIsOpen}>\n          Options\n        </MenuButton>\n        <MenuList\n          onClick={handleClickMenuItem}\n          width="max-content"\n        >\n          <MenuItem value={1}>\n            List item 1\n          </MenuItem>\n          <MenuItem value={2}>\n            List item 2\n          </MenuItem>\n          <MenuDivider />\n          <Submenu>\n            <SubmenuToggle>\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  Submenu\n                  <AngleRightIcon />\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList width="max-content">\n              <MenuItem value={3}>\n                List item 3\n              </MenuItem>\n              <MenuItem value={4}>\n                List item 4\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        </MenuList>\n      </Menu>\n      <Text>Selected: {selectedValue}</Text>\n    </Flex>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.p,{children:["Menu is uncontrolled by default. You can set ",(0,i.jsx)(n.code,{children:"defaultIsOpen"})," to ",(0,i.jsx)(n.code,{children:"true"})," to have the menu open for the first render."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nD,file:{data:'import {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Submenu,\n  SubmenuList,\n  SubmenuToggle,\n  Text,\n} from \'@tonic-ui/react\';\nimport { AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport { isNullish } from \'@tonic-ui/utils\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [selectedValue, setSelectedValue] = useState(null);\n  const handleClickMenuItem = (event) => {\n    const value = event.target.getAttribute(\'value\');\n    if (!isNullish(value)) {\n      setSelectedValue(value);\n    }\n  };\n\n  return (\n    <Flex columnGap="4x" alignItems="center">\n      <Menu>\n        <MenuButton>\n          Options\n        </MenuButton>\n        <MenuList\n          onClick={handleClickMenuItem}\n          width="max-content"\n        >\n          <MenuItem value={1}>\n            List item 1\n          </MenuItem>\n          <MenuItem value={2}>\n            List item 2\n          </MenuItem>\n          <MenuDivider />\n          <Submenu>\n            <SubmenuToggle>\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  Submenu\n                  <AngleRightIcon />\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList width="max-content">\n              <MenuItem value={3}>\n                List item 3\n              </MenuItem>\n              <MenuItem value={4}>\n                List item 4\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        </MenuList>\n      </Menu>\n      <Text>Selected: {selectedValue}</Text>\n    </Flex>\n  );\n};\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n  Submenu,\n  SubmenuList,\n  SubmenuToggle,\n  Text,\n} from \'@tonic-ui/react\';\nimport { AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport { isNullish } from \'@tonic-ui/utils\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [selectedValue, setSelectedValue] = useState(null);\n  const handleClickMenuItem = (event) => {\n    const value = event.target.getAttribute(\'value\');\n    if (!isNullish(value)) {\n      setSelectedValue(value);\n    }\n  };\n\n  return (\n    <Flex columnGap="4x" alignItems="center">\n      <Menu>\n        <MenuButton>\n          Options\n        </MenuButton>\n        <MenuList\n          onClick={handleClickMenuItem}\n          width="max-content"\n        >\n          <MenuItem value={1}>\n            List item 1\n          </MenuItem>\n          <MenuItem value={2}>\n            List item 2\n          </MenuItem>\n          <MenuDivider />\n          <Submenu>\n            <SubmenuToggle>\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  Submenu\n                  <AngleRightIcon />\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList width="max-content">\n              <MenuItem value={3}>\n                List item 3\n              </MenuItem>\n              <MenuItem value={4}>\n                List item 4\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        </MenuList>\n      </Menu>\n      <Text>Selected: {selectedValue}</Text>\n    </Flex>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"menutoggle",children:["MenuToggle",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menutoggle",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MenuToggle"})," is a toggle that opens the menu when clicked. It is usually a button or link. The ",(0,i.jsx)(n.code,{children:"MenuToggleIcon"})," can be added to the toggle to indicate the menu is open or closed."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nP,file:{data:'import { Button, Divider, Flex, Menu, MenuItem, MenuList, MenuToggle, MenuToggleIcon, Space, Text } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Flex alignItems="center">\n    <Menu>\n      <MenuToggle>\n        <Text>Options</Text>\n      </MenuToggle>\n      <MenuList width="max-content">\n        <MenuItem>\n          List item 1\n        </MenuItem>\n        <MenuItem>\n          List item 2\n        </MenuItem>\n        <MenuItem>\n          List item 3\n        </MenuItem>\n      </MenuList>\n    </Menu>\n    <Divider\n      variant="solid"\n      orientation="vertical"\n      height="5x"\n      mx="4x"\n    />\n    <Menu>\n      <MenuToggle>\n        <Flex alignItems="center" userSelect="none">\n          <Text>Options</Text>\n          <Space width="1x" />\n          <MenuToggleIcon />\n        </Flex>\n      </MenuToggle>\n      <MenuList width="max-content">\n        <MenuItem>\n          List item 1\n        </MenuItem>\n        <MenuItem>\n          List item 2\n        </MenuItem>\n        <MenuItem>\n          List item 3\n        </MenuItem>\n      </MenuList>\n    </Menu>\n    <Divider\n      variant="solid"\n      orientation="vertical"\n      height="5x"\n      mx="4x"\n    />\n    <Menu>\n      <MenuToggle>\n        {({ getMenuToggleProps }) => {\n          return (\n            <Button\n              {...getMenuToggleProps()}\n              variant="default"\n            >\n              <Text>Options</Text>\n              <Space width="1x" />\n              <MenuToggleIcon />\n            </Button>\n          );\n        }}\n      </MenuToggle>\n      <MenuList width="max-content">\n        <MenuItem>\n          List item 1\n        </MenuItem>\n        <MenuItem>\n          List item 2\n        </MenuItem>\n        <MenuItem>\n          List item 3\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  </Flex>\n);\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Divider, Flex, Menu, MenuItem, MenuList, MenuToggle, MenuToggleIcon, Space, Text } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Flex alignItems="center">\n    <Menu>\n      <MenuToggle>\n        <Text>Options</Text>\n      </MenuToggle>\n      <MenuList width="max-content">\n        <MenuItem>\n          List item 1\n        </MenuItem>\n        <MenuItem>\n          List item 2\n        </MenuItem>\n        <MenuItem>\n          List item 3\n        </MenuItem>\n      </MenuList>\n    </Menu>\n    <Divider\n      variant="solid"\n      orientation="vertical"\n      height="5x"\n      mx="4x"\n    />\n    <Menu>\n      <MenuToggle>\n        <Flex alignItems="center" userSelect="none">\n          <Text>Options</Text>\n          <Space width="1x" />\n          <MenuToggleIcon />\n        </Flex>\n      </MenuToggle>\n      <MenuList width="max-content">\n        <MenuItem>\n          List item 1\n        </MenuItem>\n        <MenuItem>\n          List item 2\n        </MenuItem>\n        <MenuItem>\n          List item 3\n        </MenuItem>\n      </MenuList>\n    </Menu>\n    <Divider\n      variant="solid"\n      orientation="vertical"\n      height="5x"\n      mx="4x"\n    />\n    <Menu>\n      <MenuToggle>\n        {({ getMenuToggleProps }) => {\n          return (\n            <Button\n              {...getMenuToggleProps()}\n              variant="default"\n            >\n              <Text>Options</Text>\n              <Space width="1x" />\n              <MenuToggleIcon />\n            </Button>\n          );\n        }}\n      </MenuToggle>\n      <MenuList width="max-content">\n        <MenuItem>\n          List item 1\n        </MenuItem>\n        <MenuItem>\n          List item 2\n        </MenuItem>\n        <MenuItem>\n          List item 3\n        </MenuItem>\n      </MenuList>\n    </Menu>\n  </Flex>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.p,{children:["Here is an example showcasing the combination of ",(0,i.jsx)(n.code,{children:"MenuToggle"}),", ",(0,i.jsx)(n.code,{children:"Popover"}),", and ",(0,i.jsx)(n.code,{children:"Button"})," components."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nA,file:{data:'import { Button, Menu, MenuItem, MenuList, MenuToggle, MenuToggleIcon, Popover, PopoverContent, PopoverTrigger, Text } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Menu>\n    <MenuToggle\n      disabled={true} // Use the `disabled` prop to control whether the button will be disabled\n    >\n      {({ getMenuToggleProps }) => (\n        <Popover\n          disabled={false} // Use the `disabled` prop to control whether the popover will be displayed\n          trigger="hover"\n        >\n          <PopoverTrigger shouldWrapChildren>\n            <Button\n              {...getMenuToggleProps()}\n              variant="secondary"\n              columnGap="1x"\n            >\n              <Text>Options</Text>\n              <MenuToggleIcon />\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent>\n            Popover\n          </PopoverContent>\n        </Popover>\n      )}\n    </MenuToggle>\n    <MenuList width="max-content">\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Menu, MenuItem, MenuList, MenuToggle, MenuToggleIcon, Popover, PopoverContent, PopoverTrigger, Text } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Menu>\n    <MenuToggle\n      disabled={true} // Use the `disabled` prop to control whether the button will be disabled\n    >\n      {({ getMenuToggleProps }) => (\n        <Popover\n          disabled={false} // Use the `disabled` prop to control whether the popover will be displayed\n          trigger="hover"\n        >\n          <PopoverTrigger shouldWrapChildren>\n            <Button\n              {...getMenuToggleProps()}\n              variant="secondary"\n              columnGap="1x"\n            >\n              <Text>Options</Text>\n              <MenuToggleIcon />\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent>\n            Popover\n          </PopoverContent>\n        </Popover>\n      )}\n    </MenuToggle>\n    <MenuList width="max-content">\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"menutoggleicon",children:["MenuToggleIcon",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menutoggleicon",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MenuToggleIcon"})," is an indicator that indicates the menu is open or closed."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nS,file:{data:"import { Menu, MenuItem, MenuList, MenuToggle, MenuToggleIcon } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuToggle>\n      <MenuToggleIcon />\n    </MenuToggle>\n    <MenuList width=\"max-content\">\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:"import { Menu, MenuItem, MenuList, MenuToggle, MenuToggleIcon } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuToggle>\n      <MenuToggleIcon />\n    </MenuToggle>\n    <MenuList width=\"max-content\">\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsx)(n.p,{children:"You can also customize the indicator by passing a component as children or a function as children that returns a component."}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nw,file:{data:"import { Menu, MenuItem, MenuList, MenuToggle, MenuToggleIcon } from '@tonic-ui/react';\nimport {\n  AngleUpIcon,\n  AngleDownIcon,\n  AngleLeftIcon,\n  AngleRightIcon,\n} from '@tonic-ui/react-icons';\nimport React from 'react';\n\nconst App = () => (\n  <Menu placement=\"bottom-start\">\n    {({ isOpen, direction }) => {\n      return (\n        <>\n          <MenuToggle>\n            <MenuToggleIcon>\n              {(state, { ref, style: styleProps }) => {\n                // direction is either 'up' or 'down'\n                const IconComponent = {\n                  up: AngleUpIcon,\n                  down: AngleDownIcon,\n                  left: AngleLeftIcon,\n                  right: AngleRightIcon,\n                }[direction];\n                if (direction === 'up' || direction === 'down') {\n                  styleProps.transform = isOpen ? 'scaleY(-1)' : 'scaleY(1)';\n                } else if (direction === 'left' || direction === 'right') {\n                  styleProps.transform = isOpen ? 'scaleX(-1)' : 'scaleX(1)';\n                }\n\n                return (\n                  <IconComponent\n                    ref={ref}\n                    size=\"4x\"\n                    {...styleProps}\n                  />\n                );\n              }}\n            </MenuToggleIcon>\n          </MenuToggle>\n          <MenuList width=\"max-content\">\n            <MenuItem>\n              List item 1\n            </MenuItem>\n            <MenuItem>\n              List item 2\n            </MenuItem>\n            <MenuItem>\n              List item 3\n            </MenuItem>\n          </MenuList>\n        </>\n      );\n    }}\n  </Menu>\n);\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:"import { Menu, MenuItem, MenuList, MenuToggle, MenuToggleIcon } from '@tonic-ui/react';\nimport {\n  AngleUpIcon,\n  AngleDownIcon,\n  AngleLeftIcon,\n  AngleRightIcon,\n} from '@tonic-ui/react-icons';\nimport React from 'react';\n\nconst App = () => (\n  <Menu placement=\"bottom-start\">\n    {({ isOpen, direction }) => {\n      return (\n        <>\n          <MenuToggle>\n            <MenuToggleIcon>\n              {(state, { ref, style: styleProps }) => {\n                // direction is either 'up' or 'down'\n                const IconComponent = {\n                  up: AngleUpIcon,\n                  down: AngleDownIcon,\n                  left: AngleLeftIcon,\n                  right: AngleRightIcon,\n                }[direction];\n                if (direction === 'up' || direction === 'down') {\n                  styleProps.transform = isOpen ? 'scaleY(-1)' : 'scaleY(1)';\n                } else if (direction === 'left' || direction === 'right') {\n                  styleProps.transform = isOpen ? 'scaleX(-1)' : 'scaleX(1)';\n                }\n\n                return (\n                  <IconComponent\n                    ref={ref}\n                    size=\"4x\"\n                    {...styleProps}\n                  />\n                );\n              }}\n            </MenuToggleIcon>\n          </MenuToggle>\n          <MenuList width=\"max-content\">\n            <MenuItem>\n              List item 1\n            </MenuItem>\n            <MenuItem>\n              List item 2\n            </MenuItem>\n            <MenuItem>\n              List item 3\n            </MenuItem>\n          </MenuList>\n        </>\n      );\n    }}\n  </Menu>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"menubutton",children:["MenuButton",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menubutton",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MenuButton"})," composes ",(0,i.jsx)(n.code,{children:"Button"}),", ",(0,i.jsx)(n.code,{children:"MenuToggle"}),", and ",(0,i.jsx)(n.code,{children:"MenuToggleIcon"})," to create a button that opens the menu. It's an useful alternative to ",(0,i.jsx)(n.code,{children:"MenuToggle"})," when the toggle is a button."]}),"\n",(0,i.jsx)(n.pre,{disabled:!0,children:(0,i.jsx)(n.code,{className:"language-jsx",children:"const MenuButton = (props) => {\n  // Define custom styles for the menu button\n  const styleProps = {\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    columnGap: '1x',\n  };\n\n  return (\n    <MenuToggle>\n      {({ getMenuToggleProps }) => (\n        <Button\n          {...getMenuToggleProps()}\n          {...styleProps}\n          {...props}\n        >\n          {children && (\n            <Box>{children}</Box>\n          )}\n          <MenuToggleIcon />\n        </Button>\n      )}\n    </MenuToggle>\n  );\n};\n"})}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nj,file:{data:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuButton variant=\"secondary\">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList width=\"max-content\">\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuButton variant=\"secondary\">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList width=\"max-content\">\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"menugroup",children:["MenuGroup",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menugroup",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["To group related menu items, wrap them in a ",(0,i.jsx)(n.code,{children:"MenuGroup"})," and pass a ",(0,i.jsx)(n.code,{children:"title"})," prop for the group title."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nM,file:{data:'import { ButtonBase, Flex, MenuDivider, MenuGroup, MenuItem, Space, Text } from \'@tonic-ui/react\';\nimport { SettingsIcon, UserIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst Avatar = (props) => (\n  <Flex\n    p="1x"\n    borderRadius="50%"\n    alignItems="center"\n    justifyContent="center"\n    fontSize="xs"\n    lineHeight="1"\n    {...props}\n  />\n);\n\nconst App = () => (\n  <Flex\n    flexDirection="column"\n    width="fit-content"\n  >\n    <MenuItem>\n      <Text>My Profile</Text>\n    </MenuItem>\n    <MenuDivider />\n    <MenuGroup\n      title={(\n        <Flex justifyContent="space-between">\n          <Text>Other profiles</Text>\n          <Space minWidth="10x" />\n          <ButtonBase title="Manage profiles">\n            <SettingsIcon size="3x" />\n          </ButtonBase>\n        </Flex>\n      )}\n    >\n      <MenuItem>\n        <Avatar color="white" bg="blue:50" mr="3x">\n          JD\n        </Avatar>\n        <Text>John Doe</Text>\n      </MenuItem>\n      <MenuItem>\n        <Avatar color="white" bg="gray:50" mr="3x">\n          <UserIcon size="3x" />\n        </Avatar>\n        <Text>Guest</Text>\n      </MenuItem>\n    </MenuGroup>\n  </Flex>\n);\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import { ButtonBase, Flex, MenuDivider, MenuGroup, MenuItem, Space, Text } from \'@tonic-ui/react\';\nimport { SettingsIcon, UserIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst Avatar = (props) => (\n  <Flex\n    p="1x"\n    borderRadius="50%"\n    alignItems="center"\n    justifyContent="center"\n    fontSize="xs"\n    lineHeight="1"\n    {...props}\n  />\n);\n\nconst App = () => (\n  <Flex\n    flexDirection="column"\n    width="fit-content"\n  >\n    <MenuItem>\n      <Text>My Profile</Text>\n    </MenuItem>\n    <MenuDivider />\n    <MenuGroup\n      title={(\n        <Flex justifyContent="space-between">\n          <Text>Other profiles</Text>\n          <Space minWidth="10x" />\n          <ButtonBase title="Manage profiles">\n            <SettingsIcon size="3x" />\n          </ButtonBase>\n        </Flex>\n      )}\n    >\n      <MenuItem>\n        <Avatar color="white" bg="blue:50" mr="3x">\n          JD\n        </Avatar>\n        <Text>John Doe</Text>\n      </MenuItem>\n      <MenuItem>\n        <Avatar color="white" bg="gray:50" mr="3x">\n          <UserIcon size="3x" />\n        </Avatar>\n        <Text>Guest</Text>\n      </MenuItem>\n    </MenuGroup>\n  </Flex>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"menu-sizing",children:["Menu sizing",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menu-sizing",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["To change the width of the menu, pass ",(0,i.jsx)(n.code,{children:"width"})," prop to the ",(0,i.jsx)(n.code,{children:"MenuList"})," component."]}),"\n",(0,i.jsxs)(n.h4,{id:"fixed-width",children:["fixed width",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#fixed-width",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nx,file:{data:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuButton variant=\"secondary\">\n      <Text>This is a very long menu button</Text>\n    </MenuButton>\n    <MenuList width={200}>\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuButton variant=\"secondary\">\n      <Text>This is a very long menu button</Text>\n    </MenuButton>\n    <MenuList width={200}>\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h4,{id:"full-width",children:["full width",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#full-width",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["Set ",(0,i.jsx)(n.code,{children:'display="block"'})," on the ",(0,i.jsx)(n.code,{children:"Menu"})," and set ",(0,i.jsx)(n.code,{children:'width="100%"'})," on ",(0,i.jsx)(n.code,{children:"MenuButton"})," and ",(0,i.jsx)(n.code,{children:"MenuList"})," to make the menu as wide as the content."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nh,file:{data:'import { Menu, MenuButton, MenuItem, MenuList, Text } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Menu display="block">\n    <MenuButton variant="secondary" width="100%">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList width="100%">\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import { Menu, MenuButton, MenuItem, MenuList, Text } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Menu display="block">\n    <MenuButton variant="secondary" width="100%">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList width="100%">\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h4,{id:"min-content",children:[(0,i.jsx)(n.code,{children:"min-content"}),(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#min-content",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nm,file:{data:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuButton variant=\"secondary\">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList width=\"min-content\">\n      <MenuItem >\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuButton variant=\"secondary\">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList width=\"min-content\">\n      <MenuItem >\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h4,{id:"max-content",children:[(0,i.jsx)(n.code,{children:"max-content"}),(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#max-content",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nd,file:{data:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuButton variant=\"secondary\">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList width=\"max-content\">\n      <MenuItem>\n        This is a very long list item 1\n      </MenuItem>\n      <MenuItem>\n        This is a very long list item 2\n      </MenuItem>\n      <MenuItem>\n        This is a very long list item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu>\n    <MenuButton variant=\"secondary\">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList width=\"max-content\">\n      <MenuItem>\n        This is a very long list item 1\n      </MenuItem>\n      <MenuItem>\n        This is a very long list item 2\n      </MenuItem>\n      <MenuItem>\n        This is a very long list item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"placement",children:["Placement",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#placement",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["To position the menu relative to the toggle, pass a ",(0,i.jsx)(n.code,{children:"placement"})," prop to ",(0,i.jsx)(n.code,{children:"Menu"}),"."]}),"\n",(0,i.jsx)(n.p,{children:"The value can be one of the following:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"top"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"top-start"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"top-end"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"bottom"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"bottom-start"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"bottom-end"})}),"\n"]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nu,file:{data:"import { Box, Button, Flex, Grid, Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React, { useState } from 'react';\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst gridAreas = [\n  ['top-start', 'top', 'top-end'],\n  ['.', '.', '.'],\n  ['.', 'center', '.'],\n  ['.', '.', '.'],\n  ['bottom-start', 'bottom', 'bottom-end'],\n];\n\nconst App = () => {\n  const [placement, changePlacementBy] = useSelection('bottom-start');\n  const gridTemplateAreas = gridAreas.map((row) => {\n    const rowString = '\"' + row.join(' ') + '\"';\n    return rowString;\n  }).join(' ');\n\n  return (\n    <Flex>\n      <Grid\n        templateAreas={gridTemplateAreas}\n        autoColumns=\"minmax(0, 1fr)\"\n        autoFlow=\"row\"\n        gap=\"2x\"\n      >\n        {gridAreas.flat().map((value, key) => {\n          if (value === '.') {\n            return (<Box key={key} />);\n          }\n\n          if (value === 'center') {\n            return (\n              <Box key={key}>\n                <Menu placement={placement}>\n                  <MenuButton variant=\"secondary\" width={150}>\n                    <Text>Options</Text>\n                  </MenuButton>\n                  <MenuList>\n                    <MenuItem>\n                      List item 1\n                    </MenuItem>\n                    <MenuItem>\n                      List item 2\n                    </MenuItem>\n                    <MenuItem>\n                      List item 3\n                    </MenuItem>\n                  </MenuList>\n                </Menu>\n              </Box>\n            );\n          }\n\n          const changePlacement = changePlacementBy(value);\n          const onClick = () => {\n            changePlacement();\n          };\n\n          return (\n            <Box key={key}>\n              <Button\n                selected={value === placement}\n                onClick={onClick}\n                width=\"100%\"\n              >\n                {value}\n              </Button>\n            </Box>\n          );\n        })}\n      </Grid>\n    </Flex>\n  );\n};\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:"import { Box, Button, Flex, Grid, Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React, { useState } from 'react';\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst gridAreas = [\n  ['top-start', 'top', 'top-end'],\n  ['.', '.', '.'],\n  ['.', 'center', '.'],\n  ['.', '.', '.'],\n  ['bottom-start', 'bottom', 'bottom-end'],\n];\n\nconst App = () => {\n  const [placement, changePlacementBy] = useSelection('bottom-start');\n  const gridTemplateAreas = gridAreas.map((row) => {\n    const rowString = '\"' + row.join(' ') + '\"';\n    return rowString;\n  }).join(' ');\n\n  return (\n    <Flex>\n      <Grid\n        templateAreas={gridTemplateAreas}\n        autoColumns=\"minmax(0, 1fr)\"\n        autoFlow=\"row\"\n        gap=\"2x\"\n      >\n        {gridAreas.flat().map((value, key) => {\n          if (value === '.') {\n            return (<Box key={key} />);\n          }\n\n          if (value === 'center') {\n            return (\n              <Box key={key}>\n                <Menu placement={placement}>\n                  <MenuButton variant=\"secondary\" width={150}>\n                    <Text>Options</Text>\n                  </MenuButton>\n                  <MenuList>\n                    <MenuItem>\n                      List item 1\n                    </MenuItem>\n                    <MenuItem>\n                      List item 2\n                    </MenuItem>\n                    <MenuItem>\n                      List item 3\n                    </MenuItem>\n                  </MenuList>\n                </Menu>\n              </Box>\n            );\n          }\n\n          const changePlacement = changePlacementBy(value);\n          const onClick = () => {\n            changePlacement();\n          };\n\n          return (\n            <Box key={key}>\n              <Button\n                selected={value === placement}\n                onClick={onClick}\n                width=\"100%\"\n              >\n                {value}\n              </Button>\n            </Box>\n          );\n        })}\n      </Grid>\n    </Flex>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"positioning",children:["Positioning",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#positioning",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"offset"})," prop can be used to change the menu position. It accepts an array with two numbers in the form of ",(0,i.jsx)(n.code,{children:"[skidding, distance]"}),"."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Skidding"})}),"\n",(0,i.jsxs)(n.p,{children:["The first number, ",(0,i.jsx)(n.code,{children:"skidding"}),", displaces the menu along the toggle. This value is specified in pixels."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Distance"})}),"\n",(0,i.jsxs)(n.p,{children:["The second number, ",(0,i.jsx)(n.code,{children:"distance"}),", controls the distance between the menu and the toggle. This value is specified in pixels."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nl,file:{data:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu offset={[16, 8]}>\n    <MenuButton variant=\"secondary\">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList>\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:"import { Menu, MenuButton, MenuItem, MenuList, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Menu offset={[16, 8]}>\n    <MenuButton variant=\"secondary\">\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList>\n      <MenuItem>\n        List item 1\n      </MenuItem>\n      <MenuItem>\n        List item 2\n      </MenuItem>\n      <MenuItem>\n        List item 3\n      </MenuItem>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"scrolling",children:["Scrolling",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#scrolling",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["To make the menu scrollable, pass ",(0,i.jsx)(n.code,{children:'overflow="auto"'})," and ",(0,i.jsx)(n.code,{children:"maxHeight"})," to ",(0,i.jsx)(n.code,{children:"MenuList"}),". The menu will become scrollable when the menu items exceed the height of the menu."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nt,file:{data:'import {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Submenu,\n  SubmenuToggle,\n  SubmenuList,\n  Text,\n} from \'@tonic-ui/react\';\nimport { AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst App = () => (\n  <Menu display="block">\n    <MenuButton variant="secondary" width={200}>\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList\n      maxHeight={200}\n      overflow="auto"\n      width={200}\n    >\n      {Array.from({ length: 100 }).map((_, key) => (\n        <Submenu\n          key={key}\n          placement="right-start"\n        >\n          <SubmenuToggle width="100%">\n            <MenuItem>\n              <Flex\n                alignItems="center"\n                columnGap="2x"\n                justifyContent="space-between"\n                width="100%"\n              >\n                <Text>List Item {key + 1}</Text>\n                <AngleRightIcon />\n              </Flex>\n            </MenuItem>\n          </SubmenuToggle>\n          <SubmenuList\n            PopperProps={{\n              usePortal: true,\n            }}\n            width="max-content"\n          >\n            <MenuItem>\n              <Text>List item</Text>\n            </MenuItem>\n            <MenuItem>\n              <Text>List item</Text>\n            </MenuItem>\n          </SubmenuList>\n        </Submenu>\n      ))}\n    </MenuList>\n  </Menu>\n);\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Submenu,\n  SubmenuToggle,\n  SubmenuList,\n  Text,\n} from \'@tonic-ui/react\';\nimport { AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst App = () => (\n  <Menu display="block">\n    <MenuButton variant="secondary" width={200}>\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList\n      maxHeight={200}\n      overflow="auto"\n      width={200}\n    >\n      {Array.from({ length: 100 }).map((_, key) => (\n        <Submenu\n          key={key}\n          placement="right-start"\n        >\n          <SubmenuToggle width="100%">\n            <MenuItem>\n              <Flex\n                alignItems="center"\n                columnGap="2x"\n                justifyContent="space-between"\n                width="100%"\n              >\n                <Text>List Item {key + 1}</Text>\n                <AngleRightIcon />\n              </Flex>\n            </MenuItem>\n          </SubmenuToggle>\n          <SubmenuList\n            PopperProps={{\n              usePortal: true,\n            }}\n            width="max-content"\n          >\n            <MenuItem>\n              <Text>List item</Text>\n            </MenuItem>\n            <MenuItem>\n              <Text>List item</Text>\n            </MenuItem>\n          </SubmenuList>\n        </Submenu>\n      ))}\n    </MenuList>\n  </Menu>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.p,{children:["You can also use the ",(0,i.jsx)(n.code,{children:"Scrollbar"})," component to override the default scrollbar."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:nn,file:{data:'import {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Scrollbar,\n  Submenu,\n  SubmenuList,\n  SubmenuToggle,\n  Text,\n} from \'@tonic-ui/react\';\nimport { AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst App = () => (\n  <Menu display="block">\n    <MenuButton variant="secondary" width={200}>\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList\n      width={200}\n    >\n      <Scrollbar\n        height={200}\n        overflowY="visible"\n      >\n        {Array.from({ length: 100 }).map((_, key) => (\n          <Submenu\n            key={key}\n            placement="right-start"\n          >\n            <SubmenuToggle width="100%">\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  <Text>List Item {key + 1}</Text>\n                  <AngleRightIcon />\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList\n              PopperProps={{\n                usePortal: true,\n              }}\n              width="max-content"\n            >\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        ))}\n      </Scrollbar>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Flex,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Scrollbar,\n  Submenu,\n  SubmenuList,\n  SubmenuToggle,\n  Text,\n} from \'@tonic-ui/react\';\nimport { AngleRightIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst App = () => (\n  <Menu display="block">\n    <MenuButton variant="secondary" width={200}>\n      <Text>Options</Text>\n    </MenuButton>\n    <MenuList\n      width={200}\n    >\n      <Scrollbar\n        height={200}\n        overflowY="visible"\n      >\n        {Array.from({ length: 100 }).map((_, key) => (\n          <Submenu\n            key={key}\n            placement="right-start"\n          >\n            <SubmenuToggle width="100%">\n              <MenuItem>\n                <Flex\n                  alignItems="center"\n                  columnGap="2x"\n                  justifyContent="space-between"\n                  width="100%"\n                >\n                  <Text>List Item {key + 1}</Text>\n                  <AngleRightIcon />\n                </Flex>\n              </MenuItem>\n            </SubmenuToggle>\n            <SubmenuList\n              PopperProps={{\n                usePortal: true,\n              }}\n              width="max-content"\n            >\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n              <MenuItem>\n                <Text>List item</Text>\n              </MenuItem>\n            </SubmenuList>\n          </Submenu>\n        ))}\n      </Scrollbar>\n    </MenuList>\n  </Menu>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"customization",children:["Customization",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#customization",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:ez,file:{data:'import {\n  Box,\n  ButtonBase,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  MenuToggle,\n  Space,\n  Text,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\n\nimport {\n  ArrowLeftIcon,\n  CheckIcon,\n  ChevronRightIcon,\n  ColorIcon,\n  LockIcon,\n  SettingsIcon,\n  UserTeamIcon,\n} from \'@tonic-ui/react-icons\';\n\nimport React, { useState } from \'react\';\nimport FocusLock from \'react-focus-lock\';\n\nconst Avatar = (props) => (\n  <Flex\n    p="1x"\n    borderRadius="50%"\n    alignItems="center"\n    justifyContent="center"\n    fontSize="xs"\n    lineHeight="1"\n    {...props}\n  />\n);\n\nconst IconButton = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  return (\n    <ButtonBase\n      color={colorStyle.color.secondary}\n      tabIndex={0}\n      _disabled={{\n        color: colorStyle.color.disabled,\n      }}\n      _hover={{\n        color: colorStyle.color.primary,\n      }}\n      {...props}\n    />\n  );\n};\n\nlet shouldPreventDefaultOnNextBlur = false;\n\nconst App = () => {\n  const [colorMode, setColorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [menuState, setMenuState] = useState(\'main\');\n  const navigateMenuBy = (nextMenuState) => (event) => {\n    // Prevent the menu from closing when a menu item is clicked\n    event.preventDefault();\n\n    // The menu list will be blurred when the menu state changes because of losing focus.\n    // We need to set a flag to prevent menu to be closed.\n    shouldPreventDefaultOnNextBlur = true;\n\n    setMenuState(nextMenuState);\n  };\n\n  return (\n    <Menu\n      onOpen={() => {\n        setMenuState(\'main\');\n      }}\n    >\n      <MenuToggle>\n        <Avatar\n          backgroundColor={colorStyle.background.secondary}\n          color={colorStyle.color.secondary}\n          _hover={{\n            color: colorStyle.color.primary,\n          }}\n        >\n          <UserTeamIcon size="5x" />\n        </Avatar>\n      </MenuToggle>\n      <FocusLock\n        persistentFocus={true}\n      >\n        <MenuList\n          width="max-content"\n          onBlur={(event) => {\n            if (shouldPreventDefaultOnNextBlur) {\n              event.preventDefault();\n\n              // Restore the flag to its initial state\n              shouldPreventDefaultOnNextBlur = false;\n            }\n          }}\n        >\n          <Box\n            display={menuState === \'main\' ? \'block\' : \'none\'}\n          >\n            <MenuItem>\n              <Flex flex="none" mr="3x">\n                <SettingsIcon />\n              </Flex>\n              <Flex flex="auto">\n                <Text>Settings</Text>\n              </Flex>\n            </MenuItem>\n            <MenuItem>\n              <Flex flex="none" mr="3x">\n                <UserTeamIcon />\n              </Flex>\n              <Flex flex="auto">\n                <Text>Accounts</Text>\n              </Flex>\n            </MenuItem>\n            <MenuItem>\n              <Flex flex="none" mr="3x">\n                <LockIcon />\n              </Flex>\n              <Flex flex="auto">\n                <Text>Privacy control</Text>\n              </Flex>\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem\n              onClick={navigateMenuBy(\'appearance\')}\n            >\n              <Flex flex="none" mr="3x">\n                <ColorIcon />\n              </Flex>\n              <Flex flex="auto">\n                <Text>Appearance:</Text>\n                <Space width="2x" />\n                <Text textTransform="capitalize">\n                  {colorMode}\n                </Text>\n              </Flex>\n              <Flex flex="none" ml="3x">\n                <ChevronRightIcon />\n              </Flex>\n            </MenuItem>\n          </Box>\n          <Box\n            display={menuState === \'appearance\' ? \'block\' : \'none\'}\n          >\n            <Flex alignItems="center" px="3x" py="1x">\n              <Flex flex="none" mr="3x">\n                <IconButton\n                  onClick={navigateMenuBy(\'main\')}\n                >\n                  <ArrowLeftIcon />\n                </IconButton>\n              </Flex>\n              <Flex flex="auto">\n                <Text fontSize="md" lineHeight="md">\n                  Appearance\n                </Text>\n              </Flex>\n            </Flex>\n            <MenuDivider />\n            <MenuGroup\n              title={(\n                <Text fontSize="xs" lineHeight="xs">\n                  Setting applies to this browser only\n                </Text>\n              )}\n            >\n              <MenuItem\n                onClick={(event) => {\n                  setColorMode(\'dark\');\n                }}\n              >\n                <Flex flex="none" mr="3x" minWidth="4x">\n                  {colorMode === \'dark\' && <CheckIcon />}\n                </Flex>\n                <Flex flex="auto">\n                  Dark theme\n                </Flex>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  setColorMode(\'light\');\n                }}\n              >\n                <Flex flex="none" mr="3x" minWidth="4x">\n                  {colorMode === \'light\' && <CheckIcon />}\n                </Flex>\n                <Flex flex="auto">\n                  Light theme\n                </Flex>\n              </MenuItem>\n            </MenuGroup>\n          </Box>\n        </MenuList>\n      </FocusLock>\n    </Menu>\n  );\n};\n\nexport default App;',path:"pages/components/menu/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  ButtonBase,\n  Flex,\n  Menu,\n  MenuDivider,\n  MenuGroup,\n  MenuItem,\n  MenuList,\n  MenuToggle,\n  Space,\n  Text,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\n\nimport {\n  ArrowLeftIcon,\n  CheckIcon,\n  ChevronRightIcon,\n  ColorIcon,\n  LockIcon,\n  SettingsIcon,\n  UserTeamIcon,\n} from \'@tonic-ui/react-icons\';\n\nimport React, { useState } from \'react\';\nimport FocusLock from \'react-focus-lock\';\n\nconst Avatar = (props) => (\n  <Flex\n    p="1x"\n    borderRadius="50%"\n    alignItems="center"\n    justifyContent="center"\n    fontSize="xs"\n    lineHeight="1"\n    {...props}\n  />\n);\n\nconst IconButton = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  return (\n    <ButtonBase\n      color={colorStyle.color.secondary}\n      tabIndex={0}\n      _disabled={{\n        color: colorStyle.color.disabled,\n      }}\n      _hover={{\n        color: colorStyle.color.primary,\n      }}\n      {...props}\n    />\n  );\n};\n\nlet shouldPreventDefaultOnNextBlur = false;\n\nconst App = () => {\n  const [colorMode, setColorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [menuState, setMenuState] = useState(\'main\');\n  const navigateMenuBy = (nextMenuState) => (event) => {\n    // Prevent the menu from closing when a menu item is clicked\n    event.preventDefault();\n\n    // The menu list will be blurred when the menu state changes because of losing focus.\n    // We need to set a flag to prevent menu to be closed.\n    shouldPreventDefaultOnNextBlur = true;\n\n    setMenuState(nextMenuState);\n  };\n\n  return (\n    <Menu\n      onOpen={() => {\n        setMenuState(\'main\');\n      }}\n    >\n      <MenuToggle>\n        <Avatar\n          backgroundColor={colorStyle.background.secondary}\n          color={colorStyle.color.secondary}\n          _hover={{\n            color: colorStyle.color.primary,\n          }}\n        >\n          <UserTeamIcon size="5x" />\n        </Avatar>\n      </MenuToggle>\n      <FocusLock\n        persistentFocus={true}\n      >\n        <MenuList\n          width="max-content"\n          onBlur={(event) => {\n            if (shouldPreventDefaultOnNextBlur) {\n              event.preventDefault();\n\n              // Restore the flag to its initial state\n              shouldPreventDefaultOnNextBlur = false;\n            }\n          }}\n        >\n          <Box\n            display={menuState === \'main\' ? \'block\' : \'none\'}\n          >\n            <MenuItem>\n              <Flex flex="none" mr="3x">\n                <SettingsIcon />\n              </Flex>\n              <Flex flex="auto">\n                <Text>Settings</Text>\n              </Flex>\n            </MenuItem>\n            <MenuItem>\n              <Flex flex="none" mr="3x">\n                <UserTeamIcon />\n              </Flex>\n              <Flex flex="auto">\n                <Text>Accounts</Text>\n              </Flex>\n            </MenuItem>\n            <MenuItem>\n              <Flex flex="none" mr="3x">\n                <LockIcon />\n              </Flex>\n              <Flex flex="auto">\n                <Text>Privacy control</Text>\n              </Flex>\n            </MenuItem>\n            <MenuDivider />\n            <MenuItem\n              onClick={navigateMenuBy(\'appearance\')}\n            >\n              <Flex flex="none" mr="3x">\n                <ColorIcon />\n              </Flex>\n              <Flex flex="auto">\n                <Text>Appearance:</Text>\n                <Space width="2x" />\n                <Text textTransform="capitalize">\n                  {colorMode}\n                </Text>\n              </Flex>\n              <Flex flex="none" ml="3x">\n                <ChevronRightIcon />\n              </Flex>\n            </MenuItem>\n          </Box>\n          <Box\n            display={menuState === \'appearance\' ? \'block\' : \'none\'}\n          >\n            <Flex alignItems="center" px="3x" py="1x">\n              <Flex flex="none" mr="3x">\n                <IconButton\n                  onClick={navigateMenuBy(\'main\')}\n                >\n                  <ArrowLeftIcon />\n                </IconButton>\n              </Flex>\n              <Flex flex="auto">\n                <Text fontSize="md" lineHeight="md">\n                  Appearance\n                </Text>\n              </Flex>\n            </Flex>\n            <MenuDivider />\n            <MenuGroup\n              title={(\n                <Text fontSize="xs" lineHeight="xs">\n                  Setting applies to this browser only\n                </Text>\n              )}\n            >\n              <MenuItem\n                onClick={(event) => {\n                  setColorMode(\'dark\');\n                }}\n              >\n                <Flex flex="none" mr="3x" minWidth="4x">\n                  {colorMode === \'dark\' && <CheckIcon />}\n                </Flex>\n                <Flex flex="auto">\n                  Dark theme\n                </Flex>\n              </MenuItem>\n              <MenuItem\n                onClick={() => {\n                  setColorMode(\'light\');\n                }}\n              >\n                <Flex flex="none" mr="3x" minWidth="4x">\n                  {colorMode === \'light\' && <CheckIcon />}\n                </Flex>\n                <Flex flex="auto">\n                  Light theme\n                </Flex>\n              </MenuItem>\n            </MenuGroup>\n          </Box>\n        </MenuList>\n      </FocusLock>\n    </Menu>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"dropdown",children:["Dropdown",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#dropdown",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"Dropdown"})," component when you need to select one option from a list of options."]}),"\n",(0,i.jsxs)(n.p,{children:["The component is available on GitHub at the ",(0,i.jsx)(n.a,{href:"https://github.com/trendmicro-frontend/tonic-ui/blob/master/packages/react-docs/components/Dropdown.js",children:"link"}),"."]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:k,file:{data:"import {\n  Flex,\n  MenuButton,\n  OverflowTooltip,\n  TextLabel,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\nimport Dropdown from '@/components/Dropdown';\n\nconst options = [\n  'all',\n  'network-events',\n  'system-events',\n];\n\nconst renderOption = (value) => {\n  return {\n    'all': 'All',\n    'network-events': 'Network events',\n    'system-events': 'System events',\n  }[value];\n};\n\nconst renderLabel = (value) => {\n  const selectionText = renderOption(value);\n\n  return (\n    <>\n      <TextLabel mr=\"2x\">\n        {'Event status:'}\n      </TextLabel>\n      <OverflowTooltip\n        PopperProps={{ usePortal: true }}\n        label={selectionText}\n      >\n        {selectionText}\n      </OverflowTooltip>\n    </>\n  );\n};\n\nconst App = () => {\n  const [value, setValue] = useState('all');\n  const width = 200;\n  const maxWidth = typeof width === 'number'\n    ? `calc(${width}px - 48px)`\n    : `calc(${width} - 48px)`;\n\n  return (\n    <Dropdown\n      value={value}\n      onChange={setValue}\n      options={options}\n      renderOption={renderOption}\n    >\n      {({ getToggleProps }) => (\n        <MenuButton\n          {...getToggleProps()}\n          variant=\"secondary\"\n          width={width}\n        >\n          <Flex maxWidth={maxWidth}>\n            {renderLabel(value)}\n          </Flex>\n        </MenuButton>\n      )}\n    </Dropdown>\n  );\n};\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{"src/components/Dropdown.js":"import {\n  Menu,\n  MenuItem,\n  MenuList,\n  MenuToggle,\n} from '@tonic-ui/react';\nimport { noop, runIfFn } from '@tonic-ui/utils';\nimport { ensureFunction } from 'ensure-type';\nimport React, { forwardRef, useCallback, useEffect, useState } from 'react';\n\nconst Dropdown = forwardRef((\n  {\n    children,\n    highlightSelectedOption = false,\n    options = [],\n    onChange: onChangeProp,\n    renderOption = noop,\n    value: valueProp,\n    ...rest\n  },\n  ref,\n) => {\n  const [value, setValue] = useState(valueProp ?? '');\n\n  useEffect(() => {\n    const isControlled = valueProp !== undefined;\n    if (isControlled) {\n      setValue(valueProp);\n    }\n  }, [valueProp]);\n\n  const onChange = useCallback((nextValue) => {\n    const isControlled = valueProp !== undefined;\n    if (!isControlled) {\n      setValue(nextValue);\n    }\n    ensureFunction(onChangeProp)(nextValue);\n  }, [valueProp, onChangeProp]);\n\n  const handleClickMenuItemBy = (value) => (event) => {\n    onChange(value);\n  };\n\n  return (\n    <Menu\n      ref={ref}\n      {...rest}\n    >\n      <MenuToggle>\n        {({ getMenuToggleProps }) => {\n          return runIfFn(children, { getToggleProps: getMenuToggleProps });\n        }}\n      </MenuToggle>\n      <MenuList\n        width=\"max-content\"\n      >\n        {options.map((option) => {\n          const key = option;\n          const isSelected = (value === option);\n\n          return (\n            <MenuItem\n              data-selected={highlightSelectedOption ? isSelected : undefined}\n              key={key}\n              onClick={handleClickMenuItemBy(option)}\n            >\n              {renderOption(option)}\n            </MenuItem>\n          );\n        })}\n      </MenuList>\n    </Menu>\n  );\n});\n\nDropdown.displayName = 'Dropdown';\n\nexport default Dropdown;"},raw:"import {\n  Flex,\n  MenuButton,\n  OverflowTooltip,\n  TextLabel,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\nimport Dropdown from '@/components/Dropdown';\n\nconst options = [\n  'all',\n  'network-events',\n  'system-events',\n];\n\nconst renderOption = (value) => {\n  return {\n    'all': 'All',\n    'network-events': 'Network events',\n    'system-events': 'System events',\n  }[value];\n};\n\nconst renderLabel = (value) => {\n  const selectionText = renderOption(value);\n\n  return (\n    <>\n      <TextLabel mr=\"2x\">\n        {'Event status:'}\n      </TextLabel>\n      <OverflowTooltip\n        PopperProps={{ usePortal: true }}\n        label={selectionText}\n      >\n        {selectionText}\n      </OverflowTooltip>\n    </>\n  );\n};\n\nconst App = () => {\n  const [value, setValue] = useState('all');\n  const width = 200;\n  const maxWidth = typeof width === 'number'\n    ? `calc(${width}px - 48px)`\n    : `calc(${width} - 48px)`;\n\n  return (\n    <Dropdown\n      value={value}\n      onChange={setValue}\n      options={options}\n      renderOption={renderOption}\n    >\n      {({ getToggleProps }) => (\n        <MenuButton\n          {...getToggleProps()}\n          variant=\"secondary\"\n          width={width}\n        >\n          <Flex maxWidth={maxWidth}>\n            {renderLabel(value)}\n          </Flex>\n        </MenuButton>\n      )}\n    </Dropdown>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h3,{id:"multiselect",children:["Multiselect",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#multiselect",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"Multiselect"})," component when you need to select multiple options from a list or to filter information."]}),"\n",(0,i.jsxs)(n.p,{children:["The component is available on GitHub at the ",(0,i.jsx)(n.a,{href:"https://github.com/trendmicro-frontend/tonic-ui/blob/master/packages/react-docs/components/Multiselect.js",children:"link"})]}),"\n",(0,i.jsx)(o.Z,Object.assign({},{component:T,file:{data:"import {\n  Flex,\n  MenuButton,\n  OverflowTooltip,\n  Text,\n  TextLabel,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\nimport Multiselect from '@/components/Multiselect';\n\nconst policyData = {\n  policies: [\n    { id: '0', description: 'Default policy' },\n    ...Array.from({ length: 10 }, (_, i) => ({\n      id: String(i + 1),\n      description: `Policy ${i + 1}`,\n    })),\n  ],\n};\n\nconst policyMap = (() => {\n  const map = new Map();\n  policyData.policies.forEach((policy) => {\n    // Use the policy ID as the key and ensure it's a string rather than a number\n    const key = String(policy.id);\n    map.set(key, policy);\n  });\n  return map;\n})();\n\nconst options = [...policyMap.keys()];\n\nconst renderOption = (value) => {\n  const policy = policyMap.get(value);\n  return policy?.description;\n};\n\nconst renderLabel = (value) => {\n  const selectionCount = value.length;\n  const isNoneSelected = selectionCount === 0;\n  const isAllSelected = selectionCount === options.length;\n\n  if (isNoneSelected) {\n    const selectionText = 'Select';\n    return (\n      <>\n        <TextLabel mr=\"2x\">\n          {'Policy:'}\n        </TextLabel>\n        <OverflowTooltip\n          PopperProps={{ usePortal: true }}\n          label={selectionText}\n        >\n          {selectionText}\n        </OverflowTooltip>\n      </>\n    );\n  }\n\n  if (isAllSelected) {\n    const selectionText = 'All'; \n    return (\n      <>\n        <TextLabel mr=\"2x\">\n          {'Policy:'}\n        </TextLabel>\n        <OverflowTooltip\n          PopperProps={{ usePortal: true }}\n          label={selectionText}\n        >\n          {selectionText}\n        </OverflowTooltip>\n      </>\n    );\n  }\n\n  const selectionText = value.map(renderOption).join(', ');\n  return (\n    <>\n      <TextLabel mr=\"2x\">\n        {'Policy:'}\n      </TextLabel>\n      <OverflowTooltip\n        PopperProps={{ usePortal: true }}\n        label={selectionText}\n      >\n        {selectionText}\n      </OverflowTooltip>\n      <Text ml=\"1x\">\n        {`(${selectionCount})`}\n      </Text>\n    </>\n  );\n};\n\nconst App = () => {\n  const [value, setValue] = useState(options);\n  const width = 200;\n  const maxWidth = typeof width === 'number'\n    ? `calc(${width}px - 48px)`\n    : `calc(${width} - 48px)`;\n\n  return (\n    <Multiselect\n      isSearchable={true}\n      value={value}\n      onChange={setValue}\n      options={options}\n      renderOption={renderOption}\n      shouldSelectAllIfNoneSelected={true}\n    >\n      {({ getToggleProps }) => (\n        <MenuButton\n          {...getToggleProps()}\n          variant=\"secondary\"\n          width={width}\n        >\n          <Flex maxWidth={maxWidth}>\n            {renderLabel(value)}\n          </Flex>\n        </MenuButton>\n      )}\n    </Multiselect>\n  );\n};\n\nexport default App;",path:"pages/components/menu/index.page.mdx"},sandbox:{files:{"src/components/Multiselect.js":"import {\n  Box,\n  Checkbox,\n  CheckboxGroup,\n  LinkButton,\n  Menu,\n  MenuItem,\n  MenuList,\n  MenuToggle,\n  Scrollbar,\n  SearchInput,\n  useColorMode,\n  useColorStyle,\n  useTheme,\n} from '@tonic-ui/react';\nimport { noop, runIfFn } from '@tonic-ui/utils';\nimport { ensureArray, ensureFunction, ensureString } from 'ensure-type';\nimport React, { forwardRef, useCallback, useEffect, useRef, useState } from 'react';\nimport Highlight from 'react-highlight-words';\n\nconst Multiselect = forwardRef((\n  {\n    children,\n    highlightSelectedOption = false,\n    isSearchable = false,\n    options = [],\n    onChange: onChangeProp,\n    renderOption = noop,\n    shouldSelectAllIfNoneSelected = false,\n    value: valueProp,\n    ...rest\n  },\n  ref,\n) => {\n  const searchInputRef = useRef();\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const { colors } = useTheme();\n  const [value, setValue] = useState(ensureArray(valueProp));\n  const [searchString, setSearchString] = useState('');\n\n  useEffect(() => {\n    const isControlled = valueProp !== undefined;\n    if (isControlled) {\n      setValue(ensureArray(valueProp));\n    }\n  }, [valueProp]);\n\n  const onCheckboxGroupChange = useCallback((nextValue) => {\n    setValue(nextValue);\n  }, []);\n\n  const isAllSelected = value.length === options.length;\n  const isNoneSelected = value.length === 0;\n  const handleClickToggle = (event) => {\n    const nextValue = isAllSelected ? [] : options;\n    setValue(nextValue);\n  };\n  const handleKeyDown = (event) => {\n    if (event.key === 'Enter' || event.key === ' ') {\n      const el = event.currentTarget.querySelector('input');\n      if (el) {\n        const nextValue = [...value];\n        nextValue.indexOf(el.value) === -1\n          ? nextValue.push(el.value) // add\n          : nextValue.splice(nextValue.indexOf(el.value), 1); // remove\n        setValue(nextValue);\n      }\n    }\n  }\n\n  const normalizedSearchString = ensureString(searchString).trim().toLowerCase();\n  const filteredOptions = options.filter(option => {\n    if (!normalizedSearchString) {\n      return true;\n    }\n    const normalizedItemString = renderOption(option).trim().toLowerCase();\n    return normalizedItemString.includes(normalizedSearchString);\n  });\n\n  return (\n    <Menu\n      ref={ref}\n      closeOnSelect={false}\n      defaultActiveIndex={0}\n      onClose={() => {\n        if (isNoneSelected && shouldSelectAllIfNoneSelected) {\n          // Automatically reset all the options when the menu loses focus\n          setValue(options);\n          ensureFunction(onChangeProp)(options);\n        } else {\n          ensureFunction(onChangeProp)(value);\n        }\n      }}\n      {...rest}\n    >\n      <MenuToggle>\n        {({ getMenuToggleProps }) => {\n          return runIfFn(children, { getToggleProps: getMenuToggleProps });\n        }}\n      </MenuToggle>\n      <MenuList\n        width=\"max-content\"\n      >\n        {isSearchable && (\n          <Box\n            px=\"3x\"\n            mb=\"2x\"\n          >\n            <SearchInput\n              inputProps={{\n                role: 'menuitem', // Specify \"menuitem\" role for keyboard navigation\n                onKeyDown: (event) => {\n                  const input = event.target;\n                  const {\n                    selectionStart, // the position where the character will be inserted\n                    selectionEnd, // if has a selection this value will be different than the previous\n                    value, // this is the value before the key is added\n                  } = input;\n                  const isAtStart = (selectionStart === 0 && selectionEnd === 0);\n                  const isAtEnd = (selectionStart === value.length && selectionEnd === value.length);\n\n                  if (isAtStart && ['ArrowUp', 'Home'].includes(event.key)) {\n                    return;\n                  }\n                  if (isAtEnd && ['ArrowDown', 'End'].includes(event.key)) {\n                    return;\n                  }\n\n                  // Stop event propagation to menu for specific keys\n                  event.stopPropagation();\n                },\n              }}\n              ref={searchInputRef}\n              value={searchString}\n              onClearInput={(event) => {\n                setSearchString('');\n              }}\n              onChange={(event) => {\n                const value = event.target.value;\n                setSearchString(value);\n              }}\n            />\n          </Box>\n        )}\n        <CheckboxGroup\n          size=\"sm\"\n          value={value}\n          onChange={onCheckboxGroupChange}\n        >\n          {!normalizedSearchString && (\n            <Box\n              px=\"3x\"\n              mb=\"2x\"\n            >\n              <LinkButton\n                key=\"toggle\"\n                onClick={handleClickToggle}\n              >\n                {isAllSelected ? ('Clear all') : ('Select all')}\n              </LinkButton>\n            </Box>\n          )}\n          <Scrollbar\n            maxHeight={250}\n            overflowY=\"auto\"\n          >\n            {filteredOptions.map((option) => {\n              const key = option;\n              const isSelected = value.includes(option);\n\n              return (\n                <MenuItem\n                  data-selected={highlightSelectedOption ? isSelected : undefined}\n                  key={key}\n                  onKeyDown={handleKeyDown}\n                >\n                  <Checkbox\n                    value={option}\n                    width=\"100%\" // Fill the entire width of the menu item to make it easier to click\n                  >\n                    <Highlight\n                      searchWords={[normalizedSearchString]}\n                      textToHighlight={renderOption(option)}\n                      highlightStyle={{\n                        backgroundColor: colors[colorStyle.text.highlight],\n                        color: colors['gray:100'],\n                      }}\n                    />\n                  </Checkbox>\n                </MenuItem>\n              );\n            })}\n          </Scrollbar>\n        </CheckboxGroup>\n      </MenuList>\n    </Menu>\n  );\n});\n\nMultiselect.displayName = 'Multiselect';\n\nexport default Multiselect;"},raw:"import {\n  Flex,\n  MenuButton,\n  OverflowTooltip,\n  Text,\n  TextLabel,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\nimport Multiselect from '@/components/Multiselect';\n\nconst policyData = {\n  policies: [\n    { id: '0', description: 'Default policy' },\n    ...Array.from({ length: 10 }, (_, i) => ({\n      id: String(i + 1),\n      description: `Policy ${i + 1}`,\n    })),\n  ],\n};\n\nconst policyMap = (() => {\n  const map = new Map();\n  policyData.policies.forEach((policy) => {\n    // Use the policy ID as the key and ensure it's a string rather than a number\n    const key = String(policy.id);\n    map.set(key, policy);\n  });\n  return map;\n})();\n\nconst options = [...policyMap.keys()];\n\nconst renderOption = (value) => {\n  const policy = policyMap.get(value);\n  return policy?.description;\n};\n\nconst renderLabel = (value) => {\n  const selectionCount = value.length;\n  const isNoneSelected = selectionCount === 0;\n  const isAllSelected = selectionCount === options.length;\n\n  if (isNoneSelected) {\n    const selectionText = 'Select';\n    return (\n      <>\n        <TextLabel mr=\"2x\">\n          {'Policy:'}\n        </TextLabel>\n        <OverflowTooltip\n          PopperProps={{ usePortal: true }}\n          label={selectionText}\n        >\n          {selectionText}\n        </OverflowTooltip>\n      </>\n    );\n  }\n\n  if (isAllSelected) {\n    const selectionText = 'All'; \n    return (\n      <>\n        <TextLabel mr=\"2x\">\n          {'Policy:'}\n        </TextLabel>\n        <OverflowTooltip\n          PopperProps={{ usePortal: true }}\n          label={selectionText}\n        >\n          {selectionText}\n        </OverflowTooltip>\n      </>\n    );\n  }\n\n  const selectionText = value.map(renderOption).join(', ');\n  return (\n    <>\n      <TextLabel mr=\"2x\">\n        {'Policy:'}\n      </TextLabel>\n      <OverflowTooltip\n        PopperProps={{ usePortal: true }}\n        label={selectionText}\n      >\n        {selectionText}\n      </OverflowTooltip>\n      <Text ml=\"1x\">\n        {`(${selectionCount})`}\n      </Text>\n    </>\n  );\n};\n\nconst App = () => {\n  const [value, setValue] = useState(options);\n  const width = 200;\n  const maxWidth = typeof width === 'number'\n    ? `calc(${width}px - 48px)`\n    : `calc(${width} - 48px)`;\n\n  return (\n    <Multiselect\n      isSearchable={true}\n      value={value}\n      onChange={setValue}\n      options={options}\n      renderOption={renderOption}\n      shouldSelectAllIfNoneSelected={true}\n    >\n      {({ getToggleProps }) => (\n        <MenuButton\n          {...getToggleProps()}\n          variant=\"secondary\"\n          width={width}\n        >\n          <Flex maxWidth={maxWidth}>\n            {renderLabel(value)}\n          </Flex>\n        </MenuButton>\n      )}\n    </Multiselect>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,i.jsxs)(n.h2,{id:"accessibility",children:["Accessibility",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#accessibility",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.h3,{id:"keyboard-interaction",children:["Keyboard Interaction",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#keyboard-interaction",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Key"}),(0,i.jsx)(n.th,{align:"left",children:"Action"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{align:"left",children:[(0,i.jsx)(n.code,{children:"Enter"})," | ",(0,i.jsx)(n.code,{children:"Space"})]}),(0,i.jsxs)(n.td,{align:"left",children:["When ",(0,i.jsx)(n.code,{children:"MenuToggle"})," or ",(0,i.jsx)(n.code,{children:"MenuButton"})," is focused, opens the menu."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsxs)(n.td,{align:"left",children:[(0,i.jsx)(n.code,{children:"ArrowDown"})," | ",(0,i.jsx)(n.code,{children:"ArrowUp"})]}),(0,i.jsxs)(n.td,{align:"left",children:["When ",(0,i.jsx)(n.code,{children:"MenuList"})," is focused, moves the focus to the next menu item."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:(0,i.jsx)(n.code,{children:"Escape"})}),(0,i.jsx)(n.td,{align:"left",children:"When a menu item is focused, closes the menu and moves the focus to the toggle."})]})]})]}),"\n",(0,i.jsxs)(n.h2,{id:"props",children:["Props",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.h3,{id:"menu-1",children:["Menu",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menu-1",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"anchorEl"}),(0,i.jsx)(n.td,{align:"left",children:"ElementType"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"The element to which the menu is attached."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"autoSelect"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"true"}),(0,i.jsx)(n.td,{align:"left",children:"Whether to automatically select the first menu item when the menu is opened."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,i.jsx)(n.code,{children:"(context) => ReactNode"})]}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"A function child can be used intead of a React element. This function is called with the context object."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"closeOnBlur"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"true"}),(0,i.jsx)(n.td,{align:"left",children:"Whether to close the menu when the user clicks outside of the menu."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"closeOnSelect"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"true"}),(0,i.jsx)(n.td,{align:"left",children:"Whether to close the menu when the user selects a menu item."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"defaultActiveIndex"}),(0,i.jsx)(n.td,{align:"left",children:"number"}),(0,i.jsx)(n.td,{align:"left",children:"-1"}),(0,i.jsx)(n.td,{align:"left",children:"The index of the menu item to be selected by default."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"defaultIsOpen"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"false"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the menu is open by default."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"isOpen"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the menu is open."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"offset"}),(0,i.jsx)(n.td,{align:"left",children:"[skidding, distance]"}),(0,i.jsx)(n.td,{align:"left",children:"[0, 0]"}),(0,i.jsx)(n.td,{align:"left",children:"The skidding and distance of the menu."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onClose"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the menu is closed."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onOpen"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the menu is opened."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"placement"}),(0,i.jsx)(n.td,{align:"left",children:"string"}),(0,i.jsx)(n.td,{align:"left",children:"'bottom-start'"}),(0,i.jsx)(n.td,{align:"left",children:"The placement of the menu. One of: 'top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end'"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"returnFocusOnClose"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"true"}),(0,i.jsxs)(n.td,{align:"left",children:["If ",(0,i.jsx)(n.code,{children:"true"}),", the menu will return the focus to the trigger element when closing. Otherwise, it will leave focus unchanged."]})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"menubutton-1",children:["MenuButton",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menubutton-1",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"disabled"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the menu button is disabled."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onClick"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the menu button is clicked."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onKeyDown"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the user presses a key."})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"menucontent",children:["MenuContent",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menucontent",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"PopperComponent"}),(0,i.jsx)(n.td,{align:"left",children:"ElementType"}),(0,i.jsx)(n.td,{align:"left",children:"Popper"}),(0,i.jsx)(n.td,{align:"left",children:"The component used for the popover."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"PopperProps"}),(0,i.jsx)(n.td,{align:"left",children:"object"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Props applied to the Popper component."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionComponent"}),(0,i.jsx)(n.td,{align:"left",children:"ElementType"}),(0,i.jsx)(n.td,{align:"left",children:"Collapse"}),(0,i.jsx)(n.td,{align:"left",children:"The component used for the transition."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionProps"}),(0,i.jsx)(n.td,{align:"left",children:"object"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,i.jsx)(n.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionProps.appear"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"true"}),(0,i.jsx)(n.td,{align:"left"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"menudivider",children:["MenuDivider",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menudivider",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,i.jsxs)(n.h3,{id:"menugroup-1",children:["MenuGroup",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menugroup-1",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"title"}),(0,i.jsx)(n.td,{align:"left",children:"string"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"The title of the menu group."})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"menuitem",children:["MenuItem",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menuitem",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"disabled"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the menu item is disabled."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onClick"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the menu item is clicked."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onKeyDown"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the user presses a key."})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"menulist",children:["MenuList",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menulist",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"PopperComponent"}),(0,i.jsx)(n.td,{align:"left",children:"ElementType"}),(0,i.jsx)(n.td,{align:"left",children:"Popper"}),(0,i.jsx)(n.td,{align:"left",children:"The component used for the popover."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"PopperProps"}),(0,i.jsx)(n.td,{align:"left",children:"object"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Props applied to the Popper component."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionComponent"}),(0,i.jsx)(n.td,{align:"left",children:"ElementType"}),(0,i.jsx)(n.td,{align:"left",children:"Collapse"}),(0,i.jsx)(n.td,{align:"left",children:"The component used for the transition."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionProps"}),(0,i.jsx)(n.td,{align:"left",children:"object"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,i.jsx)(n.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionProps.appear"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"true"}),(0,i.jsx)(n.td,{align:"left"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"menutoggle-1",children:["MenuToggle",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menutoggle-1",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,i.jsx)(n.code,{children:"({ getMenuToggleProps }) => ReactNode"})]}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"disabled"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the menu toggle is disabled."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onClick"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the menu toggle is clicked."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onKeyDown"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the user presses a key."})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"menutoggleicon-1",children:["MenuToggleIcon",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menutoggleicon-1",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"appear"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"false"}),(0,i.jsxs)(n.td,{align:"left",children:["By default the child component does not perform the enter transition when it first mounts, regardless of the value of ",(0,i.jsx)(n.code,{children:"in"}),". If you want this behavior, set both ",(0,i.jsx)(n.code,{children:"appear"})," and ",(0,i.jsx)(n.code,{children:"in"})," to true."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,i.jsx)(n.code,{children:"(state, props) => ReactNode"})]}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"A function child can be used instead of a React element. This function is called with the current transition state ('entering', 'entered', 'exiting', 'exited'), ref, style, and context specific props for a component."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"disabled"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the menu toggle icon is disabled."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"easing"}),(0,i.jsxs)(n.td,{align:"left",children:["string | ",(0,i.jsx)(n.code,{children:"{ enter?: string, exit?: string }"})]}),(0,i.jsx)(n.td,{align:"left",children:(0,i.jsx)(n.code,{children:"{ enter: easing.easeInOut, exit: easing.easeInOut }"})}),(0,i.jsx)(n.td,{align:"left",children:"The timing function that describes how intermediate values are calculated during a transition. You may specify a single timing function for all transitions, or individually with an object."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"in"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsxs)(n.td,{align:"left",children:["If ",(0,i.jsx)(n.code,{children:"true"}),", the component will transition in."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"mountOnEnter"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsxs)(n.td,{align:"left",children:["If ",(0,i.jsx)(n.code,{children:"true"}),', it will "lazy mount" the component on the first ',(0,i.jsx)(n.code,{children:"in={true}"}),". After the first enter transition the component will stay mounted, even on the 'exited' state, unless you also specify ",(0,i.jsx)(n.code,{children:"unmountOnExit"}),". By default the child component is mounted immediately along with the parent transition component."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"timeout"}),(0,i.jsxs)(n.td,{align:"left",children:["number | ",(0,i.jsx)(n.code,{children:"{ appear?: number, enter?: number, exit?: number }"})]}),(0,i.jsx)(n.td,{align:"left",children:(0,i.jsx)(n.code,{children:"{ enter: duration.enterScreen, exit: duration.levingScreen }"})}),(0,i.jsx)(n.td,{align:"left",children:"The duration for the transition, in milliseconds. You may specify a single timeout for all transitions, or individually with an object."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"unmountOnExit"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsxs)(n.td,{align:"left",children:["If ",(0,i.jsx)(n.code,{children:"true"}),", it will unmount the child component when ",(0,i.jsx)(n.code,{children:"in={false}"})," and the animation has finished. By default the child component stays mounted after it reaches the 'exited' state."]})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"submenu",children:["Submenu",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#submenu",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"defaultIsOpen"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"false"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the submenu is open by default."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"isOpen"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the submenu is open."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"offset"}),(0,i.jsx)(n.td,{align:"left",children:"[skidding, distance]"}),(0,i.jsx)(n.td,{align:"left",children:"[0, 0]"}),(0,i.jsx)(n.td,{align:"left",children:"The skidding and distance of the menu."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onClose"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the submenu is closed."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"onOpen"}),(0,i.jsx)(n.td,{align:"left",children:"function"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Callback when the submenu is opened."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"placement"}),(0,i.jsx)(n.td,{align:"left",children:"string"}),(0,i.jsx)(n.td,{align:"left",children:"'right-start'"}),(0,i.jsx)(n.td,{align:"left",children:"The placement of the submenu. One of: 'right-start', 'right-end', 'left-start', 'left-end'"})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"submenucontent",children:["SubmenuContent",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#submenucontent",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"PopperComponent"}),(0,i.jsx)(n.td,{align:"left",children:"ElementType"}),(0,i.jsx)(n.td,{align:"left",children:"Popper"}),(0,i.jsx)(n.td,{align:"left",children:"The component used for the popover."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"PopperProps"}),(0,i.jsx)(n.td,{align:"left",children:"object"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Props applied to the Popper component."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionComponent"}),(0,i.jsx)(n.td,{align:"left",children:"ElementType"}),(0,i.jsx)(n.td,{align:"left",children:"Collapse"}),(0,i.jsx)(n.td,{align:"left",children:"The component used for the transition."})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionProps"}),(0,i.jsx)(n.td,{align:"left",children:"object"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,i.jsx)(n.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"TransitionProps.appear"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left",children:"true"}),(0,i.jsx)(n.td,{align:"left"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]})]})]}),"\n",(0,i.jsxs)(n.h3,{id:"submenulist",children:["SubmenuList",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#submenulist",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsx)(n.tbody,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,i.jsxs)(n.h3,{id:"submenutoggle",children:["SubmenuToggle",(0,i.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#submenutoggle",children:(0,i.jsx)(n.svg,{children:(0,i.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{align:"left",children:"Name"}),(0,i.jsx)(n.th,{align:"left",children:"Type"}),(0,i.jsx)(n.th,{align:"left",children:"Default"}),(0,i.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"children"}),(0,i.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,i.jsx)(n.code,{children:"({ getSubmenuToggleProps }) => ReactNode"})]}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{align:"left",children:"disabled"}),(0,i.jsx)(n.td,{align:"left",children:"boolean"}),(0,i.jsx)(n.td,{align:"left"}),(0,i.jsx)(n.td,{align:"left",children:"Whether the submenu toggle is disabled."})]})]})]})]})}var n_=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,r.ah)(),e.components).wrapper;return n?(0,i.jsx)(n,Object.assign({},e,{children:(0,i.jsx)(nW,e)})):nW(e)}},82711:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/menu",function(){return t(71884)}])},30883:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var l=t(75928),i=t(52903),r=(0,l.Z)((0,i.tZ)("path",{d:"M15 9.016h-10.158l3.296 3.283-1.412 1.416-4.716-4.699h-0.009v-0.009l-1-0.996 5.707-5.739 1.418 1.41-3.316 3.335h10.191z"}),"ArrowLeftIcon")},36699:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var l=t(75928),i=t(52903),r=(0,l.Z)((0,i.tZ)("path",{d:"M5 15l-5-5 1-1 4 3.88 10-11.88 1 1-11 13z"}),"CheckIcon")},69432:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var l=t(75928),i=t(52903),r=(0,l.Z)((0,i.tZ)("path",{d:"M12 8l-6.607 7-1.393-1.476 5.214-5.524-5.214-5.524 1.393-1.476z"}),"ChevronRightIcon")},83718:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var l=t(75928),i=t(52903),r=(0,l.Z)((0,i.tZ)("path",{d:"M13.25 6h-1.25v-3c-0.002-1.656-1.344-2.998-3-3h-2c-1.656 0.002-2.998 1.344-3 3v3h-1.25c-0.414 0.002-0.748 0.336-0.75 0.75v8.5c0.002 0.414 0.336 0.748 0.75 0.75h10.5c0.414-0.002 0.748-0.336 0.75-0.75v-8.5c-0.002-0.414-0.336-0.748-0.75-0.75h-0zM9 12h-2v-2h2zM10 6h-4v-3c0.001-0.552 0.448-0.999 1-1h2c0.552 0.001 0.999 0.448 1 1v0z"}),"LockIcon")},22231:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var l=t(75928),i=t(52903),r=(0,l.Z)((0,i.tZ)("path",{d:"M16 9v-2l-2.13-0.27c-0.163-0.757-0.447-1.427-0.834-2.023l0.014 0.023 1.33-1.7-1.38-1.39-1.74 1.36c-0.573-0.376-1.242-0.664-1.96-0.823l-0.040-0.007-0.26-2.17h-2l-0.26 2.13c-0.757 0.163-1.427 0.447-2.023 0.834l0.023-0.014-1.67-1.31-1.41 1.42 1.34 1.69c-0.376 0.573-0.664 1.242-0.823 1.96l-0.007 0.040-2.17 0.25v2l2.14 0.27c0.163 0.757 0.447 1.427 0.834 2.023l-0.014-0.023-1.32 1.7 1.41 1.41 1.71-1.38c0.574 0.37 1.243 0.65 1.961 0.803l0.039 0.007 0.24 2.19h2l0.27-2.14c0.757-0.163 1.427-0.447 2.023-0.834l-0.023 0.014 1.73 1.34 1.38-1.38-1.38-1.75c0.373-0.573 0.657-1.243 0.813-1.96l0.007-0.040zM8 11c-1.657 0-3-1.343-3-3s1.343-3 3-3c1.657 0 3 1.343 3 3v0c0 1.657-1.343 3-3 3v0z"}),"SettingsIcon")},78412:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var l=t(75928),i=t(52903),r=(0,l.Z)((0,i.tZ)("path",{d:"M14.76 9.812c-0.826 3.012-3.54 5.188-6.762 5.188-2.577 0-4.829-1.393-6.044-3.467l-0.018-0.033 1.732-1c0.88 1.511 2.493 2.511 4.339 2.511 2.764 0 5.004-2.24 5.004-5.004s-2.24-5.004-5.004-5.004c-1.632 0-3.081 0.781-3.995 1.99l-0.009 0.013 1.995 1.995h-5v-5l1.579 1.579c1.293-1.578 3.242-2.578 5.425-2.578 3.864 0 6.997 3.133 6.997 6.997 0 0.645-0.087 1.27-0.251 1.863l0.012-0.049z"}),"UndoIcon")},69269:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var l=t(75928),i=t(52903),r=(0,l.Z)((0,i.tZ)("path",{d:"M13.472 16h-10.944c-4.577 0-1.796-4-0.485-5.333 1.138-1.15 2.572-2.005 4.178-2.441l0.065-0.015v-0.61c-1.362-0.657-2.286-2.028-2.286-3.614 0-2.209 1.791-4 4-4s4 1.791 4 4c0 1.586-0.923 2.957-2.262 3.604l-0.024 0.010v0.61c1.671 0.452 3.105 1.307 4.243 2.456l0.001 0.001c1.311 1.333 4.092 5.333-0.485 5.333z"}),"UserIcon")},39108:function(e,n,t){"use strict";t.d(n,{Z:function(){return c}});var l=t(53860),i=t(2784),r=t(70758),o=t(59804),s=t(52903),a=(0,i.forwardRef)(function(e,n){var t=(0,o.k)();return(0,s.tZ)(r.Z,(0,l.Zj)((0,l.Zj)({ref:n},t),e))});a.displayName="Truncate";var c=a},59804:function(e,n,t){"use strict";t.d(n,{k:function(){return l}});var l=function(){return{overflow:"hidden",textOverflow:"ellipsis",whiteSpace:"nowrap"}}}},function(e){e.O(0,[978,7283,5375,2888,9774,179],function(){return e(e.s=82711)}),_N_E=e.O()}]);