(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7380],{52559:function(e,n,o){"use strict";o.r(n),o.d(n,{default:function(){return er}});var r=o(52322),t=o(45392),i=o(96835),l=o(49857),s=o(40596),a=o(85017),c=o(70758),d=o(67622),p=o(1847),h=o(68010),x=o(72448),g=o(743),u=o(73645),v=o(2215),f=o(10707),m=o(33846),j=o(65019),P=o(2784);function b(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var r,t,i,l,s=[],a=!0,c=!1;try{if(i=(o=o.call(e)).next,0===n){if(Object(o)!==o)return;a=!1}else for(;!(a=(r=i.call(o)).done)&&(s.push(r.value),s.length!==n);a=!0);}catch(e){c=!0,t=e}finally{try{if(!a&&null!=o.return&&(l=o.return(),Object(l)!==l))return}finally{if(c)throw t}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return T(e,n);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return T(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function T(e,n){(null==n||n>e.length)&&(n=e.length);for(var o=0,r=Array(n);o<n;o++)r[o]=e[o];return r}function y(){return(y=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var o=arguments[n];for(var r in o)Object.prototype.hasOwnProperty.call(o,r)&&(e[r]=o[r])}return e}).apply(this,arguments)}var C=function(e){return P.createElement(l.Z,y({mb:"4x"},e))},k=function(){var e=b((0,s.Z)(),1)[0],n=b((0,a.Z)({colorMode:e}),1)[0],o=b((0,j.Z)(!0),2),r=o[0],t=o[1];return P.createElement(P.Fragment,null,P.createElement(l.Z,{mb:"4x"},P.createElement(c.Z,{fontSize:"lg",lineHeight:"lg"},"Modifiers")),P.createElement(C,null,P.createElement(d.Z,{display:"inline-flex",alignItems:"center"},P.createElement(p.Z,{checked:r,onChange:function(){return t()}}),P.createElement(h.Z,{width:"2x"}),P.createElement(c.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"Enable flip modifier"))),P.createElement(x.Z,{my:"4x"}),P.createElement(g.Z,{height:180,width:180,overflowY:"visible",border:1,borderColor:n.divider},P.createElement(u.Z,{alignItems:"center",justifyContent:"center",height:300},P.createElement(v.Z,{isOpen:!0,placement:"top"},P.createElement(f.Z,null,P.createElement(c.Z,{display:"inline-block"},"Reference")),P.createElement(m.Z,{PopperProps:{modifiers:[{name:"flip",enabled:r}]}},"Popover")))))},w=o(62080),Z=function(){return P.createElement(v.Z,null,P.createElement(f.Z,null,P.createElement(w.Z,{variant:"secondary"},"Trigger")),P.createElement(m.Z,{PopperProps:{usePortal:!0}},"Popover"))},B=o(6194),E=function(){return P.createElement(l.Z,{display:"inline-block"},P.createElement(B.Z,{templateColumns:"repeat(3, minmax(84px,1fr))",templateRows:"repeat(4, 84px)",gap:"8x"},["top-start","top","top-end","right-start","right","right-end","bottom-start","bottom","bottom-end","left-start","left","left-end"].map(function(e){return P.createElement(v.Z,{key:e,placement:e,trigger:"hover"},P.createElement(f.Z,null,P.createElement(w.Z,{width:"100%"},e)),P.createElement(m.Z,null,"Popover"))})))},F=o(53860),I=o(59229),R=o(52903),A=(0,P.forwardRef)(function(e,n){var o=(0,I.oh)();return(0,R.tZ)(l.Z,(0,F.Zj)((0,F.Zj)({as:"header",ref:n},o),e))});A.displayName="PopoverHeader";var S=(0,P.forwardRef)(function(e,n){var o=(0,I.VC)();return(0,R.tZ)(l.Z,(0,F.Zj)((0,F.Zj)({ref:n},o),e))});S.displayName="PopoverBody";var N=(0,P.forwardRef)(function(e,n){var o=(0,I.A9)();return(0,R.tZ)(l.Z,(0,F.Zj)((0,F.Zj)({as:"footer",ref:n},o),e))});N.displayName="PopoverFooter";var O=o(19088),H=function(){return P.createElement(v.Z,null,function(e){e.isOpen;var n=e.onClose;return P.createElement(P.Fragment,null,P.createElement(f.Z,null,P.createElement(w.Z,{variant:"secondary"},"Trigger")),P.createElement(m.Z,null,P.createElement(A,null,"Popover Header"),P.createElement(S,null,"Popover Body"),P.createElement(N,null,P.createElement(u.Z,{justifyContent:"space-between",columnGap:"4x"},P.createElement(O.Z,{fontSize:"sm"},"Learn more"),P.createElement(B.Z,{templateColumns:"1fr 1fr",columnGap:"2x"},P.createElement(w.Z,{variant:"primary"},"Submit"),P.createElement(w.Z,{variant:"default",onClick:n},"Cancel"))))))})},M=function(){return P.createElement(v.Z,{trigger:"hover",followCursor:!0},P.createElement(f.Z,null,P.createElement(c.Z,{display:"inline-block"},"Hover Me")),P.createElement(m.Z,null,"Popover"))},G=function(){return P.createElement(v.Z,{trigger:"hover",nextToCursor:!0},P.createElement(f.Z,null,P.createElement(c.Z,{display:"inline-block"},"Hover Me")),P.createElement(m.Z,null,"Popover"))};function D(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var r,t,i,l,s=[],a=!0,c=!1;try{if(i=(o=o.call(e)).next,0===n){if(Object(o)!==o)return;a=!1}else for(;!(a=(r=i.call(o)).done)&&(s.push(r.value),s.length!==n);a=!0);}catch(e){c=!0,t=e}finally{try{if(!a&&null!=o.return&&(l=o.return(),Object(l)!==l))return}finally{if(c)throw t}}return s}}(e,n)||function(e,n){if(e){if("string"==typeof e)return _(e,n);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return _(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function _(e,n){(null==n||n>e.length)&&(n=e.length);for(var o=0,r=Array(n);o<n;o++)r[o]=e[o];return r}var L=function(){var e=D((0,P.useState)(0),2),n=e[0],o=e[1],r=D((0,P.useState)(12),2),t=r[0],i=r[1];return P.createElement(P.Fragment,null,P.createElement(l.Z,{mb:"4x"},P.createElement(l.Z,{mb:"2x"},P.createElement(d.Z,null,"skidding")),P.createElement(u.Z,{columnGap:"4x"},P.createElement("input",{type:"range",name:"skidding",min:-50,max:50,value:n,onChange:function(e){return o(Number(e.target.value))}}),P.createElement(c.Z,null,n))),P.createElement(l.Z,{mb:"4x"},P.createElement(l.Z,{mb:"2x"},P.createElement(d.Z,null,"distance")),P.createElement(u.Z,{columnGap:"4x"},P.createElement("input",{type:"range",name:"distance",min:-50,max:50,value:t,onChange:function(e){return i(Number(e.target.value))}}),P.createElement(c.Z,null,t))),P.createElement(v.Z,{isOpen:!0,trigger:"hover",offset:[n,t]},P.createElement(f.Z,null,P.createElement(c.Z,{display:"inline-block"},"Hover Me")),P.createElement(m.Z,null,"Popover")))},U=function(){return P.createElement(v.Z,{trigger:"hover"},P.createElement(f.Z,null,P.createElement(c.Z,{display:"inline-block"},"Text content")),P.createElement(m.Z,null,"Popover"))},z=function(){return P.createElement(u.Z,null,P.createElement(v.Z,{trigger:"hover"},P.createElement(f.Z,{shouldWrapChildren:!0},P.createElement(w.Z,{disabled:!0,variant:"secondary"},"Trigger")),P.createElement(m.Z,null,"Popover")))},W=function(){return P.createElement(u.Z,null,P.createElement(v.Z,{trigger:"hover"},P.createElement(f.Z,null,P.createElement(w.Z,{disabled:!0,variant:"secondary"},"Trigger")),P.createElement(m.Z,null,"Popover")))},V=function(){return P.createElement(v.Z,{arrow:!1},P.createElement(f.Z,null,P.createElement(w.Z,{variant:"secondary"},"Trigger")),P.createElement(m.Z,null,"Popover"))},Y=function(){return P.createElement(u.Z,{columnGap:"4x"},P.createElement(v.Z,null,P.createElement(f.Z,null,P.createElement(w.Z,{variant:"secondary"},"Trigger")),P.createElement(m.Z,null)),P.createElement(x.Z,{orientation:"vertical"}),P.createElement(v.Z,{disabled:!0},P.createElement(f.Z,null,P.createElement(w.Z,{variant:"secondary"},"Trigger")),P.createElement(m.Z,null,"Popover")))},K=o(61619),X=o(3398),Q=function(){var e=(0,P.useRef)(),n=(0,P.useRef)();return P.createElement(K.Z,{spacing:"6x",width:"fit-content"},P.createElement(v.Z,{initialFocusRef:e,returnFocusOnClose:!1},P.createElement(f.Z,null,P.createElement(w.Z,{variant:"secondary"},"Interactive Trigger")),P.createElement(m.Z,null,P.createElement(S,null,P.createElement(X.Z,{mt:"3x",ref:e,defaultValue:"Popover"})))),P.createElement(v.Z,{initialFocusRef:n,returnFocusOnClose:!1},P.createElement(f.Z,{tabIndex:-1},P.createElement(c.Z,{userSelect:"none",_hover:{cursor:"pointer"}},"Non-interactive Trigger")),P.createElement(m.Z,null,P.createElement(S,null,P.createElement(X.Z,{mt:"3x",ref:n,defaultValue:"Popover"})))))},$=function(){var e=(0,P.useRef)(),n=(0,P.useRef)();return P.createElement(K.Z,{spacing:"6x",width:"fit-content"},P.createElement(v.Z,{initialFocusRef:e},P.createElement(f.Z,null,P.createElement(w.Z,{variant:"secondary"},"Interactive Trigger")),P.createElement(m.Z,null,P.createElement(S,null,P.createElement(X.Z,{mt:"3x",ref:e,defaultValue:"Popover"})))),P.createElement(v.Z,{initialFocusRef:n},P.createElement(f.Z,{tabIndex:-1},P.createElement(c.Z,{userSelect:"none",_hover:{cursor:"pointer"}},"Non-interactive Trigger")),P.createElement(m.Z,null,P.createElement(S,null,P.createElement(X.Z,{mt:"3x",ref:n,defaultValue:"Popover"})))))},q=function(){return P.createElement(v.Z,{defaultIsOpen:!1},P.createElement(f.Z,null,P.createElement(w.Z,{variant:"secondary"},"Trigger")),P.createElement(m.Z,null,P.createElement(c.Z,null,"This is an uncontrolled popover")))},J=o(99291);function ee(e,n){(null==n||n>e.length)&&(n=e.length);for(var o=0,r=Array(n);o<n;o++)r[o]=e[o];return r}var en=function(){var e,n=function(e){if(Array.isArray(e))return e}(e=(0,j.Z)(!1))||function(e,n){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var r,t,i,l,s=[],a=!0,c=!1;try{for(i=(o=o.call(e)).next;!(a=(r=i.call(o)).done)&&(s.push(r.value),2!==s.length);a=!0);}catch(e){c=!0,t=e}finally{try{if(!a&&null!=o.return&&(l=o.return(),Object(l)!==l))return}finally{if(c)throw t}}return s}}(e,2)||function(e,n){if(e){if("string"==typeof e)return ee(e,2);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return ee(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),o=n[0],r=n[1];return P.createElement(P.Fragment,null,P.createElement(u.Z,{mb:"4x"},P.createElement(J.Z,{checked:o,onChange:r})),P.createElement(v.Z,{isOpen:o,placement:"bottom"},P.createElement(f.Z,null,P.createElement(w.Z,{onClick:r},"Trigger")),P.createElement(m.Z,null,P.createElement(c.Z,null,"This is a controlled popover"))))};function eo(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",a:"a",h2:"h2",svg:"svg",use:"use",pre:"pre",h3:"h3",h4:"h4",strong:"strong",ul:"ul",li:"li",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,t.ah)(),e.components);return(0,r.jsxs)(n.div,{className:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,r.jsx)(n.h1,{id:"popover",children:"Popover"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Popover"})," is a non-modal dialog that floats around a trigger. ",(0,r.jsx)(n.code,{children:"Popover"})," is used to display contextual information to users, and should be paired with a clickable trigger element."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"Popover"})," is built on top of the ",(0,r.jsx)(n.a,{href:"https://popper.js.org/",children:"Popper.js"})," library, and is composed of the ",(0,r.jsx)(n.code,{children:"Popper"})," component."]}),"\n",(0,r.jsx)("carbon-ad",{}),"\n",(0,r.jsxs)(n.h2,{id:"import",children:["Import",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-js",children:"import {\n  Popover,\n  PopoverArrow,\n  PopoverTrigger,\n  PopoverContent,\n  PopoverHeader,\n  PopoverBody,\n  PopoverFooter,\n  usePopover,\n} from '@tonic-ui/react';\n"})}),"\n",(0,r.jsxs)(n.h2,{id:"usage",children:["Usage",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["To create an accessible popover, it should allow users to access it using the tab key on a keyboard. When it opens, the focus status will be set to ",(0,r.jsx)(n.code,{children:"PopoverContent"}),". When it closes, the focus status will return to ",(0,r.jsx)(n.code,{children:"PopoverTrigger"}),"."]}),"\n",(0,r.jsx)(n.pre,{disabled:!0,children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<Popover>\n  <PopoverTrigger>\n    <Button variant="secondary">\n      Interactive Trigger\n    </Button>\n  </PopoverTrigger>\n  <PopoverContent>\n    <PopoverHeader>Popover Header</PopoverHeader>\n    <PopoverBody>Popover Body</PopoverBody>\n    <PopoverFooter>Popover Footer</PopoverFooter>\n  </PopoverContent>\n</Popover>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["By default, you can only pass a single React element child to the ",(0,r.jsx)(n.code,{children:"PopoverTrigger"})," component."]}),"\n",(0,r.jsx)(n.pre,{disabled:!0,children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<PopoverTrigger>\n  <Button variant="secondary">\n    Interactive Trigger\n  </Button>\n</PopoverTrigger>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["If you need to pass more than one child element or non-element children, wrap them in an element or pass the ",(0,r.jsx)(n.code,{children:"shouldWrapChildren"})," prop."]}),"\n",(0,r.jsx)(n.pre,{disabled:!0,children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<PopoverTrigger outline={0} tabIndex={-1}>\n  <Text display="inline-block">\n    Non-interactive Trigger\n  </Text>\n</PopoverTrigger>\n'})}),"\n",(0,r.jsx)(n.pre,{disabled:!0,children:(0,r.jsx)(n.code,{className:"language-jsx",children:"<PopoverTrigger outline={0} shouldWrapChildren tabIndex={-1}>\n  Non-interactive Trigger\n</PopoverTrigger>\n"})}),"\n",(0,r.jsx)(n.pre,{disabled:!0,children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<PopoverTrigger outline={0} shouldWrapChildren tabIndex={-1}>\n  <MenuIcon height="5x" mr="2x" />\n  <Text display="inline-block">Non-interactive Trigger</Text>\n</Popover>\n'})}),"\n",(0,r.jsxs)(n.p,{children:["\uD83D\uDCE2 Please note that if you pass non-interactive elements to ",(0,r.jsx)(n.code,{children:"PopoverTrigger"}),", it is important to set the ",(0,r.jsx)(n.code,{children:"tabIndex"})," value. You can set either ",(0,r.jsx)(n.code,{children:"-1"})," or ",(0,r.jsx)(n.code,{children:"0"}),", and this will ensure that the ",(0,r.jsx)(n.code,{children:"PopoverTrigger"})," component functions correctly. If you fail to set this value, the ",(0,r.jsx)(n.code,{children:"PopoverTrigger"})," may not work as intended."]}),"\n",(0,r.jsxs)(n.h3,{id:"controlled-and-uncontrolled-popover",children:["Controlled and uncontrolled popover",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#controlled-and-uncontrolled-popover",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["Pass ",(0,r.jsx)(n.code,{children:"isOpen"})," to the ",(0,r.jsx)(n.code,{children:"Popover"})," component to control the state of the popover."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:en,file:{data:"import { Button, Flex, Popover, PopoverContent, PopoverTrigger, Switch, Text } from '@tonic-ui/react';\nimport { useToggle } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [on, toggle] = useToggle(false);\n\n  return (\n    <>\n      <Flex mb=\"4x\">\n        <Switch checked={on} onChange={toggle} />\n      </Flex>\n      <Popover\n        isOpen={on}\n        placement=\"bottom\"\n      >\n        <PopoverTrigger>\n          <Button onClick={toggle}>\n            Trigger\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent>\n          <Text>This is a controlled popover</Text>\n        </PopoverContent>\n      </Popover>\n    </>\n  );\n};\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Flex, Popover, PopoverContent, PopoverTrigger, Switch, Text } from '@tonic-ui/react';\nimport { useToggle } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [on, toggle] = useToggle(false);\n\n  return (\n    <>\n      <Flex mb=\"4x\">\n        <Switch checked={on} onChange={toggle} />\n      </Flex>\n      <Popover\n        isOpen={on}\n        placement=\"bottom\"\n      >\n        <PopoverTrigger>\n          <Button onClick={toggle}>\n            Trigger\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent>\n          <Text>This is a controlled popover</Text>\n        </PopoverContent>\n      </Popover>\n    </>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.p,{children:["Popover is uncontrolled by default. You can set ",(0,r.jsx)(n.code,{children:"defaultIsOpen"})," to ",(0,r.jsx)(n.code,{children:"true"})," to have the popover open for the first render."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:q,file:{data:"import { Button, Popover, PopoverContent, PopoverTrigger, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover defaultIsOpen={false}>\n    <PopoverTrigger>\n      <Button variant=\"secondary\">Trigger</Button>\n    </PopoverTrigger>\n    <PopoverContent>\n      <Text>This is an uncontrolled popover</Text>\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Popover, PopoverContent, PopoverTrigger, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover defaultIsOpen={false}>\n    <PopoverTrigger>\n      <Button variant=\"secondary\">Trigger</Button>\n    </PopoverTrigger>\n    <PopoverContent>\n      <Text>This is an uncontrolled popover</Text>\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"focus-control",children:["Focus control",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#focus-control",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h4,{id:"focus-an-element-when-popover-opens",children:["Focus an element when popover opens",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#focus-an-element-when-popover-opens",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The focus status will send to ",(0,r.jsx)(n.code,{children:"PopoverContent"})," when ",(0,r.jsx)(n.code,{children:"Popover"})," opens. You can send the focus status to a specific element when it opens by passing the ",(0,r.jsx)(n.code,{children:"initialFocusRef"})," prop."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:$,file:{data:'import { Button, Input, Popover, PopoverBody, PopoverContent, PopoverTrigger, Stack, Text } from \'@tonic-ui/react\';\nimport React, { useRef } from \'react\';\n\nconst App = () => {\n  const initialFocusRef1 = useRef();\n  const initialFocusRef2 = useRef();\n\n  return (\n    <Stack spacing="6x" width="fit-content">\n      <Popover initialFocusRef={initialFocusRef1}>\n        <PopoverTrigger>\n          <Button variant="secondary">\n            Interactive Trigger\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody>\n            <Input mt="3x" ref={initialFocusRef1} defaultValue="Popover" />\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n      <Popover initialFocusRef={initialFocusRef2}>\n        <PopoverTrigger tabIndex={-1}>\n          <Text\n            userSelect="none"\n            _hover={{ cursor: \'pointer\' }}\n          >\n            Non-interactive Trigger\n          </Text>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody>\n            <Input mt="3x" ref={initialFocusRef2} defaultValue="Popover" />\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Stack>\n  );\n};\n\nexport default App;',path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Input, Popover, PopoverBody, PopoverContent, PopoverTrigger, Stack, Text } from \'@tonic-ui/react\';\nimport React, { useRef } from \'react\';\n\nconst App = () => {\n  const initialFocusRef1 = useRef();\n  const initialFocusRef2 = useRef();\n\n  return (\n    <Stack spacing="6x" width="fit-content">\n      <Popover initialFocusRef={initialFocusRef1}>\n        <PopoverTrigger>\n          <Button variant="secondary">\n            Interactive Trigger\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody>\n            <Input mt="3x" ref={initialFocusRef1} defaultValue="Popover" />\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n      <Popover initialFocusRef={initialFocusRef2}>\n        <PopoverTrigger tabIndex={-1}>\n          <Text\n            userSelect="none"\n            _hover={{ cursor: \'pointer\' }}\n          >\n            Non-interactive Trigger\n          </Text>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody>\n            <Input mt="3x" ref={initialFocusRef2} defaultValue="Popover" />\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Stack>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h4,{id:"focus-an-element-when-popover-closes",children:["Focus an element when popover closes",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#focus-an-element-when-popover-closes",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["When the ",(0,r.jsx)(n.code,{children:"Popover"})," is closed, the focus status is sent to the ",(0,r.jsx)(n.code,{children:"PopoverTrigger"}),". If you need to prevent the ",(0,r.jsx)(n.code,{children:"Popover"})," from returning the focus status to ",(0,r.jsx)(n.code,{children:"PopoverTrigger"}),", you can set the ",(0,r.jsx)(n.code,{children:"returnFocusOnClose"})," prop to ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:Q,file:{data:'import { Button, Input, Popover, PopoverBody, PopoverContent, PopoverTrigger, Stack, Text } from \'@tonic-ui/react\';\nimport React, { useRef } from \'react\';\n\nconst App = () => {\n  const initialFocusRef1 = useRef();\n  const initialFocusRef2 = useRef();\n\n  return (\n    <Stack spacing="6x" width="fit-content">\n      <Popover\n        initialFocusRef={initialFocusRef1}\n        returnFocusOnClose={false}\n      >\n        <PopoverTrigger>\n          <Button variant="secondary">\n            Interactive Trigger\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody>\n            <Input mt="3x" ref={initialFocusRef1} defaultValue="Popover" />\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n      <Popover\n        initialFocusRef={initialFocusRef2}\n        returnFocusOnClose={false}\n      >\n        <PopoverTrigger tabIndex={-1}>\n          <Text\n            userSelect="none"\n            _hover={{ cursor: \'pointer\' }}\n          >\n            Non-interactive Trigger\n          </Text>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody>\n            <Input mt="3x" ref={initialFocusRef2} defaultValue="Popover" />\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Stack>\n  );\n};\n\nexport default App;',path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Input, Popover, PopoverBody, PopoverContent, PopoverTrigger, Stack, Text } from \'@tonic-ui/react\';\nimport React, { useRef } from \'react\';\n\nconst App = () => {\n  const initialFocusRef1 = useRef();\n  const initialFocusRef2 = useRef();\n\n  return (\n    <Stack spacing="6x" width="fit-content">\n      <Popover\n        initialFocusRef={initialFocusRef1}\n        returnFocusOnClose={false}\n      >\n        <PopoverTrigger>\n          <Button variant="secondary">\n            Interactive Trigger\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody>\n            <Input mt="3x" ref={initialFocusRef1} defaultValue="Popover" />\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n      <Popover\n        initialFocusRef={initialFocusRef2}\n        returnFocusOnClose={false}\n      >\n        <PopoverTrigger tabIndex={-1}>\n          <Text\n            userSelect="none"\n            _hover={{ cursor: \'pointer\' }}\n          >\n            Non-interactive Trigger\n          </Text>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody>\n            <Input mt="3x" ref={initialFocusRef2} defaultValue="Popover" />\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Stack>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"hide-the-popover",children:["Hide the popover",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#hide-the-popover",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["To hide a popover in your app, you can pass an empty value to the children of the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," component or use the ",(0,r.jsx)(n.code,{children:"disabled"})," prop. Here are examples:"]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:Y,file:{data:'import { Button, Divider, Flex, Popover, PopoverContent, PopoverTrigger } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Flex columnGap="4x">\n    <Popover>\n      <PopoverTrigger>\n        <Button variant="secondary">Trigger</Button>\n      </PopoverTrigger>\n      <PopoverContent>\n      </PopoverContent>\n    </Popover>\n    <Divider orientation="vertical" />\n    <Popover disabled>\n      <PopoverTrigger>\n        <Button variant="secondary">Trigger</Button>\n      </PopoverTrigger>\n      <PopoverContent>\n        Popover\n      </PopoverContent>\n    </Popover>\n  </Flex>\n);\n\nexport default App;',path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Divider, Flex, Popover, PopoverContent, PopoverTrigger } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Flex columnGap="4x">\n    <Popover>\n      <PopoverTrigger>\n        <Button variant="secondary">Trigger</Button>\n      </PopoverTrigger>\n      <PopoverContent>\n      </PopoverContent>\n    </Popover>\n    <Divider orientation="vertical" />\n    <Popover disabled>\n      <PopoverTrigger>\n        <Button variant="secondary">Trigger</Button>\n      </PopoverTrigger>\n      <PopoverContent>\n        Popover\n      </PopoverContent>\n    </Popover>\n  </Flex>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"hide-the-arrow-of-the-popover",children:["Hide the arrow of the popover",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#hide-the-arrow-of-the-popover",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["To remove the arrow from a popover, you can pass ",(0,r.jsx)(n.code,{children:"arrow={false}"})," to the ",(0,r.jsx)(n.code,{children:"Popover"})," component."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:V,file:{data:"import { Button, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover arrow={false}>\n    <PopoverTrigger>\n      <Button variant=\"secondary\">Trigger</Button>\n    </PopoverTrigger>\n    <PopoverContent>\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover arrow={false}>\n    <PopoverTrigger>\n      <Button variant=\"secondary\">Trigger</Button>\n    </PopoverTrigger>\n    <PopoverContent>\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"popover-around-disabled-button",children:["Popover around disabled button",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#popover-around-disabled-button",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["By default the ",(0,r.jsx)(n.code,{children:"Popover"})," is not shown when it is around a disabled ",(0,r.jsx)(n.code,{children:"Button"}),"."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:W,file:{data:"import { Button, Flex, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Flex>\n    <Popover trigger=\"hover\">\n      <PopoverTrigger>\n        <Button disabled variant=\"secondary\">Trigger</Button>\n      </PopoverTrigger>\n      <PopoverContent>\n        Popover\n      </PopoverContent>\n    </Popover>\n  </Flex>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Flex, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Flex>\n    <Popover trigger=\"hover\">\n      <PopoverTrigger>\n        <Button disabled variant=\"secondary\">Trigger</Button>\n      </PopoverTrigger>\n      <PopoverContent>\n        Popover\n      </PopoverContent>\n    </Popover>\n  </Flex>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.p,{children:["To show the ",(0,r.jsx)(n.code,{children:"Popover"})," on a disabled ",(0,r.jsx)(n.code,{children:"Button"}),", pass the ",(0,r.jsx)(n.code,{children:"shouldWrapChildren"})," prop."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:z,file:{data:"import { Button, Flex, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Flex>\n    <Popover trigger=\"hover\">\n      <PopoverTrigger shouldWrapChildren>\n        <Button disabled variant=\"secondary\">Trigger</Button>\n      </PopoverTrigger>\n      <PopoverContent>\n        Popover\n      </PopoverContent>\n    </Popover>\n  </Flex>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Flex, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Flex>\n    <Popover trigger=\"hover\">\n      <PopoverTrigger shouldWrapChildren>\n        <Button disabled variant=\"secondary\">Trigger</Button>\n      </PopoverTrigger>\n      <PopoverContent>\n        Popover\n      </PopoverContent>\n    </Popover>\n  </Flex>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"activating-a-popover-on-hover",children:["Activating a popover on hover",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#activating-a-popover-on-hover",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["To activate a popover on hover, set the ",(0,r.jsx)(n.code,{children:"trigger"})," prop to ",(0,r.jsx)(n.code,{children:'"hover"'}),". This will display the popover when a user hovers the cursor over the ",(0,r.jsx)(n.code,{children:"PopoverTrigger"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["Once the popover is displayed, the cursor can be moved freely between the ",(0,r.jsx)(n.code,{children:"PopoverTrigger"})," and ",(0,r.jsx)(n.code,{children:"PopoverContent"}),". The popover will remain open until the cursor is moved away from the ",(0,r.jsx)(n.code,{children:"PopoverContent"}),"."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:U,file:{data:"import { Popover, PopoverContent, PopoverTrigger, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover trigger=\"hover\">\n    <PopoverTrigger>\n      <Text display=\"inline-block\">Text content</Text>\n    </PopoverTrigger>\n    <PopoverContent>\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Popover, PopoverContent, PopoverTrigger, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover trigger=\"hover\">\n    <PopoverTrigger>\n      <Text display=\"inline-block\">Text content</Text>\n    </PopoverTrigger>\n    <PopoverContent>\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"adjust-popover-positioning",children:["Adjust popover positioning",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#adjust-popover-positioning",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h4,{id:"using-the-offset-prop",children:["Using the ",(0,r.jsx)(n.code,{children:"offset"})," prop",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-offset-prop",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"offset"})," prop allows you to adjust the positioning of the popover by accepting an array of two numbers in the format ",(0,r.jsx)(n.code,{children:"[skidding, distance]"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Skidding"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"skidding"})," number determines the displacement of the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," from the ",(0,r.jsx)(n.code,{children:"PopoverTrigger"})," and is measured in pixels."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Distance"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"distance"})," number controls the distance between the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," and the ",(0,r.jsx)(n.code,{children:"PopoverTrigger"})," and is measured in pixels."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:L,file:{data:'import { Box, Flex, Popover, PopoverContent, PopoverTrigger, Text, TextLabel } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [skidding, setSkidding] = useState(0);\n  const [distance, setDistance] = useState(12);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Box mb="2x">\n          <TextLabel>skidding</TextLabel>\n        </Box>\n        <Flex columnGap="4x">\n          <input\n            type="range"\n            name="skidding"\n            min={-50}\n            max={50}\n            value={skidding}\n            onChange={(e) => setSkidding(Number(e.target.value))}\n          />\n          <Text>{skidding}</Text>\n        </Flex>\n      </Box>\n      <Box mb="4x">\n        <Box mb="2x">\n          <TextLabel>distance</TextLabel>\n        </Box>\n        <Flex columnGap="4x">\n          <input\n            type="range"\n            name="distance"\n            min={-50}\n            max={50}\n            value={distance}\n            onChange={(e) => setDistance(Number(e.target.value))}\n          />\n          <Text>{distance}</Text>\n        </Flex>\n      </Box>\n      <Popover isOpen trigger="hover" offset={[skidding, distance]}>\n        <PopoverTrigger>\n          <Text display="inline-block">Hover Me</Text>\n        </PopoverTrigger>\n        <PopoverContent>\n          Popover\n        </PopoverContent>\n      </Popover>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:'import { Box, Flex, Popover, PopoverContent, PopoverTrigger, Text, TextLabel } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [skidding, setSkidding] = useState(0);\n  const [distance, setDistance] = useState(12);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Box mb="2x">\n          <TextLabel>skidding</TextLabel>\n        </Box>\n        <Flex columnGap="4x">\n          <input\n            type="range"\n            name="skidding"\n            min={-50}\n            max={50}\n            value={skidding}\n            onChange={(e) => setSkidding(Number(e.target.value))}\n          />\n          <Text>{skidding}</Text>\n        </Flex>\n      </Box>\n      <Box mb="4x">\n        <Box mb="2x">\n          <TextLabel>distance</TextLabel>\n        </Box>\n        <Flex columnGap="4x">\n          <input\n            type="range"\n            name="distance"\n            min={-50}\n            max={50}\n            value={distance}\n            onChange={(e) => setDistance(Number(e.target.value))}\n          />\n          <Text>{distance}</Text>\n        </Flex>\n      </Box>\n      <Popover isOpen trigger="hover" offset={[skidding, distance]}>\n        <PopoverTrigger>\n          <Text display="inline-block">Hover Me</Text>\n        </PopoverTrigger>\n        <PopoverContent>\n          Popover\n        </PopoverContent>\n      </Popover>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h4,{id:"using-the-nexttocursor-prop",children:["Using the ",(0,r.jsx)(n.code,{children:"nextToCursor"})," prop",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-nexttocursor-prop",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"nextToCursor"})," prop positions the popover next to the cursor."]}),"\n",(0,r.jsxs)(n.p,{children:["Note that this prop only works when the ",(0,r.jsx)(n.code,{children:"trigger"})," prop is set to ",(0,r.jsx)(n.code,{children:'"hover"'}),"."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:G,file:{data:"import { Popover, PopoverContent, PopoverTrigger, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover trigger=\"hover\" nextToCursor>\n    <PopoverTrigger>\n      <Text display=\"inline-block\">Hover Me</Text>\n    </PopoverTrigger>\n    <PopoverContent>\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Popover, PopoverContent, PopoverTrigger, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover trigger=\"hover\" nextToCursor>\n    <PopoverTrigger>\n      <Text display=\"inline-block\">Hover Me</Text>\n    </PopoverTrigger>\n    <PopoverContent>\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h4,{id:"using-the-followcursor-prop",children:["Using the ",(0,r.jsx)(n.code,{children:"followCursor"})," prop",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-followcursor-prop",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"followCursor"})," prop makes the popover follow the cursor as it moves."]}),"\n",(0,r.jsxs)(n.p,{children:["Note that this prop only works when the ",(0,r.jsx)(n.code,{children:"trigger"})," prop is set to ",(0,r.jsx)(n.code,{children:'"hover"'}),"."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:M,file:{data:"import { Popover, PopoverContent, PopoverTrigger, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover trigger=\"hover\" followCursor>\n    <PopoverTrigger>\n      <Text display=\"inline-block\">Hover Me</Text>\n    </PopoverTrigger>\n    <PopoverContent>\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Popover, PopoverContent, PopoverTrigger, Text } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover trigger=\"hover\" followCursor>\n    <PopoverTrigger>\n      <Text display=\"inline-block\">Hover Me</Text>\n    </PopoverTrigger>\n    <PopoverContent>\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"context-api",children:["Context API",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#context-api",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["To access the internal state of the popover, you can use the Function as Child Component (FaCC) pattern or use the ",(0,r.jsx)(n.code,{children:"usePopover"})," hook."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:H,file:{data:'import { Button, Flex, Grid, Link, Popover, PopoverBody, PopoverContent, PopoverFooter, PopoverHeader, PopoverTrigger } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Popover>\n    {({ isOpen, onClose }) => (\n      <>\n        <PopoverTrigger>\n          <Button variant="secondary">Trigger</Button>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverHeader>\n            Popover Header\n          </PopoverHeader>\n          <PopoverBody>\n            Popover Body\n          </PopoverBody>\n          <PopoverFooter>\n            <Flex\n              justifyContent="space-between"\n              columnGap="4x"\n            >\n              <Link fontSize="sm">Learn more</Link>\n              <Grid\n                templateColumns="1fr 1fr"\n                columnGap="2x"\n              >\n                <Button variant="primary">Submit</Button>\n                <Button variant="default" onClick={onClose}>\n                  Cancel\n                </Button>\n              </Grid>\n            </Flex>\n          </PopoverFooter>\n        </PopoverContent>\n      </>\n    )}\n  </Popover>\n);\n\nexport default App;',path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Flex, Grid, Link, Popover, PopoverBody, PopoverContent, PopoverFooter, PopoverHeader, PopoverTrigger } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Popover>\n    {({ isOpen, onClose }) => (\n      <>\n        <PopoverTrigger>\n          <Button variant="secondary">Trigger</Button>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverHeader>\n            Popover Header\n          </PopoverHeader>\n          <PopoverBody>\n            Popover Body\n          </PopoverBody>\n          <PopoverFooter>\n            <Flex\n              justifyContent="space-between"\n              columnGap="4x"\n            >\n              <Link fontSize="sm">Learn more</Link>\n              <Grid\n                templateColumns="1fr 1fr"\n                columnGap="2x"\n              >\n                <Button variant="primary">Submit</Button>\n                <Button variant="default" onClick={onClose}>\n                  Cancel\n                </Button>\n              </Grid>\n            </Flex>\n          </PopoverFooter>\n        </PopoverContent>\n      </>\n    )}\n  </Popover>\n);\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"placement",children:["Placement",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#placement",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["Use the ",(0,r.jsx)(n.code,{children:"placement"})," prop to control the placement of the popover."]}),"\n",(0,r.jsx)(n.pre,{disabled:!0,children:(0,r.jsx)(n.code,{className:"language-jsx",children:'<Popover placement="top" trigger="hover">\n  <PopoverTrigger>\n    <LinkButton>Trigger</LinkButton>\n  </PopoverTrigger>\n  <PopoverContent>\n    Popover\n  </PopoverContent>\n</Popover>\n'})}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:E,file:{data:"import { Box, Button, Grid, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Box display=\"inline-block\">\n    <Grid\n      templateColumns=\"repeat(3, minmax(84px,1fr))\"\n      templateRows=\"repeat(4, 84px)\"\n      gap=\"8x\"\n    >\n      {['top-start', 'top', 'top-end',\n        'right-start', 'right', 'right-end',\n        'bottom-start', 'bottom', 'bottom-end',\n        'left-start', 'left', 'left-end'\n      ].map(placement => (\n        <Popover\n          key={placement}\n          placement={placement}\n          trigger=\"hover\"\n        >\n          <PopoverTrigger>\n            <Button width=\"100%\">\n              {placement}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent>\n            Popover\n          </PopoverContent>\n        </Popover>\n      ))}\n    </Grid>\n  </Box>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Box, Button, Grid, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Box display=\"inline-block\">\n    <Grid\n      templateColumns=\"repeat(3, minmax(84px,1fr))\"\n      templateRows=\"repeat(4, 84px)\"\n      gap=\"8x\"\n    >\n      {['top-start', 'top', 'top-end',\n        'right-start', 'right', 'right-end',\n        'bottom-start', 'bottom', 'bottom-end',\n        'left-start', 'left', 'left-end'\n      ].map(placement => (\n        <Popover\n          key={placement}\n          placement={placement}\n          trigger=\"hover\"\n        >\n          <PopoverTrigger>\n            <Button width=\"100%\">\n              {placement}\n            </Button>\n          </PopoverTrigger>\n          <PopoverContent>\n            Popover\n          </PopoverContent>\n        </Popover>\n      ))}\n    </Grid>\n  </Box>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h2,{id:"commonly-asked-questions",children:["Commonly Asked Questions",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#commonly-asked-questions",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"resolving-popover-content-cut-off-with-popperprops",children:["Resolving popover content cut-off with ",(0,r.jsx)(n.code,{children:"PopperProps"}),(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#resolving-popover-content-cut-off-with-popperprops",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["By default, the ",(0,r.jsx)(n.code,{children:"Popover"})," component positions the popover relative to its parent container. In some cases, the popover content might be cut off when it extends outside the container that holds it."]}),"\n",(0,r.jsxs)(n.p,{children:["To address this issue, you can pass ",(0,r.jsx)(n.code,{children:"PopperProps={{ usePortal: true }}"})," to ",(0,r.jsx)(n.code,{children:"PopoverContent"})," to make it positioned on the document root."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:Z,file:{data:"import { Button, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover>\n    <PopoverTrigger>\n      <Button variant=\"secondary\">Trigger</Button>\n    </PopoverTrigger>\n    <PopoverContent\n      PopperProps={{\n        usePortal: true,\n      }}\n    >\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Popover, PopoverContent, PopoverTrigger } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Popover>\n    <PopoverTrigger>\n      <Button variant=\"secondary\">Trigger</Button>\n    </PopoverTrigger>\n    <PopoverContent\n      PopperProps={{\n        usePortal: true,\n      }}\n    >\n      Popover\n    </PopoverContent>\n  </Popover>\n);\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h3,{id:"automatically-adjusting-popover-placement-with-the-flip-modifier",children:["Automatically adjusting popover placement with the ",(0,r.jsx)(n.code,{children:"flip"})," modifier",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#automatically-adjusting-popover-placement-with-the-flip-modifier",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"flip"})," modifier is a useful feature that allows for automatic adjustment of popover placement when it is at risk of overflowing the specified boundary. To learn more about utilizing the ",(0,r.jsx)(n.code,{children:"flip"})," modifier, please refer to ",(0,r.jsx)(n.a,{href:"https://popper.js.org/docs/v2/modifiers/flip/",children:"Popper.js documentation"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:["In the following example, the popover's placement is initially set to ",(0,r.jsx)(n.code,{children:"top"}),". However, if the placement is not suitable due to space constraints, the opposite ",(0,r.jsx)(n.code,{children:"bottom"})," placement will be used instead."]}),"\n",(0,r.jsx)(i.Z,Object.assign({},{component:k,file:{data:'import {\n  Box,\n  Checkbox,\n  Divider,\n  Flex,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Scrollbar,\n  Space,\n  Text,\n  TextLabel,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [isFlipModifierEnabled, toggleIsFlipModifierEnabled] = useToggle(true);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          Modifiers\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display="inline-flex" alignItems="center">\n          <Checkbox\n            checked={isFlipModifierEnabled}\n            onChange={() => toggleIsFlipModifierEnabled()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">Enable flip modifier</Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider my="4x" />\n      <Scrollbar\n        height={180}\n        width={180}\n        overflowY="visible"\n        border={1}\n        borderColor={colorStyle.divider}\n      >\n        <Flex\n          alignItems="center"\n          justifyContent="center"\n          height={300}\n        >\n          <Popover isOpen placement="top">\n            <PopoverTrigger>\n              <Text display="inline-block">\n                Reference\n              </Text>\n            </PopoverTrigger>\n            <PopoverContent\n              PopperProps={{\n                modifiers: [\n                  { // https://popper.js.org/docs/v2/modifiers/flip/\n                    name: \'flip\',\n                    enabled: isFlipModifierEnabled,\n                  },\n                ],\n              }}\n            >\n              Popover\n            </PopoverContent>\n          </Popover>\n        </Flex>\n      </Scrollbar>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/popover/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  Checkbox,\n  Divider,\n  Flex,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Scrollbar,\n  Space,\n  Text,\n  TextLabel,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [isFlipModifierEnabled, toggleIsFlipModifierEnabled] = useToggle(true);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          Modifiers\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display="inline-flex" alignItems="center">\n          <Checkbox\n            checked={isFlipModifierEnabled}\n            onChange={() => toggleIsFlipModifierEnabled()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">Enable flip modifier</Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider my="4x" />\n      <Scrollbar\n        height={180}\n        width={180}\n        overflowY="visible"\n        border={1}\n        borderColor={colorStyle.divider}\n      >\n        <Flex\n          alignItems="center"\n          justifyContent="center"\n          height={300}\n        >\n          <Popover isOpen placement="top">\n            <PopoverTrigger>\n              <Text display="inline-block">\n                Reference\n              </Text>\n            </PopoverTrigger>\n            <PopoverContent\n              PopperProps={{\n                modifiers: [\n                  { // https://popper.js.org/docs/v2/modifiers/flip/\n                    name: \'flip\',\n                    enabled: isFlipModifierEnabled,\n                  },\n                ],\n              }}\n            >\n              Popover\n            </PopoverContent>\n          </Popover>\n        </Flex>\n      </Scrollbar>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,r.jsxs)(n.h2,{id:"accessibility",children:["Accessibility",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#accessibility",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"keyboard-and-focus",children:["Keyboard and focus",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#keyboard-and-focus",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Popover"})," component includes several accessibility features to ensure that it is usable with a keyboard and assistive technologies:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["When the ",(0,r.jsx)(n.code,{children:"Popover"})," is opened, the focus is automatically moved to the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," element. If the ",(0,r.jsx)(n.code,{children:"initialFocusRef"})," prop is set, then the focus is moved to the element with the specified reference."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["When the ",(0,r.jsx)(n.code,{children:"Popover"})," is closed, the focus returns to the trigger element by default. If the ",(0,r.jsx)(n.code,{children:"returnFocusOnClose"})," prop is set to ",(0,r.jsx)(n.code,{children:"false"}),", the focus will not return to the trigger element."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the trigger prop is set to ",(0,r.jsx)(n.code,{children:"'hover'"}),", the ",(0,r.jsx)(n.code,{children:"Popover"})," can be opened by focusing on or mousing over the trigger element, and closed by blurring or mousing out of the trigger element. If the mouse is moved into the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," element, the ",(0,r.jsx)(n.code,{children:"Popover"})," remains visible."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the trigger prop is set to ",(0,r.jsx)(n.code,{children:"'click'"}),", the ",(0,r.jsx)(n.code,{children:"Popover"})," can be opened by clicking on the trigger element or pressing the ",(0,r.jsx)(n.strong,{children:"Space"})," or ",(0,r.jsx)(n.strong,{children:"Enter"})," key when the trigger element has focus. The ",(0,r.jsx)(n.code,{children:"Popover"})," can be closed by clicking on the trigger element again."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Popover"})," can also be closed by hitting the ",(0,r.jsx)(n.strong,{children:"Esc"})," key when the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," element has focus, unless the ",(0,r.jsx)(n.code,{children:"closeOnEsc"})," prop is set to ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Clicking outside or blurring out of the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," element also closes the ",(0,r.jsx)(n.code,{children:"Popover"}),", unless the ",(0,r.jsx)(n.code,{children:"closeOnBlur"})," prop is set to ",(0,r.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h3,{id:"aria-attributes",children:["ARIA attributes",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#aria-attributes",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"trigger"})," is set to ",(0,r.jsx)(n.code,{children:"click"}),", the ",(0,r.jsx)(n.code,{children:"role"})," of the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," element is set to ",(0,r.jsx)(n.code,{children:"dialog"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["If the ",(0,r.jsx)(n.code,{children:"trigger"})," is set to ",(0,r.jsx)(n.code,{children:"hover"}),", the ",(0,r.jsx)(n.code,{children:"role"})," of the ",(0,r.jsx)(n.code,{children:"PopoverContent"})," element is set to ",(0,r.jsx)(n.code,{children:"tooltip"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"PopoverContent"})," has ",(0,r.jsx)(n.code,{children:"aria-labelledby"})," set to the ",(0,r.jsx)(n.code,{children:"id"})," attribute of ",(0,r.jsx)(n.code,{children:"PopoverHeader"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"PopoverContent"})," has ",(0,r.jsx)(n.code,{children:"aria-describedby"})," set to the ",(0,r.jsx)(n.code,{children:"id"})," attribute of ",(0,r.jsx)(n.code,{children:"PopoverBody"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.code,{children:"PopoverContent"})," has ",(0,r.jsx)(n.code,{children:"aria-hidden"})," set to ",(0,r.jsx)(n.code,{children:"true"})," or ",(0,r.jsx)(n.code,{children:"false"})," depending on the open/closed state of ",(0,r.jsx)(n.code,{children:"Popover"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The trigger has ",(0,r.jsx)(n.code,{children:"aria-haspopup"})," set to ",(0,r.jsx)(n.code,{children:"dialog"})," to denote the popup is a dialog."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The trigger has ",(0,r.jsx)(n.code,{children:"aria-controls"})," set to the ",(0,r.jsx)(n.code,{children:"id"})," attribute of ",(0,r.jsx)(n.code,{children:"PopoverContent"})," to associate the popover with the trigger."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["The trigger has ",(0,r.jsx)(n.code,{children:"aria-expanded"})," set to ",(0,r.jsx)(n.code,{children:"true"})," or ",(0,r.jsx)(n.code,{children:"false"})," depending on the open/closed state of the popover."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.h2,{id:"props",children:["Props",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.h3,{id:"popover-1",children:["Popover",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#popover-1",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"arrow"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left",children:"true"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", adds an arrow to the popover."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,r.jsx)(n.code,{children:"(context) => ReactNode"})]}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"closeOnBlur"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left",children:"true"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", the popover will close when the user clicks outside of the popover."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"closeOnEsc"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left",children:"true"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", the popover will close when you press the ",(0,r.jsx)(n.code,{children:"Esc"})," key."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"defaultIsOpen"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left",children:"false"}),(0,r.jsx)(n.td,{align:"left",children:"Whether the popover will be open by default."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"disabled"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", the popover will not display."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"enterDelay"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"100"}),(0,r.jsxs)(n.td,{align:"left",children:["The number of milliseconds to wait before showing the popover if ",(0,r.jsx)(n.code,{children:"trigger"})," is hover."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"followCursor"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", the popover will follow the cursor."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"initialFocusRef"}),(0,r.jsx)(n.td,{align:"left",children:"RefObject"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["The ",(0,r.jsx)(n.code,{children:"ref"})," of the element that will be focused when the popover opens."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"isOpen"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", the popover will be open."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"leaveDelay"}),(0,r.jsx)(n.td,{align:"left",children:"number"}),(0,r.jsx)(n.td,{align:"left",children:"0"}),(0,r.jsxs)(n.td,{align:"left",children:["The number of milliseconds to wait before hiding the popover if ",(0,r.jsx)(n.code,{children:"trigger"})," is hover."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"nextToCursor"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", the popover will be positioned next to the cursor."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"offset"}),(0,r.jsx)(n.td,{align:"left",children:"[skidding, distance]"}),(0,r.jsx)(n.td,{align:"left",children:"[0, 12]"}),(0,r.jsx)(n.td,{align:"left",children:"The skidding and distance of the popover."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onClose"}),(0,r.jsx)(n.td,{align:"left",children:"() => void"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"Callback when the popover is closed."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onOpen"}),(0,r.jsx)(n.td,{align:"left",children:"() => void"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"Callback when the popover is opened."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"placement"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'bottom'"}),(0,r.jsx)(n.td,{align:"left",children:"The placement of the popover. One of: 'top', 'bottom', 'right', 'left', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'right-start', 'right-end', 'left-start', 'left-end'"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"returnFocusOnClose"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left",children:"true"}),(0,r.jsxs)(n.td,{align:"left",children:["If ",(0,r.jsx)(n.code,{children:"true"}),", the popover will return the focus to the trigger element when closing. Otherwise, it will leave focus unchanged."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"trigger"}),(0,r.jsx)(n.td,{align:"left",children:"string"}),(0,r.jsx)(n.td,{align:"left",children:"'click'"}),(0,r.jsx)(n.td,{align:"left",children:"The type of trigger. One of: 'click', 'hover'"})]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"popoverarrow",children:["PopoverArrow",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#popoverarrow",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"arrowHeight"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left",children:"8"}),(0,r.jsx)(n.td,{align:"left",children:"The height of the arrow in pixels or other CSS units."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"arrowWidth"}),(0,r.jsx)(n.td,{align:"left",children:"number | string"}),(0,r.jsx)(n.td,{align:"left",children:"12"}),(0,r.jsx)(n.td,{align:"left",children:"The width of the arrow in pixels or other CSS units."})]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"popovertrigger",children:["PopoverTrigger",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#popovertrigger",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,r.jsx)(n.code,{children:"({ getPopoverTriggerProps }) => ReactNode"})]}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"popovercontent",children:["PopoverContent",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#popovercontent",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"PopperComponent"}),(0,r.jsx)(n.td,{align:"left",children:"ElementType"}),(0,r.jsx)(n.td,{align:"left",children:"Popper"}),(0,r.jsx)(n.td,{align:"left",children:"The component used for the popper."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"PopperProps"}),(0,r.jsx)(n.td,{align:"left",children:"object"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"Props applied to the Popper component."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"PopoverArrowComponent"}),(0,r.jsx)(n.td,{align:"left",children:"ElementType"}),(0,r.jsx)(n.td,{align:"left",children:"PopoverArrow"}),(0,r.jsx)(n.td,{align:"left",children:"The component used for the popover arrow."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"PopoverArrowProps"}),(0,r.jsx)(n.td,{align:"left",children:"object"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,r.jsx)(n.code,{children:"PopoverArrow"})," component."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"TransitionComponent"}),(0,r.jsx)(n.td,{align:"left",children:"ElementType"}),(0,r.jsx)(n.td,{align:"left",children:"Grow"}),(0,r.jsx)(n.td,{align:"left",children:"The component used for the transition."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"TransitionProps"}),(0,r.jsx)(n.td,{align:"left",children:"object"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,r.jsx)(n.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"TransitionProps.appear"}),(0,r.jsx)(n.td,{align:"left",children:"boolean"}),(0,r.jsx)(n.td,{align:"left",children:"true"}),(0,r.jsx)(n.td,{align:"left"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onBlur"}),(0,r.jsx)(n.td,{align:"left",children:(0,r.jsx)(n.code,{children:"(event: FocusEvent) => void"})}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"A callback called when the popover loses focus."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onFocus"}),(0,r.jsx)(n.td,{align:"left",children:(0,r.jsx)(n.code,{children:"(event: FocusEvent) => void"})}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"A callback called when the popover gains focus."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onKeyDown"}),(0,r.jsx)(n.td,{align:"left",children:(0,r.jsx)(n.code,{children:"(event: KeyboardEvent) => void"})}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"A callback called when the popover is pressed with any key."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onMouseEnter"}),(0,r.jsx)(n.td,{align:"left",children:(0,r.jsx)(n.code,{children:"(event: MouseEvent) => void"})}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"A callback called when the mouse enters the popover."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"onMouseLeave"}),(0,r.jsx)(n.td,{align:"left",children:(0,r.jsx)(n.code,{children:"(event: MouseEvent) => void"})}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left",children:"A callback called when the mouse leaves the popover."})]})]})]}),"\n",(0,r.jsxs)(n.h3,{id:"popoverheader",children:["PopoverHeader",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#popoverheader",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"popoverbody",children:["PopoverBody",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#popoverbody",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,r.jsxs)(n.h3,{id:"popoverfooter",children:["PopoverFooter",(0,r.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#popoverfooter",children:(0,r.jsx)(n.svg,{children:(0,r.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{align:"left",children:"Name"}),(0,r.jsx)(n.th,{align:"left",children:"Type"}),(0,r.jsx)(n.th,{align:"left",children:"Default"}),(0,r.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{align:"left",children:"children"}),(0,r.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(n.td,{align:"left"}),(0,r.jsx)(n.td,{align:"left"})]})})]})]})}var er=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,t.ah)(),e.components).wrapper;return n?(0,r.jsx)(n,Object.assign({},e,{children:(0,r.jsx)(eo,e)})):eo(e)}},18643:function(e,n,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/popover",function(){return o(52559)}])},3398:function(e,n,o){"use strict";o.d(n,{Z:function(){return h}});var r=o(53860),t=o(2784),i=o(70202),l=o(28729),s=o(40374),a=o(52737),c=o(52903),d=["size","variant","css"],p=(0,t.forwardRef)(function(e,n){var o,t,p=e.size,h=e.variant,x=e.css,g=(0,r.Kd)(e,d),u=(0,s.Z)(),v=(0,r.Zj)({},u),f=v.size,m=v.variant,j=null!==(o=null!=p?p:f)&&void 0!==o?o:a.zm,P=null!==(t=null!=h?h:m)&&void 0!==t?t:a.oD,b=u?[(0,l.zM)({variant:P}),x]:x,T=(0,l.zG)({size:j,variant:P});return(0,c.tZ)(i.Z,(0,r.Zj)((0,r.Zj)({ref:n,as:"input",css:b},T),g))});p.displayName="Input";var h=p},99291:function(e,n,o){"use strict";o.d(n,{Z:function(){return P}});var r=o(53860),t=o(20325),i=o(13409),l=o(2784),s=o(81522),a=o(56818),c=o(83377),d=o(5081),p=o(40596),h="blue",x=o(27216),g=o(52903),u=o(49857),v=["size","variantColor","sx"],f=(0,l.forwardRef)(function(e,n){var o,t=e.size,i=void 0===t?"md":t,l=e.variantColor,s=void 0===l?h:l,f=e.sx,m=(0,r.Kd)(e,v),j=(0,x.u)(),P=(0,p.Z)(),b=(0,r.ZQ)(P,1)[0],T={sm:32,md:48,lg:64}[i],y={sm:16,md:24,lg:32}[i],C=T+6,k=y+6,w=function(e){return'input[type="'.concat("checkbox",'"]')+(0,d.Zs)(e)+" + &"},Z=function(e){return w(e)+"> [data-switch] > [data-switch-outer-border]"},B=function(e){return w(e)+"> [data-switch] > [data-switch-inner-border]"},E=function(e){return w(e)+"> [data-switch] > [data-switch-track]"},F=function(e){return w(e)+"> [data-switch] > [data-switch-thumb]"},I=function(e){var n,o;return null!==(n=null==j?void 0:null===(o=j.colors)||void 0===o?void 0:o[e])&&void 0!==n?n:e},R=(o={width:C,height:k},(0,r._x)((0,r._x)((0,r._x)((0,r._x)((0,r._x)((0,r._x)((0,r._x)((0,r._x)((0,r._x)((0,r._x)(o,w(":disabled"),{opacity:.28}),Z(),{fill:"none"}),Z(":focus-visible"),{fill:I({dark:"".concat(s,":60"),light:"".concat(s,":60")}[b])}),B(),{fill:"none"}),B(":focus-visible"),{fill:I({dark:"black",light:"white"}[b])}),E(),{fill:I({dark:"gray:60",light:"gray:30"}[b])}),E(":checked"),{fill:I({dark:"".concat(s,":60"),light:"".concat(s,":60")}[b])}),E(":hover:not(:disabled)"),{fill:I({dark:"gray:50",light:"gray:20"}[b])}),E(":checked:hover:not(:disabled)"),{fill:I({dark:"".concat(s,":50"),light:"".concat(s,":50")}[b])}),F(),{fill:I({dark:"white",light:"white"}[b])}),(0,r._x)(o,F(":checked"),{transform:"translateX(".concat(y,"px)")}));return(0,g.tZ)(u.Z,(0,r.Zj)((0,r.Zj)((0,r.Zj)({"aria-hidden":(0,a.Qm)(!0),role:"switch",sx:[R].concat((0,r.u)((0,d.rY)(f)))},{display:"inline-flex",alignItems:"center",justifyContent:"center",flexShrink:0,userSelect:"none"}),m),{},{children:(0,g.BX)(u.Z,{as:"svg","data-switch":!0,width:"100%",height:"100%",viewBox:"0 0 ".concat(C," ").concat(k),children:[(0,g.tZ)(u.Z,{as:"rect","data-switch-outer-border":!0,x:0,y:0,width:C,height:k,rx:"".concat(k/2),strokeWidth:0}),(0,g.tZ)(u.Z,{as:"rect","data-switch-inner-border":!0,x:2,y:2,width:C-4,height:k-4,rx:(k-4)/2,strokeWidth:0}),(0,g.tZ)(u.Z,{as:"rect","data-switch-track":!0,x:3,y:3,width:T,height:y,rx:y/2,pointerEvents:"all"}),(0,g.tZ)(u.Z,{as:"circle","data-switch-thumb":!0,cx:k/2,cy:k/2,r:{sm:6,md:9,lg:12}[i],transform:"translateX(0)",transformBox:"fill-box",transition:(0,c.zx)(["transform"],{duration:250})})]})}))});f.displayName="SwitchControlBox";var m=["checked","children","defaultChecked","disabled","id","inputProps","inputRef","name","onBlur","onChange","onClick","onFocus","size","value","variantColor"],j=(0,l.forwardRef)(function(e,n){var o=e.checked,a=e.children,c=e.defaultChecked,d=e.disabled,p=e.id,x=e.inputProps,v=e.inputRef,j=e.name,P=e.onBlur,b=e.onChange,T=e.onClick,y=e.onFocus,C=e.size,k=e.value,w=e.variantColor,Z=void 0===w?h:w,B=(0,r.Kd)(e,m),E=(0,l.useRef)(),F=(0,t.Z)(v,E);return(0,g.BX)(u.Z,(0,r.Zj)((0,r.Zj)((0,r.Zj)({as:"label",ref:n},{display:"inline-flex",verticalAlign:"top",alignItems:"center",cursor:d?"not-allowed":"pointer"}),B),{},{children:[(0,g.tZ)(s.Z,(0,r.Zj)({as:"input",checked:o,defaultChecked:c,disabled:d,id:p,name:j,onBlur:P,onChange:b,onClick:T,onFocus:y,ref:F,role:"switch",type:"checkbox",value:k},x)),(0,g.tZ)(f,{size:void 0===C?"md":C,variantColor:Z}),!(0,i.Rw)(a)&&(0,g.tZ)(u.Z,{ml:"2x",userSelect:"none",opacity:d?.28:1,children:a})]}))});j.displayName="Switch";var P=j}},function(e){e.O(0,[978,7283,2888,9774,179],function(){return e(e.s=18643)}),_N_E=e.O()}]);