(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9901],{99947:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return eh}});var a=t(52322),o=t(45392),r=t(96835),l=t(40596),i=t(85017),s=t(31463),c=t(53505),d=t(91518),u=t(49857),m=t(73645),p=t(70758),f=t(6194),h=t(62080),x=t(67622),y=t(68010),g=t(15192),v=t(66785),D=t(87888),b=t(94829),T=t(51622),C=t(34121),k=t(50403),j=t(45795),S=t(2784);function I(e){return(I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}var E=["inputFormat","defaultValue","onChange"],w=["onChange"];function F(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter(function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable})),t.push.apply(t,a)}return t}function M(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?F(Object(t),!0).forEach(function(n){var a,o;a=n,o=t[n],(a=function(e){var n=function(e,n){if("object"!==I(e)||null===e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var a=t.call(e,n||"default");if("object"!==I(a))return a;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===n?String:Number)(e)}(e,"string");return"symbol"===I(n)?n:String(n)}(a))in e?Object.defineProperty(e,a,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[a]=o}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):F(Object(t)).forEach(function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))})}return e}function O(){return(O=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function Z(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,l,i=[],s=!0,c=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(a=r.call(t)).done)&&(i.push(a.value),i.length!==n);s=!0);}catch(e){c=!0,o=e}finally{try{if(!s&&null!=t.return&&(l=t.return(),Object(l)!==l))return}finally{if(c)throw o}}return i}}(e,n)||function(e,n){if(e){if("string"==typeof e)return L(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return L(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function L(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}function B(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var P=function(e){var n=e.inputFormat,t=void 0===n?"yyyy-MM-dd":n,a=e.defaultValue,o=e.onChange,r=B(e,E),u=Z((0,l.Z)(),1)[0],m=Z((0,i.Z)({colorMode:u}),1)[0],p=Z((0,S.useState)(a),2),f=p[0],h=p[1];return S.createElement(s.Z,O({closeOnSelect:!0,value:f,onChange:function(e){h(e),o(e)},inputFormat:t,renderInput:function(e){var n=e.error,a=e.inputProps,o=!!a.value&&n;return S.createElement(c.Z,O({},a,{readOnly:!0,error:o,placeholder:t,borderTopRightRadius:0,borderBottomRightRadius:0,width:130,startAdornment:S.createElement(d.Z,{color:m.color.secondary},S.createElement(T.Z,null))}))}},r))},V=function(e){var n=e.onChange,t=B(e,w),a=Z((0,l.Z)(),1)[0],o=Z((0,i.Z)({colorMode:a}),1)[0];return S.createElement(c.Z,O({onChange:function(e){n(e.target.value)},width:110,borderTopLeftRadius:0,borderBottomLeftRadius:0,startAdornment:S.createElement(d.Z,{color:o.color.secondary},S.createElement(C.Z,null))},t))},G=function(e){var n=e.startDate,t=e.startTime,a=e.endDate,o=e.endTime,r=e.onApply,s=e.onClose,c="yyyy-MM-dd",d=Z((0,l.Z)(),1)[0],x=Z((0,i.Z)({colorMode:d}),1)[0],y=Z((0,S.useState)(n),2),g=y[0],v=y[1],D=Z((0,S.useState)(t),2),b=D[0],T=D[1],C=Z((0,S.useState)(a),2),j=C[0],I=C[1],E=Z((0,S.useState)(o),2),w=E[0],F=E[1],M=Z((0,S.useState)(!1),2),O=M[0],L=M[1],B=function(e){return e instanceof Date?!!e.getTime():!!String(e).match(/([12]\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\d|3[01]))/)},G=function(e){return!!String(e).match(/^(?:2[0-3]|[01]?[0-9]):[0-5][0-9]:[0-5][0-9]$/)};return(0,S.useEffect)(function(){var e=B(g),n=G(b),t=B(j),a=G(w);if(!(e&&t&&n&&a)){L(!0);return}Date.parse("".concat(R(j)," ").concat(w)).valueOf()<Date.parse("".concat(R(g)," ").concat(b)).valueOf()?(I(g),F("23:59:59")):L(!1)},[g,b,j,w]),S.createElement(u.Z,{backgroundColor:x.background.tertiary,position:"absolute",left:"100%",top:0,px:"3x",py:"3x",borderLeft:1,borderColor:x.divider},S.createElement(m.Z,{alignItems:"center",columnGap:"3x",mb:"6x"},S.createElement(k.Z,{color:x.color.secondary}),S.createElement(p.Z,{fontSize:"md",lineHeight:"md"},"Custom Period")),S.createElement(f.Z,{templateColumns:"auto 1fr",alignItems:"center",rowGap:"3x",mb:"3x"},S.createElement(p.Z,{minWidth:"16x"},"From:"),S.createElement(m.Z,null,S.createElement(P,{inputFormat:c,isInvalid:!B(g),defaultValue:g,onChange:function(e){v(e)}}),S.createElement(V,{isInvalid:!G(b),defaultValue:b,onChange:function(e){T(e)}})),S.createElement(p.Z,{minWidth:"16x"},"To:"),S.createElement(m.Z,null,S.createElement(P,{inputFormat:c,isInvalid:!B(j),value:j,onChange:function(e){I(e)}}),S.createElement(V,{isInvalid:!G(w),value:w,onChange:function(e){F(e)}}))),S.createElement(m.Z,{justifyContent:"flex-end"},S.createElement(f.Z,{templateColumns:"1fr 1fr",columnGap:"2x"},S.createElement(h.Z,{variant:"primary",disabled:O,onClick:function(){r({startDate:g,startTime:b,endDate:j,endTime:w})}},"Apply"),S.createElement(h.Z,{variant:"secondary",onClick:s},"Cancel"))))},A=function(e,n){return M(M({},e),"function"==typeof n?n(e):n)},W=function(e){return e.toString().padStart(2,"0")},R=function(e){return[e.getFullYear(),W(e.getMonth()+1),W(e.getDate())].join("-")},z=function(e){var n=e.getHours(),t=e.getMinutes(),a=e.getSeconds();return[W(n),W(t),W(a)].join(":")},N=function(){var e=new Date,n=Z(S.useReducer(A,{value:"1d",isDateTimePickerVisible:!1,startDate:e,startTime:"00:00:00",endDate:e,endTime:"23:59:59"}),2),t=n[0],a=n[1],o=function(e){var n=e.currentTarget.getAttribute("value");if("custom"===n){e.preventDefault(),t.isDateTimePickerVisible||a({isDateTimePickerVisible:!0});return}a({value:n,isDateTimePickerVisible:!1})},r=function(e){return"custom"===e?"Custom range":({"1d":"Last 24 hours","7d":"Last 7 days","30d":"Last 30 days","90d":"Last 90 days"})[e]},l=function(){var e=t.value;if("custom"===e)return["".concat(R(t.startDate)," ").concat(t.startTime),"".concat(R(t.endDate)," ").concat(t.endTime)];var n=parseInt(e,10);if(n>0){var a=new Date,o=new Date(a.setDate(a.getDate()-n));return["".concat(R(o)," ").concat(z(o)),"".concat(R(new Date)," ").concat(z(new Date))]}return[]}();return(0,S.useEffect)(function(){"custom"!==t.value||t.isDateTimePickerVisible||a({isDateTimePickerVisible:!0})},[t.value,t.isDateTimePickerVisible]),S.createElement(S.Fragment,null,S.createElement(m.Z,{mb:"3x"},S.createElement(x.Z,null,"Date & time range:"),S.createElement(y.Z,{width:"3x"}),S.createElement(p.Z,null,l[0]),S.createElement(p.Z,{px:"1x"},"to"),S.createElement(p.Z,null,l[1])),S.createElement(g.Z,{onClose:function(){t.isDateTimePickerVisible&&a({isDateTimePickerVisible:!1})}},function(e){var n=e.onClose;return S.createElement(S.Fragment,null,S.createElement(v.Z,{variant:"secondary"},S.createElement(p.Z,null,r(t.value))),S.createElement(D.Z,{width:"max-content"},t.isDateTimePickerVisible&&S.createElement(G,{inputFormat:"yyyy-MM-dd",startDate:t.startDate,startTime:t.startTime,endDate:t.endDate,endTime:t.endTime,onApply:function(e){var t=e.startDate,o=e.startTime,r=e.endDate,l=e.endTime;n(),a({value:"custom",startDate:t,startTime:o,endDate:r,endTime:l})},onClose:function(){n()}}),["1d","7d","30d","90d"].map(function(e){return S.createElement(b.Z,{key:e,value:e,onClick:o},r(e))}),S.createElement(b.Z,{value:"custom",onClick:o},"Custom Period",S.createElement(y.Z,{width:"2x"}),S.createElement(j.Z,null))))}))},_=t(28165),$=t(72448),H=t(17025),U=t(78366),Y=t(1847),K=t(39256),X=t(3398),Q=t(65019),q=t(4478),J=t(97361),ee=t(94960);function en(){return(en=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function et(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var a,o,r,l,i=[],s=!0,c=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(a=r.call(t)).done)&&(i.push(a.value),i.length!==n);s=!0);}catch(e){c=!0,o=e}finally{try{if(!s&&null!=t.return&&(l=t.return(),Object(l)!==l))return}finally{if(c)throw o}}return i}}(e,n)||function(e,n){if(e){if("string"==typeof e)return ea(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return ea(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ea(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,a=Array(n);t<n;t++)a[t]=e[t];return a}var eo=function(e){var n=et((0,l.Z)(),1)[0],t=et((0,i.Z)({colorMode:n}),1)[0];return S.createElement(u.Z,en({backgroundColor:t.background.secondary,border:1,borderColor:t.divider,fontFamily:"mono",py:"3x",px:"3x",whiteSpace:"pre"},e))},er=function(e){return S.createElement(u.Z,en({mb:"4x"},e))},el=["yyyy-MM-dd","MM/dd/yyyy","dd.MM.yyyy","yyyy/MM/dd"],ei=[0,1,2,3,4,5,6],es=function(e){var n=et((0,S.useState)(e),2),t=n[0],a=n[1];return[t,function(e){return function(){return a(e)}}]},ec=S.forwardRef(function(e,n){var t=et((0,l.Z)(),1)[0],a=et((0,i.Z)({colorMode:t}),1)[0];return S.createElement(c.Z,en({ref:n,startAdornment:S.createElement(d.Z,{color:a.color.secondary},S.createElement(T.Z,null))},e))});ec.displayName="DateInput";var ed=function(e){return({none:null,today:new Date,invalid:new Date("")})[e]},eu=function(e){var n=e.getDay();return n>0&&n<6},em=function(e){var n=e.getDay();return 0===n||6===n},ep=function(){var e=et((0,S.useState)(""),2),n=e[0],t=e[1],a=et((0,S.useState)(""),2),o=a[0],r=a[1],l=et((0,Q.Z)(!1),2),i=l[0],c=l[1],d=et(es("none"),2),f=d[0],T=d[1],C=et(es(0),2),k=C[0],j=C[1],I=et(es(el[0]),2),E=I[0],w=I[1],F=et(es("none"),2),M=F[0],O=F[1],Z=et((0,Q.Z)(!1),2),L=Z[0],B=Z[1],P=et((0,S.useState)(ed(f)),2),V=P[0],G=P[1],A=et((0,S.useState)(),2),W=A[0],R=A[1],z=q.Z(V)?J.Z(V,E):"",N=et((0,S.useState)("enUS"),2),ea=N[0],ep=N[1];return(0,S.useEffect)(function(){G(ed(f))},[f]),S.createElement(S.Fragment,null,S.createElement(er,null,S.createElement(m.Z,{alignItems:"center",columnGap:"2x"},S.createElement(x.Z,null,"Selected date:"),W&&S.createElement(p.Z,{color:"red:50"},W),!W&&S.createElement(p.Z,null,z))),S.createElement(s.Z,{closeOnSelect:i,firstDayOfWeek:k,formatDate:function(e,n){var t={locale:ea&&ee[ea]};return J.Z(e,n,t)},maxDate:n?new Date(n):void 0,minDate:o?new Date(o):void 0,onChange:function(e){console.log("onChange:",e),G(e)},onError:function(e,n){console.log("onError:",e,n),R(e)},shouldDisableDate:function(e){return(console.log("shouldDisableDate:",e,M),"weekdays"===M)?eu(e):"weekends"===M&&em(e)},value:V,inputFormat:E,renderInput:function(e){var n=e.error,t=e.inputProps;return console.log("renderInput:",n,t),S.createElement(u.Z,null,S.createElement(ec,en({},t,{error:n,placeholder:E,readOnly:L})),n&&S.createElement(p.Z,{mt:"1x",color:"red:50"},"Invalid date"))}}),S.createElement($.Z,{my:"4x"}),S.createElement(u.Z,{mb:"4x"},S.createElement(p.Z,{fontSize:"lg",lineHeight:"lg"},"Localization")),S.createElement(er,null,S.createElement(m.Z,{alignItems:"center",columnGap:"2x"},S.createElement(x.Z,null,"Locale:"),S.createElement(g.Z,null,S.createElement(v.Z,{variant:"secondary",minWidth:100},ea&&ee[ea].code),S.createElement(D.Z,{onClick:function(e){ep(e.target.getAttribute("value"))},maxHeight:240,minWidth:100,overflowY:"auto"},Object.keys(ee).map(function(e){return S.createElement(b.Z,{key:e,value:e},ee[e].code)}))),S.createElement(H.Z,{onClick:function(){return ep("enUS")}},"Reset"))),S.createElement(m.Z,{direction:"column",mb:"4x",rowGap:"3x"},S.createElement(x.Z,null,"You can use the ",S.createElement(U.Z,null,"formatDate")," prop to return a formatted date string in the given format and locale."),S.createElement(eo,null,"// format\nimport format from 'date-fns/format';\n\n// locale\nimport enLocale from 'date-fns/locale/en-US'; // English (United States)\nimport deLocale from 'date-fns/locale/de'; // Deutsch\nimport esLocale from 'date-fns/locale/es'; // Espa\xf1ol\nimport frLocale from 'date-fns/locale/fr'; // Fran\xe7ais\nimport itLocale from 'date-fns/locale/it'; // Italiano\nimport jaLocale from 'date-fns/locale/ja'; // 日本語\nimport koLocale from 'date-fns/locale/ko'; // 한국어\nimport zhCNLocale from 'date-fns/locale/zh-CN'; // 简体中文\nimport zhTWLocale from 'date-fns/locale/zh-TW'; // 繁體中文"),S.createElement(eo,null,"// DatePicker component\nformatDate={(date, format, options) => {\n  return format(date, format, { locale: enLocale });\n}}")),S.createElement($.Z,{my:"4x"}),S.createElement(u.Z,{mb:"4x"},S.createElement(p.Z,{fontSize:"lg",lineHeight:"lg"},"DatePicker props")),S.createElement(er,null,S.createElement(x.Z,{display:"flex",alignItems:"center"},S.createElement(Y.Z,{checked:i,onChange:c}),S.createElement(y.Z,{width:"2x"}),S.createElement(p.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"closeOnSelect"))),S.createElement(er,null,S.createElement(u.Z,{mb:"2x"},S.createElement(x.Z,null,"firstDayOfWeek")),S.createElement(K.Z,{variant:"secondary",css:(0,_.iv)({"> *:not(:first-of-type)":{marginLeft:-1}},"","")},ei.map(function(e){return S.createElement(h.Z,{key:e,selected:e===k,onClick:j(e),minWidth:"15x"},e)}))),S.createElement(er,null,S.createElement(u.Z,{mb:"2x"},S.createElement(x.Z,null,"none"===f&&"value={null}","today"===f&&"value={new Date()}","invalid"===f&&"value={new Date('')}")),S.createElement(K.Z,{variant:"secondary",css:(0,_.iv)({"> *:not(:first-of-type)":{marginLeft:-1}},"","")},["none","today","invalid"].map(function(e){return S.createElement(h.Z,{key:e,selected:e===f,onClick:T(e),minWidth:"15x"},{none:"None",today:"Today",invalid:"Invalid Date"}[e])}))),S.createElement(er,null,S.createElement(u.Z,{mb:"2x"},S.createElement(x.Z,null,"minDate=",o?"{new Date('".concat(o,"'}}"):"")),S.createElement(X.Z,{type:"date",value:o,onChange:function(e){return r(e.target.value)},width:"auto"})),S.createElement(er,null,S.createElement(u.Z,{mb:"2x"},S.createElement(x.Z,null,"maxDate=",n?"{new Date('".concat(n,"'}}"):"")),S.createElement(X.Z,{type:"date",value:n,onChange:function(e){return t(e.target.value)},width:"auto"})),S.createElement(er,null,S.createElement(u.Z,{mb:"2x"},S.createElement(x.Z,null,"shouldDisableDate")),S.createElement(K.Z,{variant:"secondary",css:(0,_.iv)({"> *:not(:first-of-type)":{marginLeft:-1}},"","")},["none","weekdays","weekends"].map(function(e){return S.createElement(h.Z,{key:e,selected:e===M,onClick:O(e),minWidth:"15x"},{none:"None",weekdays:"Disable Weekdays",weekends:"Disable Weekends"}[e])}))),S.createElement(er,null,S.createElement(u.Z,{mb:"2x"},S.createElement(x.Z,null,"inputFormat")),S.createElement(K.Z,{variant:"secondary",css:(0,_.iv)({"> *:not(:first-of-type)":{marginLeft:-1}},"","")},el.map(function(e){return S.createElement(h.Z,{key:e,selected:e===E,onClick:w(e),minWidth:"15x"},e)}))),S.createElement($.Z,{my:"4x"}),S.createElement(u.Z,{mb:"4x"},S.createElement(p.Z,{fontSize:"lg",lineHeight:"lg"},"DateInput props")),S.createElement(er,null,S.createElement(x.Z,{display:"flex",alignItems:"center"},S.createElement(Y.Z,{checked:L,onChange:B}),S.createElement(y.Z,{width:"2x"}),S.createElement(p.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"readOnly"))))};function ef(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",em:"em"},(0,o.ah)(),e.components);return(0,a.jsxs)(n.div,{className:"main-content",children:["\n","\n","\n",(0,a.jsx)(n.h1,{id:"datepicker",children:"DatePicker"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"DatePicker"})," let the user select a date from the calendar."]}),"\n",(0,a.jsxs)(n.h2,{id:"import",children:["Import",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-js",children:"import {\n  DatePicker,\n} from '@tonic-ui/react';\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"overview",children:["Overview",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#overview",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.p,{children:["The following example demonstrates a simple example of the ",(0,a.jsx)(n.code,{children:"DatePicker"})," component."]}),"\n",(0,a.jsx)(n.pre,{disabled:!0,children:(0,a.jsx)(n.code,{className:"language-jsx",children:'<DatePicker\n  closeOnSelect={true}\n  inputFormat="yyyy-MM-dd"\n  value={value}\n  onChange={(nextValue) => {\n    setValue(nextValue);\n  }}\n  onError={(error, value) => {\n    console.log(error, value);\n  }}\n  renderInput={({ error, inputProps }) => (\n    <DateInput\n      {...inputProps}\n      error={error}\n      placeholder="yyyy-MM-dd"\n      readOnly\n    />\n  )}\n/>\n'})}),"\n",(0,a.jsxs)(n.p,{children:["Note that the ",(0,a.jsx)(n.code,{children:"DateInput"})," component is currently not provided by the ",(0,a.jsx)(n.code,{children:"@tonic-ui/react"})," package. You have to write your own or refer to the following code to ",(0,a.jsx)(n.a,{href:"../../components/input-control",children:"get started"}),"."]}),"\n",(0,a.jsx)(n.pre,{disabled:!0,children:(0,a.jsx)(n.code,{className:"language-jsx",children:"// import\nimport { InputControl, InputAdornment } from '@tonic-ui/react';\n\n// DateInput\nconst DateInput = React.forwardRef((props, ref) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <InputControl\n      ref={ref}\n      startAdornment={(\n        <InputAdornment color={colorStyle.color.secondary}>\n          <Icon icon=\"calendar\" />\n        </InputAdornment>\n      )}\n      {...props}\n    />\n  );\n});\n"})}),"\n",(0,a.jsxs)(n.h2,{id:"usage",children:["Usage",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsx)(r.Z,Object.assign({},{component:ep,file:{data:"import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Code,\n  DatePicker,\n  Divider,\n  Flex,\n  Input,\n  InputAdornment,\n  InputControl,\n  LinkButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Space,\n  Text,\n  TextLabel,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport { CalendarIcon } from '@tonic-ui/react-icons';\nimport {\n  useToggle,\n} from '@tonic-ui/react-hooks';\nimport * as dateFns from 'date-fns'\nimport * as dateFnsLocale from 'date-fns/locale'\nimport React, { useEffect, useState } from 'react';\n\nconst CodeBlock = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Box\n      backgroundColor={colorStyle.background.secondary}\n      border={1}\n      borderColor={colorStyle.divider}\n      fontFamily=\"mono\"\n      py=\"3x\"\n      px=\"3x\"\n      whiteSpace=\"pre\"\n      {...props}\n    />\n  );\n};\n\nconst FormGroup = (props) => (\n  <Box mb=\"4x\" {...props} />\n);\n\nconst inputFormats = [\n  'yyyy-MM-dd', // ISO 8601\n  'MM/dd/yyyy', // USA\n  'dd.MM.yyyy', // Worldwide\n  'yyyy/MM/dd', // East Asia\n];\n\nconst firstDayOfWeekOptions = [\n  0, // Sunday\n  1, // Monday\n  2, // Tuesday\n  3, // Wednesday\n  4, // Thursday\n  5, // Friday\n  6, // Saturday\n];\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst DateInput = React.forwardRef((props, ref) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <InputControl\n      ref={ref}\n      startAdornment={(\n        <InputAdornment color={colorStyle.color.secondary}>\n          <CalendarIcon />\n        </InputAdornment>\n      )}\n      {...props}\n    />\n  );\n});\nDateInput.displayName = 'DateInput';\n\nconst mapDateOptionToDateObject = (dateOption) => ({\n  'none': null,\n  'today': new Date(),\n  'invalid': new Date(''),\n}[dateOption]);\n\nconst disableWeekdays = (date) => {\n  const day = date.getDay();\n  return (day > 0) && (day < 6);\n};\n\nconst disableWeekends = (date) => {\n  const day = date.getDay();\n  return (day === 0) || (day === 6);\n};\n\nconst App = () => {\n  const [maxDate, setMaxDate] = useState('');\n  const [minDate, setMinDate] = useState('');\n  const [closeOnSelect, toggleCloseOnSelect] = useToggle(false);\n  const [dateOption, changeDateOptionBy] = useSelection('none');\n  const [firstDayOfWeek, changeFirstDayOfWeekBy] = useSelection(0);\n  const [inputFormat, changeInputFormatBy] = useSelection(inputFormats[0]);\n  const [shouldDisableDateOption, changeShouldDisableDateOptionBy] = useSelection('none');\n  const [readOnly, toggleReadOnly] = useToggle(false);\n  const [value, setValue] = useState(mapDateOptionToDateObject(dateOption));\n  const [error, setError] = useState();\n  const displayDate = dateFns.isValid(value) ? dateFns.format(value, inputFormat) : '';\n  const [locale, setLocale] = useState('enUS');\n\n  useEffect(() => {\n    setValue(mapDateOptionToDateObject(dateOption));\n  }, [dateOption]);\n\n  return (\n    <>\n      <FormGroup>\n        <Flex\n          alignItems=\"center\"\n          columnGap=\"2x\"\n        >\n          <TextLabel>\n            Selected date:\n          </TextLabel>\n          {error && (\n            <Text color=\"red:50\">{error}</Text>\n          )}\n          {!error && (\n            <Text>{displayDate}</Text>\n          )}\n        </Flex>\n      </FormGroup>\n      <DatePicker\n        closeOnSelect={closeOnSelect}\n        firstDayOfWeek={firstDayOfWeek}\n        formatDate={(date, format) => {\n          const options = {\n            locale: locale && dateFnsLocale[locale],\n          };\n          return dateFns.format(date, format, options);\n        }}\n        maxDate={maxDate ? new Date(maxDate) : undefined}\n        minDate={minDate ? new Date(minDate) : undefined}\n        onChange={(nextValue) => {\n          console.log('onChange:', nextValue);\n          setValue(nextValue);\n        }}\n        onError={(error, value) => {\n          console.log('onError:', error, value);\n          setError(error);\n        }}\n        shouldDisableDate={(date) => {\n          console.log('shouldDisableDate:', date, shouldDisableDateOption);\n          if (shouldDisableDateOption === 'weekdays') {\n            return disableWeekdays(date);\n          }\n          if (shouldDisableDateOption === 'weekends') {\n            return disableWeekends(date);\n          }\n          return false;\n        }}\n        value={value}\n        inputFormat={inputFormat}\n        renderInput={({ error: inputError, inputProps }) => {\n          console.log('renderInput:', inputError, inputProps);\n          return (\n            <Box>\n              <DateInput\n                {...inputProps}\n                error={inputError}\n                placeholder={inputFormat}\n                readOnly={readOnly}\n              />\n              {inputError && (\n                <Text mt=\"1x\" color=\"red:50\">Invalid date</Text>\n              )}\n            </Box>\n          );\n        }}\n      />\n      <Divider my=\"4x\" />\n      <Box mb=\"4x\">\n        <Text fontSize=\"lg\" lineHeight=\"lg\">\n          Localization\n        </Text>\n      </Box>\n      <FormGroup>\n        <Flex\n          alignItems=\"center\"\n          columnGap=\"2x\"\n        >\n          <TextLabel>\n            Locale:\n          </TextLabel>\n          <Menu>\n            <MenuButton variant=\"secondary\" minWidth={100}>\n              {locale && dateFnsLocale[locale].code}\n            </MenuButton>\n            <MenuList\n              onClick={(event) => {\n                const value = event.target.getAttribute('value');\n                setLocale(value);\n              }}\n              maxHeight={240}\n              minWidth={100}\n              overflowY=\"auto\"\n            >\n              {Object.keys(dateFnsLocale).map((locale) => (\n                <MenuItem key={locale} value={locale}>\n                  {dateFnsLocale[locale].code}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <LinkButton onClick={() => setLocale('enUS')}>\n            Reset\n          </LinkButton>\n        </Flex>\n      </FormGroup>\n      <Flex\n        direction=\"column\"\n        mb=\"4x\"\n        rowGap=\"3x\"\n      >\n        <TextLabel>\n          You can use the <Code>formatDate</Code> prop to return a formatted date string in the given format and locale.\n        </TextLabel>\n        <CodeBlock>\n          {`// format\\nimport format from 'date-fns/format';\\n\\n// locale\\nimport enLocale from 'date-fns/locale/en-US'; // English (United States)\\nimport deLocale from 'date-fns/locale/de'; // Deutsch\\nimport esLocale from 'date-fns/locale/es'; // Espa\xf1ol\\nimport frLocale from 'date-fns/locale/fr'; // Fran\xe7ais\\nimport itLocale from 'date-fns/locale/it'; // Italiano\\nimport jaLocale from 'date-fns/locale/ja'; // 日本語\\nimport koLocale from 'date-fns/locale/ko'; // 한국어\\nimport zhCNLocale from 'date-fns/locale/zh-CN'; // 简体中文\\nimport zhTWLocale from 'date-fns/locale/zh-TW'; // 繁體中文`}\n        </CodeBlock>\n        <CodeBlock>\n          {`// DatePicker component\\nformatDate={(date, format, options) => {\\n  return format(date, format, { locale: enLocale });\\n}}`}\n        </CodeBlock>\n      </Flex>\n      <Divider my=\"4x\" />\n      <Box mb=\"4x\">\n        <Text fontSize=\"lg\" lineHeight=\"lg\">\n          DatePicker props\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display=\"flex\" alignItems=\"center\">\n          <Checkbox\n            checked={closeOnSelect}\n            onChange={toggleCloseOnSelect}\n          />\n          <Space width=\"2x\" />\n          <Text fontFamily=\"mono\" whiteSpace=\"nowrap\">closeOnSelect</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            firstDayOfWeek\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          css={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {firstDayOfWeekOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === firstDayOfWeek}\n              onClick={changeFirstDayOfWeekBy(value)}\n              minWidth=\"15x\"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            {dateOption === 'none' && `value={null}`}\n            {dateOption === 'today' && `value={new Date()}`}\n            {dateOption === 'invalid' && `value={new Date('')}`}\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          css={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {['none', 'today', 'invalid'].map(value => (\n            <Button\n              key={value}\n              selected={value === dateOption}\n              onClick={changeDateOptionBy(value)}\n              minWidth=\"15x\"\n            >\n              {{\n                'none': 'None',\n                'today': 'Today',\n                'invalid': 'Invalid Date',\n              }[value]}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            minDate={minDate ? `{new Date('${minDate}'}}` : ''}\n          </TextLabel>\n        </Box>\n        <Input\n          type=\"date\"\n          value={minDate}\n          onChange={(e) => setMinDate(e.target.value)}\n          width=\"auto\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            maxDate={maxDate ? `{new Date('${maxDate}'}}` : ''}\n          </TextLabel>\n        </Box>\n        <Input\n          type=\"date\"\n          value={maxDate}\n          onChange={(e) => setMaxDate(e.target.value)}\n          width=\"auto\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            shouldDisableDate\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          css={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {['none', 'weekdays', 'weekends'].map(value => (\n            <Button\n              key={value}\n              selected={value === shouldDisableDateOption}\n              onClick={changeShouldDisableDateOptionBy(value)}\n              minWidth=\"15x\"\n            >\n              {{\n                'none': 'None',\n                'weekdays': 'Disable Weekdays',\n                'weekends': 'Disable Weekends',\n              }[value]}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            inputFormat\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          css={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {inputFormats.map(value => (\n            <Button\n              key={value}\n              selected={value === inputFormat}\n              onClick={changeInputFormatBy(value)}\n              minWidth=\"15x\"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider my=\"4x\" />\n      <Box mb=\"4x\">\n        <Text fontSize=\"lg\" lineHeight=\"lg\">\n          DateInput props\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display=\"flex\" alignItems=\"center\">\n          <Checkbox\n            checked={readOnly}\n            onChange={toggleReadOnly}\n          />\n          <Space width=\"2x\" />\n          <Text fontFamily=\"mono\" whiteSpace=\"nowrap\">readOnly</Text>\n        </TextLabel>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default App;",path:"pages/components/date-pickers/date-picker/index.page.mdx"},sandbox:{files:{},raw:"import {\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Code,\n  DatePicker,\n  Divider,\n  Flex,\n  Input,\n  InputAdornment,\n  InputControl,\n  LinkButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Space,\n  Text,\n  TextLabel,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport { CalendarIcon } from '@tonic-ui/react-icons';\nimport {\n  useToggle,\n} from '@tonic-ui/react-hooks';\nimport * as dateFns from 'date-fns'\nimport * as dateFnsLocale from 'date-fns/locale'\nimport React, { useEffect, useState } from 'react';\n\nconst CodeBlock = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Box\n      backgroundColor={colorStyle.background.secondary}\n      border={1}\n      borderColor={colorStyle.divider}\n      fontFamily=\"mono\"\n      py=\"3x\"\n      px=\"3x\"\n      whiteSpace=\"pre\"\n      {...props}\n    />\n  );\n};\n\nconst FormGroup = (props) => (\n  <Box mb=\"4x\" {...props} />\n);\n\nconst inputFormats = [\n  'yyyy-MM-dd', // ISO 8601\n  'MM/dd/yyyy', // USA\n  'dd.MM.yyyy', // Worldwide\n  'yyyy/MM/dd', // East Asia\n];\n\nconst firstDayOfWeekOptions = [\n  0, // Sunday\n  1, // Monday\n  2, // Tuesday\n  3, // Wednesday\n  4, // Thursday\n  5, // Friday\n  6, // Saturday\n];\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst DateInput = React.forwardRef((props, ref) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <InputControl\n      ref={ref}\n      startAdornment={(\n        <InputAdornment color={colorStyle.color.secondary}>\n          <CalendarIcon />\n        </InputAdornment>\n      )}\n      {...props}\n    />\n  );\n});\nDateInput.displayName = 'DateInput';\n\nconst mapDateOptionToDateObject = (dateOption) => ({\n  'none': null,\n  'today': new Date(),\n  'invalid': new Date(''),\n}[dateOption]);\n\nconst disableWeekdays = (date) => {\n  const day = date.getDay();\n  return (day > 0) && (day < 6);\n};\n\nconst disableWeekends = (date) => {\n  const day = date.getDay();\n  return (day === 0) || (day === 6);\n};\n\nconst App = () => {\n  const [maxDate, setMaxDate] = useState('');\n  const [minDate, setMinDate] = useState('');\n  const [closeOnSelect, toggleCloseOnSelect] = useToggle(false);\n  const [dateOption, changeDateOptionBy] = useSelection('none');\n  const [firstDayOfWeek, changeFirstDayOfWeekBy] = useSelection(0);\n  const [inputFormat, changeInputFormatBy] = useSelection(inputFormats[0]);\n  const [shouldDisableDateOption, changeShouldDisableDateOptionBy] = useSelection('none');\n  const [readOnly, toggleReadOnly] = useToggle(false);\n  const [value, setValue] = useState(mapDateOptionToDateObject(dateOption));\n  const [error, setError] = useState();\n  const displayDate = dateFns.isValid(value) ? dateFns.format(value, inputFormat) : '';\n  const [locale, setLocale] = useState('enUS');\n\n  useEffect(() => {\n    setValue(mapDateOptionToDateObject(dateOption));\n  }, [dateOption]);\n\n  return (\n    <>\n      <FormGroup>\n        <Flex\n          alignItems=\"center\"\n          columnGap=\"2x\"\n        >\n          <TextLabel>\n            Selected date:\n          </TextLabel>\n          {error && (\n            <Text color=\"red:50\">{error}</Text>\n          )}\n          {!error && (\n            <Text>{displayDate}</Text>\n          )}\n        </Flex>\n      </FormGroup>\n      <DatePicker\n        closeOnSelect={closeOnSelect}\n        firstDayOfWeek={firstDayOfWeek}\n        formatDate={(date, format) => {\n          const options = {\n            locale: locale && dateFnsLocale[locale],\n          };\n          return dateFns.format(date, format, options);\n        }}\n        maxDate={maxDate ? new Date(maxDate) : undefined}\n        minDate={minDate ? new Date(minDate) : undefined}\n        onChange={(nextValue) => {\n          console.log('onChange:', nextValue);\n          setValue(nextValue);\n        }}\n        onError={(error, value) => {\n          console.log('onError:', error, value);\n          setError(error);\n        }}\n        shouldDisableDate={(date) => {\n          console.log('shouldDisableDate:', date, shouldDisableDateOption);\n          if (shouldDisableDateOption === 'weekdays') {\n            return disableWeekdays(date);\n          }\n          if (shouldDisableDateOption === 'weekends') {\n            return disableWeekends(date);\n          }\n          return false;\n        }}\n        value={value}\n        inputFormat={inputFormat}\n        renderInput={({ error: inputError, inputProps }) => {\n          console.log('renderInput:', inputError, inputProps);\n          return (\n            <Box>\n              <DateInput\n                {...inputProps}\n                error={inputError}\n                placeholder={inputFormat}\n                readOnly={readOnly}\n              />\n              {inputError && (\n                <Text mt=\"1x\" color=\"red:50\">Invalid date</Text>\n              )}\n            </Box>\n          );\n        }}\n      />\n      <Divider my=\"4x\" />\n      <Box mb=\"4x\">\n        <Text fontSize=\"lg\" lineHeight=\"lg\">\n          Localization\n        </Text>\n      </Box>\n      <FormGroup>\n        <Flex\n          alignItems=\"center\"\n          columnGap=\"2x\"\n        >\n          <TextLabel>\n            Locale:\n          </TextLabel>\n          <Menu>\n            <MenuButton variant=\"secondary\" minWidth={100}>\n              {locale && dateFnsLocale[locale].code}\n            </MenuButton>\n            <MenuList\n              onClick={(event) => {\n                const value = event.target.getAttribute('value');\n                setLocale(value);\n              }}\n              maxHeight={240}\n              minWidth={100}\n              overflowY=\"auto\"\n            >\n              {Object.keys(dateFnsLocale).map((locale) => (\n                <MenuItem key={locale} value={locale}>\n                  {dateFnsLocale[locale].code}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <LinkButton onClick={() => setLocale('enUS')}>\n            Reset\n          </LinkButton>\n        </Flex>\n      </FormGroup>\n      <Flex\n        direction=\"column\"\n        mb=\"4x\"\n        rowGap=\"3x\"\n      >\n        <TextLabel>\n          You can use the <Code>formatDate</Code> prop to return a formatted date string in the given format and locale.\n        </TextLabel>\n        <CodeBlock>\n          {`// format\\nimport format from 'date-fns/format';\\n\\n// locale\\nimport enLocale from 'date-fns/locale/en-US'; // English (United States)\\nimport deLocale from 'date-fns/locale/de'; // Deutsch\\nimport esLocale from 'date-fns/locale/es'; // Espa\xf1ol\\nimport frLocale from 'date-fns/locale/fr'; // Fran\xe7ais\\nimport itLocale from 'date-fns/locale/it'; // Italiano\\nimport jaLocale from 'date-fns/locale/ja'; // 日本語\\nimport koLocale from 'date-fns/locale/ko'; // 한국어\\nimport zhCNLocale from 'date-fns/locale/zh-CN'; // 简体中文\\nimport zhTWLocale from 'date-fns/locale/zh-TW'; // 繁體中文`}\n        </CodeBlock>\n        <CodeBlock>\n          {`// DatePicker component\\nformatDate={(date, format, options) => {\\n  return format(date, format, { locale: enLocale });\\n}}`}\n        </CodeBlock>\n      </Flex>\n      <Divider my=\"4x\" />\n      <Box mb=\"4x\">\n        <Text fontSize=\"lg\" lineHeight=\"lg\">\n          DatePicker props\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display=\"flex\" alignItems=\"center\">\n          <Checkbox\n            checked={closeOnSelect}\n            onChange={toggleCloseOnSelect}\n          />\n          <Space width=\"2x\" />\n          <Text fontFamily=\"mono\" whiteSpace=\"nowrap\">closeOnSelect</Text>\n        </TextLabel>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            firstDayOfWeek\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          css={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {firstDayOfWeekOptions.map(value => (\n            <Button\n              key={value}\n              selected={value === firstDayOfWeek}\n              onClick={changeFirstDayOfWeekBy(value)}\n              minWidth=\"15x\"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            {dateOption === 'none' && `value={null}`}\n            {dateOption === 'today' && `value={new Date()}`}\n            {dateOption === 'invalid' && `value={new Date('')}`}\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          css={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {['none', 'today', 'invalid'].map(value => (\n            <Button\n              key={value}\n              selected={value === dateOption}\n              onClick={changeDateOptionBy(value)}\n              minWidth=\"15x\"\n            >\n              {{\n                'none': 'None',\n                'today': 'Today',\n                'invalid': 'Invalid Date',\n              }[value]}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            minDate={minDate ? `{new Date('${minDate}'}}` : ''}\n          </TextLabel>\n        </Box>\n        <Input\n          type=\"date\"\n          value={minDate}\n          onChange={(e) => setMinDate(e.target.value)}\n          width=\"auto\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            maxDate={maxDate ? `{new Date('${maxDate}'}}` : ''}\n          </TextLabel>\n        </Box>\n        <Input\n          type=\"date\"\n          value={maxDate}\n          onChange={(e) => setMaxDate(e.target.value)}\n          width=\"auto\"\n        />\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            shouldDisableDate\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          css={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {['none', 'weekdays', 'weekends'].map(value => (\n            <Button\n              key={value}\n              selected={value === shouldDisableDateOption}\n              onClick={changeShouldDisableDateOptionBy(value)}\n              minWidth=\"15x\"\n            >\n              {{\n                'none': 'None',\n                'weekdays': 'Disable Weekdays',\n                'weekends': 'Disable Weekends',\n              }[value]}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            inputFormat\n          </TextLabel>\n        </Box>\n        <ButtonGroup\n          variant=\"secondary\"\n          css={{\n            '> *:not(:first-of-type)': {\n              marginLeft: -1\n            }\n          }}\n        >\n          {inputFormats.map(value => (\n            <Button\n              key={value}\n              selected={value === inputFormat}\n              onClick={changeInputFormatBy(value)}\n              minWidth=\"15x\"\n            >\n              {value}\n            </Button>\n          ))}\n        </ButtonGroup>\n      </FormGroup>\n      <Divider my=\"4x\" />\n      <Box mb=\"4x\">\n        <Text fontSize=\"lg\" lineHeight=\"lg\">\n          DateInput props\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display=\"flex\" alignItems=\"center\">\n          <Checkbox\n            checked={readOnly}\n            onChange={toggleReadOnly}\n          />\n          <Space width=\"2x\" />\n          <Text fontFamily=\"mono\" whiteSpace=\"nowrap\">readOnly</Text>\n        </TextLabel>\n      </FormGroup>\n    </>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,a.jsxs)(n.h3,{id:"date-time-range-picker",children:["Date time range picker",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#date-time-range-picker",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsx)(r.Z,Object.assign({},{component:N,file:{data:"import {\n  Box,\n  Button,\n  DatePicker,\n  Flex,\n  Grid,\n  InputAdornment,\n  InputControl,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Space,\n  Text,\n  TextLabel,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport { AngleRightIcon, CalendarIcon, ChevronLeftIcon, ClockIcon } from '@tonic-ui/react-icons';\nimport React, { useEffect, useState } from 'react';\n\nconst CustomDateInput = ({\n  inputFormat = 'yyyy-MM-dd',\n  defaultValue,\n  onChange,\n  ...rest\n}) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [value, setValue] = useState(defaultValue);\n  const handleChange = (value) => {\n    setValue(value);\n    onChange(value);\n  };\n\n  return (\n    <DatePicker\n      closeOnSelect={true}\n      value={value}\n      onChange={handleChange}\n      inputFormat={inputFormat}\n      renderInput={({ error, inputProps }) => {\n        const _error = !!inputProps.value && error;\n\n        return (\n          <InputControl\n            {...inputProps}\n            readOnly\n            error={_error}\n            placeholder={inputFormat}\n            borderTopRightRadius={0}\n            borderBottomRightRadius={0}\n            width={130}\n            startAdornment={(\n              <InputAdornment color={colorStyle.color.secondary}>\n                <CalendarIcon />\n              </InputAdornment>\n            )}\n          />\n        );\n      }}\n      {...rest}\n    />\n  );\n};\n\nconst CustomTimeInput = ({\n  onChange,\n  ...rest\n}) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const handleTimeInputChange = (event) => {\n    const value = event.target.value;\n    onChange(value);\n  };\n\n  return (\n    <InputControl\n      onChange={handleTimeInputChange}\n      width={110}\n      borderTopLeftRadius={0}\n      borderBottomLeftRadius={0}\n      startAdornment={(\n        <InputAdornment color={colorStyle.color.secondary}>\n          <ClockIcon />\n        </InputAdornment>\n      )}\n      {...rest}\n    />\n  );\n};\n\nconst DateTimePicker = ({\n  startDate: startDateProp,\n  startTime: startTimeProp,\n  endDate: endDateProp,\n  endTime: endTimeProp,\n  onApply,\n  onClose,\n}) => {\n  const inputFormat = 'yyyy-MM-dd';\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [startDate, setStartDate] = useState(startDateProp);\n  const [startTime, setStartTime] = useState(startTimeProp);\n  const [endDate, setEndDate] = useState(endDateProp);\n  const [endTime, setEndTime] = useState(endTimeProp);\n  const [isInvalid, setIsInvalid] = useState(false);\n  const isValidDate = (value) => {\n    if (value instanceof Date) {\n      return !!value.getTime();\n    }\n    // The date format is \"yyyy-MM-dd\"\n    const pattern = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n    return !!String(value).match(pattern);\n  };\n  const isValidTime = (value) => {\n    // The time format is \"HH:mm:ss\"\n    const pattern = /^(?:2[0-3]|[01]?[0-9]):[0-5][0-9]:[0-5][0-9]$/;\n    return !!String(value).match(pattern);\n  };\n  const handleStartDateChange = (value) => {\n    setStartDate(value);\n  };\n  const handleEndDateChange = (value) => {\n    setEndDate(value);\n  };\n  const handleStartTimeChange = (value) => {\n    setStartTime(value);\n  };\n  const handleEndTimeChange = (value) => {\n    setEndTime(value);\n  };\n  const handleApplyClick = () => {\n    onApply({\n      startDate,\n      startTime,\n      endDate,\n      endTime,\n    });\n  };\n\n  useEffect(() => {\n    const isValidStartDate = isValidDate(startDate);\n    const isValidStartTime = isValidTime(startTime);\n    const isValidEndDate = isValidDate(endDate);\n    const isValidEndTime = isValidTime(endTime);\n\n    if (!(isValidStartDate && isValidEndDate && isValidStartTime && isValidEndTime)) {\n      setIsInvalid(true);\n      return;\n    }\n\n    // if the end datetime is the earlier than the start datetime, then set the end datetime to the start datetime\n    if ((Date.parse(`${formatDate(endDate)} ${endTime}`)).valueOf() < (Date.parse(`${formatDate(startDate)} ${startTime}`)).valueOf()){\n      setEndDate(startDate);\n      setEndTime('23:59:59');\n    } else {\n      setIsInvalid(false);\n    }\n  }, [startDate, startTime, endDate, endTime]);\n\n  return (\n    <Box\n      backgroundColor={colorStyle.background.tertiary}\n      position=\"absolute\"\n      left=\"100%\"\n      top={0}\n      px=\"3x\"\n      py=\"3x\"\n      borderLeft={1}\n      borderColor={colorStyle.divider}\n    >\n      <Flex\n        alignItems=\"center\"\n        columnGap=\"3x\"\n        mb=\"6x\"\n      >\n        <ChevronLeftIcon color={colorStyle.color.secondary} />\n        <Text fontSize=\"md\" lineHeight=\"md\">\n          Custom Period\n        </Text>\n      </Flex>\n      <Grid\n        templateColumns=\"auto 1fr\"\n        alignItems=\"center\"\n        rowGap=\"3x\"\n        mb=\"3x\"\n      >\n        <Text minWidth=\"16x\">\n          From:\n        </Text>\n        <Flex>\n          <CustomDateInput\n            inputFormat={inputFormat}\n            isInvalid={!isValidDate(startDate)}\n            defaultValue={startDate}\n            onChange={handleStartDateChange}\n          />\n          <CustomTimeInput\n            isInvalid={!isValidTime(startTime)}\n            defaultValue={startTime}\n            onChange={handleStartTimeChange}\n          />\n        </Flex>\n        <Text minWidth=\"16x\">\n          To:\n        </Text>\n        <Flex>\n          <CustomDateInput\n            inputFormat={inputFormat}\n            isInvalid={!isValidDate(endDate)}\n            value={endDate}\n            onChange={handleEndDateChange}\n          />\n          <CustomTimeInput\n            isInvalid={!isValidTime(endTime)}\n            value={endTime}\n            onChange={handleEndTimeChange}\n          />\n        </Flex>\n      </Grid>\n      <Flex justifyContent=\"flex-end\">\n        <Grid templateColumns=\"1fr 1fr\" columnGap=\"2x\">\n          <Button\n            variant=\"primary\"\n            disabled={isInvalid}\n            onClick={handleApplyClick}\n          >\n            Apply\n          </Button>\n          <Button\n            variant=\"secondary\"\n            onClick={onClose}\n          >\n            Cancel\n          </Button>\n        </Grid>\n      </Flex>\n    </Box>\n  );\n};\n\nconst stateReducer = (prevState, nextState) => ({\n  ...prevState,\n  ...(typeof nextState === 'function' ? nextState(prevState) : nextState),\n});\n\nconst padTo2Digits = (num) => {\n  return num.toString().padStart(2, '0');\n};\n\nconst formatDate = (date) => {\n  return (\n    [\n      date.getFullYear(),\n      padTo2Digits(date.getMonth() + 1),\n      padTo2Digits(date.getDate()),\n    ].join('-')\n  );\n};\n\nconst formatTime = (date) => {\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  return (\n    [\n      padTo2Digits(hours),\n      padTo2Digits(minutes),\n      padTo2Digits(seconds),\n    ].join(':')\n  );\n};\n\nconst App = () => {\n  const inputFormat = 'yyyy-MM-dd';\n  const today = new Date();\n  const [state, setState] = React.useReducer(stateReducer, {\n    value: '1d',\n    isDateTimePickerVisible: false,\n    startDate: today,\n    startTime: '00:00:00',\n    endDate: today,\n    endTime: '23:59:59',\n  });\n  const handleMenuItemClick = (event) => {\n    const value = event.currentTarget.getAttribute('value');\n    if (value === 'custom') {\n      event.preventDefault();\n      if (!state.isDateTimePickerVisible) {\n        setState({\n          isDateTimePickerVisible: true,\n        });\n      }\n      return;\n    }\n\n    setState({\n      value,\n      isDateTimePickerVisible: false,\n    });\n  };\n  const mapValueToLabel = (value) => {\n    if (value === 'custom') {\n      return 'Custom range';\n    }\n    return {\n      '1d': 'Last 24 hours',\n      '7d': 'Last 7 days',\n      '30d': 'Last 30 days',\n      '90d': 'Last 90 days',\n    }[value];\n  };\n  const dateTimeRange = (() => {\n    const value = state.value;\n\n    if (value === 'custom') {\n      return [\n        `${formatDate(state.startDate)} ${state.startTime}`,\n        `${formatDate(state.endDate)} ${state.endTime}`,\n      ];\n    }\n\n    const days = parseInt(value, 10);\n    if (days > 0) {\n      const now = new Date();\n      const date = new Date(now.setDate(now.getDate() - days));\n      return [\n        `${formatDate(date)} ${formatTime(date)}`,\n        `${formatDate(new Date())} ${formatTime(new Date())}`,\n      ];\n    }\n\n    return [];\n  })();\n\n  useEffect(() => {\n    if (state.value === 'custom' && !state.isDateTimePickerVisible) {\n      setState({\n        isDateTimePickerVisible: true,\n      });\n    }\n  }, [state.value, state.isDateTimePickerVisible]);\n\n  return (<>\n    <Flex mb=\"3x\">\n      <TextLabel>Date & time range:</TextLabel>\n      <Space width=\"3x\" />\n      <Text>{dateTimeRange[0]}</Text>\n      <Text px=\"1x\">to</Text>\n      <Text>{dateTimeRange[1]}</Text>\n    </Flex>\n    <Menu\n      onClose={() => {\n        if (state.isDateTimePickerVisible) {\n          setState({ isDateTimePickerVisible: false });\n        }\n      }}\n    >\n      {({ onClose }) => (\n        <>\n          <MenuButton variant=\"secondary\">\n            <Text>{mapValueToLabel(state.value)}</Text>\n          </MenuButton>\n          <MenuList width=\"max-content\">\n            {state.isDateTimePickerVisible && (\n              <DateTimePicker\n                inputFormat={inputFormat}\n                startDate={state.startDate}\n                startTime={state.startTime}\n                endDate={state.endDate}\n                endTime={state.endTime}\n                onApply={({ startDate, startTime, endDate, endTime }) => {\n                  onClose();\n                  setState({\n                    value: 'custom',\n                    startDate,\n                    startTime,\n                    endDate,\n                    endTime,\n                  });\n                }}\n                onClose={() => {\n                  onClose();\n                }}\n              />\n            )}\n            {['1d', '7d', '30d', '90d'].map(value => (\n              <MenuItem\n                key={value}\n                value={value}\n                onClick={handleMenuItemClick}\n              >\n                {mapValueToLabel(value)}\n              </MenuItem>\n            ))}\n            <MenuItem\n              value=\"custom\"\n              onClick={handleMenuItemClick}\n            >\n              Custom Period\n              <Space width=\"2x\" />\n              <AngleRightIcon />\n            </MenuItem>\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  </>);\n};\n\nexport default App;",path:"pages/components/date-pickers/date-picker/index.page.mdx"},sandbox:{files:{},raw:"import {\n  Box,\n  Button,\n  DatePicker,\n  Flex,\n  Grid,\n  InputAdornment,\n  InputControl,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Space,\n  Text,\n  TextLabel,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport { AngleRightIcon, CalendarIcon, ChevronLeftIcon, ClockIcon } from '@tonic-ui/react-icons';\nimport React, { useEffect, useState } from 'react';\n\nconst CustomDateInput = ({\n  inputFormat = 'yyyy-MM-dd',\n  defaultValue,\n  onChange,\n  ...rest\n}) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [value, setValue] = useState(defaultValue);\n  const handleChange = (value) => {\n    setValue(value);\n    onChange(value);\n  };\n\n  return (\n    <DatePicker\n      closeOnSelect={true}\n      value={value}\n      onChange={handleChange}\n      inputFormat={inputFormat}\n      renderInput={({ error, inputProps }) => {\n        const _error = !!inputProps.value && error;\n\n        return (\n          <InputControl\n            {...inputProps}\n            readOnly\n            error={_error}\n            placeholder={inputFormat}\n            borderTopRightRadius={0}\n            borderBottomRightRadius={0}\n            width={130}\n            startAdornment={(\n              <InputAdornment color={colorStyle.color.secondary}>\n                <CalendarIcon />\n              </InputAdornment>\n            )}\n          />\n        );\n      }}\n      {...rest}\n    />\n  );\n};\n\nconst CustomTimeInput = ({\n  onChange,\n  ...rest\n}) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const handleTimeInputChange = (event) => {\n    const value = event.target.value;\n    onChange(value);\n  };\n\n  return (\n    <InputControl\n      onChange={handleTimeInputChange}\n      width={110}\n      borderTopLeftRadius={0}\n      borderBottomLeftRadius={0}\n      startAdornment={(\n        <InputAdornment color={colorStyle.color.secondary}>\n          <ClockIcon />\n        </InputAdornment>\n      )}\n      {...rest}\n    />\n  );\n};\n\nconst DateTimePicker = ({\n  startDate: startDateProp,\n  startTime: startTimeProp,\n  endDate: endDateProp,\n  endTime: endTimeProp,\n  onApply,\n  onClose,\n}) => {\n  const inputFormat = 'yyyy-MM-dd';\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [startDate, setStartDate] = useState(startDateProp);\n  const [startTime, setStartTime] = useState(startTimeProp);\n  const [endDate, setEndDate] = useState(endDateProp);\n  const [endTime, setEndTime] = useState(endTimeProp);\n  const [isInvalid, setIsInvalid] = useState(false);\n  const isValidDate = (value) => {\n    if (value instanceof Date) {\n      return !!value.getTime();\n    }\n    // The date format is \"yyyy-MM-dd\"\n    const pattern = /([12]\\d{3}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\d|3[01]))/;\n    return !!String(value).match(pattern);\n  };\n  const isValidTime = (value) => {\n    // The time format is \"HH:mm:ss\"\n    const pattern = /^(?:2[0-3]|[01]?[0-9]):[0-5][0-9]:[0-5][0-9]$/;\n    return !!String(value).match(pattern);\n  };\n  const handleStartDateChange = (value) => {\n    setStartDate(value);\n  };\n  const handleEndDateChange = (value) => {\n    setEndDate(value);\n  };\n  const handleStartTimeChange = (value) => {\n    setStartTime(value);\n  };\n  const handleEndTimeChange = (value) => {\n    setEndTime(value);\n  };\n  const handleApplyClick = () => {\n    onApply({\n      startDate,\n      startTime,\n      endDate,\n      endTime,\n    });\n  };\n\n  useEffect(() => {\n    const isValidStartDate = isValidDate(startDate);\n    const isValidStartTime = isValidTime(startTime);\n    const isValidEndDate = isValidDate(endDate);\n    const isValidEndTime = isValidTime(endTime);\n\n    if (!(isValidStartDate && isValidEndDate && isValidStartTime && isValidEndTime)) {\n      setIsInvalid(true);\n      return;\n    }\n\n    // if the end datetime is the earlier than the start datetime, then set the end datetime to the start datetime\n    if ((Date.parse(`${formatDate(endDate)} ${endTime}`)).valueOf() < (Date.parse(`${formatDate(startDate)} ${startTime}`)).valueOf()){\n      setEndDate(startDate);\n      setEndTime('23:59:59');\n    } else {\n      setIsInvalid(false);\n    }\n  }, [startDate, startTime, endDate, endTime]);\n\n  return (\n    <Box\n      backgroundColor={colorStyle.background.tertiary}\n      position=\"absolute\"\n      left=\"100%\"\n      top={0}\n      px=\"3x\"\n      py=\"3x\"\n      borderLeft={1}\n      borderColor={colorStyle.divider}\n    >\n      <Flex\n        alignItems=\"center\"\n        columnGap=\"3x\"\n        mb=\"6x\"\n      >\n        <ChevronLeftIcon color={colorStyle.color.secondary} />\n        <Text fontSize=\"md\" lineHeight=\"md\">\n          Custom Period\n        </Text>\n      </Flex>\n      <Grid\n        templateColumns=\"auto 1fr\"\n        alignItems=\"center\"\n        rowGap=\"3x\"\n        mb=\"3x\"\n      >\n        <Text minWidth=\"16x\">\n          From:\n        </Text>\n        <Flex>\n          <CustomDateInput\n            inputFormat={inputFormat}\n            isInvalid={!isValidDate(startDate)}\n            defaultValue={startDate}\n            onChange={handleStartDateChange}\n          />\n          <CustomTimeInput\n            isInvalid={!isValidTime(startTime)}\n            defaultValue={startTime}\n            onChange={handleStartTimeChange}\n          />\n        </Flex>\n        <Text minWidth=\"16x\">\n          To:\n        </Text>\n        <Flex>\n          <CustomDateInput\n            inputFormat={inputFormat}\n            isInvalid={!isValidDate(endDate)}\n            value={endDate}\n            onChange={handleEndDateChange}\n          />\n          <CustomTimeInput\n            isInvalid={!isValidTime(endTime)}\n            value={endTime}\n            onChange={handleEndTimeChange}\n          />\n        </Flex>\n      </Grid>\n      <Flex justifyContent=\"flex-end\">\n        <Grid templateColumns=\"1fr 1fr\" columnGap=\"2x\">\n          <Button\n            variant=\"primary\"\n            disabled={isInvalid}\n            onClick={handleApplyClick}\n          >\n            Apply\n          </Button>\n          <Button\n            variant=\"secondary\"\n            onClick={onClose}\n          >\n            Cancel\n          </Button>\n        </Grid>\n      </Flex>\n    </Box>\n  );\n};\n\nconst stateReducer = (prevState, nextState) => ({\n  ...prevState,\n  ...(typeof nextState === 'function' ? nextState(prevState) : nextState),\n});\n\nconst padTo2Digits = (num) => {\n  return num.toString().padStart(2, '0');\n};\n\nconst formatDate = (date) => {\n  return (\n    [\n      date.getFullYear(),\n      padTo2Digits(date.getMonth() + 1),\n      padTo2Digits(date.getDate()),\n    ].join('-')\n  );\n};\n\nconst formatTime = (date) => {\n  const hours = date.getHours();\n  const minutes = date.getMinutes();\n  const seconds = date.getSeconds();\n  return (\n    [\n      padTo2Digits(hours),\n      padTo2Digits(minutes),\n      padTo2Digits(seconds),\n    ].join(':')\n  );\n};\n\nconst App = () => {\n  const inputFormat = 'yyyy-MM-dd';\n  const today = new Date();\n  const [state, setState] = React.useReducer(stateReducer, {\n    value: '1d',\n    isDateTimePickerVisible: false,\n    startDate: today,\n    startTime: '00:00:00',\n    endDate: today,\n    endTime: '23:59:59',\n  });\n  const handleMenuItemClick = (event) => {\n    const value = event.currentTarget.getAttribute('value');\n    if (value === 'custom') {\n      event.preventDefault();\n      if (!state.isDateTimePickerVisible) {\n        setState({\n          isDateTimePickerVisible: true,\n        });\n      }\n      return;\n    }\n\n    setState({\n      value,\n      isDateTimePickerVisible: false,\n    });\n  };\n  const mapValueToLabel = (value) => {\n    if (value === 'custom') {\n      return 'Custom range';\n    }\n    return {\n      '1d': 'Last 24 hours',\n      '7d': 'Last 7 days',\n      '30d': 'Last 30 days',\n      '90d': 'Last 90 days',\n    }[value];\n  };\n  const dateTimeRange = (() => {\n    const value = state.value;\n\n    if (value === 'custom') {\n      return [\n        `${formatDate(state.startDate)} ${state.startTime}`,\n        `${formatDate(state.endDate)} ${state.endTime}`,\n      ];\n    }\n\n    const days = parseInt(value, 10);\n    if (days > 0) {\n      const now = new Date();\n      const date = new Date(now.setDate(now.getDate() - days));\n      return [\n        `${formatDate(date)} ${formatTime(date)}`,\n        `${formatDate(new Date())} ${formatTime(new Date())}`,\n      ];\n    }\n\n    return [];\n  })();\n\n  useEffect(() => {\n    if (state.value === 'custom' && !state.isDateTimePickerVisible) {\n      setState({\n        isDateTimePickerVisible: true,\n      });\n    }\n  }, [state.value, state.isDateTimePickerVisible]);\n\n  return (<>\n    <Flex mb=\"3x\">\n      <TextLabel>Date & time range:</TextLabel>\n      <Space width=\"3x\" />\n      <Text>{dateTimeRange[0]}</Text>\n      <Text px=\"1x\">to</Text>\n      <Text>{dateTimeRange[1]}</Text>\n    </Flex>\n    <Menu\n      onClose={() => {\n        if (state.isDateTimePickerVisible) {\n          setState({ isDateTimePickerVisible: false });\n        }\n      }}\n    >\n      {({ onClose }) => (\n        <>\n          <MenuButton variant=\"secondary\">\n            <Text>{mapValueToLabel(state.value)}</Text>\n          </MenuButton>\n          <MenuList width=\"max-content\">\n            {state.isDateTimePickerVisible && (\n              <DateTimePicker\n                inputFormat={inputFormat}\n                startDate={state.startDate}\n                startTime={state.startTime}\n                endDate={state.endDate}\n                endTime={state.endTime}\n                onApply={({ startDate, startTime, endDate, endTime }) => {\n                  onClose();\n                  setState({\n                    value: 'custom',\n                    startDate,\n                    startTime,\n                    endDate,\n                    endTime,\n                  });\n                }}\n                onClose={() => {\n                  onClose();\n                }}\n              />\n            )}\n            {['1d', '7d', '30d', '90d'].map(value => (\n              <MenuItem\n                key={value}\n                value={value}\n                onClick={handleMenuItemClick}\n              >\n                {mapValueToLabel(value)}\n              </MenuItem>\n            ))}\n            <MenuItem\n              value=\"custom\"\n              onClick={handleMenuItemClick}\n            >\n              Custom Period\n              <Space width=\"2x\" />\n              <AngleRightIcon />\n            </MenuItem>\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  </>);\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,a.jsxs)(n.h2,{id:"props",children:["Props",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.h3,{id:"datepicker-1",children:["DatePicker",(0,a.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#datepicker-1",children:(0,a.jsx)(n.svg,{children:(0,a.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(n.table,{children:[(0,a.jsx)(n.thead,{children:(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.th,{align:"left",children:"Name"}),(0,a.jsx)(n.th,{align:"left",children:"Type"}),(0,a.jsx)(n.th,{align:"left",children:"Default"}),(0,a.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,a.jsxs)(n.tbody,{children:[(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"closeOnSelect"}),(0,a.jsx)(n.td,{align:"left",children:"boolean"}),(0,a.jsx)(n.td,{align:"left",children:"false"}),(0,a.jsx)(n.td,{align:"left",children:"Determines if the date picker should close automatically after a date is selected."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"defaultValue"}),(0,a.jsx)(n.td,{align:"left",children:"Date | string"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["The default selected date. If the ",(0,a.jsx)(n.code,{children:"defaultValue"})," is a string, it will be parsed to a ",(0,a.jsx)(n.code,{children:"Date"})," object in accordance with the ",(0,a.jsx)(n.code,{children:"inputFormat"}),"."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"firstDayOfWeek"}),(0,a.jsx)(n.td,{align:"left",children:"number"}),(0,a.jsx)(n.td,{align:"left",children:"0"}),(0,a.jsxs)(n.td,{align:"left",children:["The first day of the week.",(0,a.jsx)("br",{}),"0 = Sunday",(0,a.jsx)("br",{}),"1 = Monday",(0,a.jsx)("br",{}),"2 = Tuesday",(0,a.jsx)("br",{}),"3 = Wednesday",(0,a.jsx)("br",{}),"4 = Thursday",(0,a.jsx)("br",{}),"5 = Friday",(0,a.jsx)("br",{}),"6 = Saturday"]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"formatDate"}),(0,a.jsx)(n.td,{align:"left",children:"function"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["A callback called to return the formatted date string in the given format.",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsx)("b",{children:"Signature"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.code,{children:"function(date, format, options) => void"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"date"}),": The original date.",(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"format"}),": The string of ",(0,a.jsx)(n.a,{href:"https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table",children:"format tokens"}),".",(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"options"}),": An object with options."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"inputFormat"}),(0,a.jsx)(n.td,{align:"left",children:"string"}),(0,a.jsx)(n.td,{align:"left",children:"'yyyy-MM-dd'"}),(0,a.jsxs)(n.td,{align:"left",children:["The default date format is ISO 8601 (",(0,a.jsx)(n.code,{children:"yyyy-MM-dd"}),"). You can change the input format in accordance with the locale. The input value will be parsed to a ",(0,a.jsx)(n.code,{children:"Date"})," object with ",(0,a.jsx)(n.code,{children:"dd"})," as day, ",(0,a.jsx)(n.code,{children:"MM"})," as month, and ",(0,a.jsx)(n.code,{children:"yyyy"})," as year."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"offset"}),(0,a.jsx)(n.td,{align:"left",children:"[skidding, distance]"}),(0,a.jsx)(n.td,{align:"left",children:"[0, 0]"}),(0,a.jsx)(n.td,{align:"left",children:"The skidding and distance of the date picker."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"minDate"}),(0,a.jsx)(n.td,{align:"left",children:"Date"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsx)(n.td,{align:"left",children:"The minimum date that can be selected."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"maxDate"}),(0,a.jsx)(n.td,{align:"left",children:"Date"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsx)(n.td,{align:"left",children:"The maximum date that can be selected."})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"onChange"}),(0,a.jsx)(n.td,{align:"left",children:"function"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["A callback called when the value (the selected date) changes.",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsx)("b",{children:"Signature:"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.code,{children:"function(value) => void"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"value"}),": The selected date."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"onError"}),(0,a.jsx)(n.td,{align:"left",children:"function"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["An error-first callback called when the date validation returns an error (or the date is valid after error).",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsx)("b",{children:"Signature"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.code,{children:"function(error, value) => void"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"error"}),": The error message. It will be ",(0,a.jsx)(n.code,{children:"undefined"})," if the date is valid after error.",(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"value"}),": The selected date."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"placement"}),(0,a.jsx)(n.td,{align:"left",children:"string"}),(0,a.jsx)(n.td,{align:"left",children:"'bottom-start'"}),(0,a.jsx)(n.td,{align:"left",children:"The placement of the date picker. One of: 'top', 'top-start', 'top-end', 'bottom', 'bottom-start', 'bottom-end'"})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"renderInput"}),(0,a.jsx)(n.td,{align:"left",children:"function"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["The ",(0,a.jsx)(n.code,{children:"renderInput"})," prop allows you to customize the rendered input.",(0,a.jsx)("br",{}),"The ",(0,a.jsx)(n.code,{children:"props"})," argument of this render prop contains props of ",(0,a.jsx)(n.a,{href:"../../components/input-control",children:"InputControl"})," that you need to forward.",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsx)("b",{children:"Signature:"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.code,{children:"function(props) => ReactNode"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"props"}),": The props of the input.",(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"returns (ReactNode)"}),": The node to render as the input."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"shouldDisableDate"}),(0,a.jsx)(n.td,{align:"left",children:"function"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["Disable specific date.",(0,a.jsx)("br",{}),(0,a.jsx)("br",{}),(0,a.jsx)("b",{children:"Signature:"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.code,{children:"function(date) => boolean"}),(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"date"}),": The date to check.",(0,a.jsx)("br",{}),(0,a.jsx)(n.em,{children:"returns (boolean)"}),": Return ",(0,a.jsx)(n.code,{children:"true"})," if the date will be disabled."]})]}),(0,a.jsxs)(n.tr,{children:[(0,a.jsx)(n.td,{align:"left",children:"value"}),(0,a.jsx)(n.td,{align:"left",children:"Date | string"}),(0,a.jsx)(n.td,{align:"left"}),(0,a.jsxs)(n.td,{align:"left",children:["The selected date. If the ",(0,a.jsx)(n.code,{children:"value"})," is a string, it will be parsed to a ",(0,a.jsx)(n.code,{children:"Date"})," object in accordance with the ",(0,a.jsx)(n.code,{children:"inputFormat"}),"."]})]})]})]})]})}var eh=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,o.ah)(),e.components).wrapper;return n?(0,a.jsx)(n,Object.assign({},e,{children:(0,a.jsx)(ef,e)})):ef(e)}},75026:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/date-pickers/date-picker",function(){return t(99947)}])},50403:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var a=t(75928),o=t(52903),r=(0,a.Z)((0,o.tZ)("path",{d:"M4 8l6.607-7 1.393 1.476-5.214 5.524 5.214 5.524-1.393 1.476z"}),"ChevronLeftIcon")},34121:function(e,n,t){"use strict";t.d(n,{Z:function(){return r}}),t(2784);var a=t(75928),o=t(52903),r=(0,a.Z)((0,o.tZ)("path",{d:"M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.418 0 8-3.582 8-8v0c0-4.418-3.582-8-8-8v0zM8 14.5c-3.59 0-6.5-2.91-6.5-6.5s2.91-6.5 6.5-6.5c3.59 0 6.5 2.91 6.5 6.5v0c-0.006 3.588-2.912 6.494-6.499 6.5h-0.001zM8 8h4v1h-5v-5h1v4z"}),"ClockIcon")},39256:function(e,n,t){"use strict";t.d(n,{Z:function(){return h}});var a=t(53860),o=t(56818),r=t(92307),l=t.n(r),i=t(2784),s=t(12711),c=t(34730),d=t(52903),u=t(49857),m=["children","orientation","size","variant"],p=l()(function(e){return(0,a.Zj)({},e)}),f=(0,i.forwardRef)(function(e,n){var t=e.children,r=e.orientation,l=void 0===r?"horizontal":r,i=e.size,f=e.variant,h=(0,a.Kd)(e,m),x=(0,c.K7)({orientation:l}),y=p({orientation:l,size:void 0===i?"md":i,variant:void 0===f?"default":f});return(0,d.tZ)(s.u.Provider,{value:y,children:(0,d.tZ)(u.Z,(0,a.Zj)((0,a.Zj)((0,a.Zj)({ref:n},x),h),{},{children:(0,o.Pu)(t,y)}))})});f.displayName="ButtonGroup";var h=f},1847:function(e,n,t){"use strict";t.d(n,{Z:function(){return k}});var a=t(53860),o=t(20325),r=t(56818),l=t(13409),i=t(5081),s=t(2784),c=t(81522),d=t(40596),u=t(27216),m="blue",p=t(52903),f=t(95530),h=function(e){return(0,p.tZ)(f.Z,(0,a.Zj)((0,a.Zj)({viewBox:"0 0 16 16"},e),{},{children:(0,p.tZ)("g",{fill:"currentColor",children:(0,p.tZ)("path",{d:"M6 11.060l-3-3-1 1 4 4 9-9-1-1z"})})}))};h.displayName="IconChecked";var x=function(e){return(0,p.tZ)(f.Z,(0,a.Zj)((0,a.Zj)({viewBox:"0 0 24 24"},e),{},{children:(0,p.tZ)("g",{fill:"currentColor",children:(0,p.tZ)("rect",{height:"18",width:"18",x:"3",y:"3"})})}))};x.displayName="IconIndeterminate";var y=t(49857),g=["indeterminate","size","variantColor","sx"],v=(0,s.forwardRef)(function(e,n){var t,o,l,s,c,f,v,D,b,T,C,k,j=e.indeterminate,S=e.size,I=void 0===S?"md":S,E=e.variantColor,w=void 0===E?m:E,F=e.sx,M=(0,a.Kd)(e,g),O=(0,u.u)().sizes,Z=(0,d.Z)(),L=(0,a.ZQ)(Z,1)[0],B={lg:O["6x"],md:O["4x"],sm:O["3x"]}[I],P=function(e){return'input[type="'.concat("checkbox",'"]')+(0,i.Zs)(e)+" + &"},V=(0,a.Zj)((0,a._x)((0,a._x)((0,a._x)({position:"relative",border:1,width:{lg:"6x",md:"4x",sm:"3x"}[I],height:{lg:"6x",md:"4x",sm:"3x"}[I],zIndex:0},P()+"> *",{opacity:0}),P(":checked")+"> *",{opacity:1}),P("[data-indeterminate]")+"> *",{opacity:1}),j?(t=({dark:"".concat(w,":60"),light:"".concat(w,":60")})[L],o=({dark:"".concat(w,":50"),light:"".concat(w,":50")})[L],l=({dark:"".concat(w,":50"),light:"".concat(w,":50")})[L],s=({dark:"".concat(w,":60"),light:"".concat(w,":60")})[L],(0,a._x)((0,a._x)((0,a._x)((0,a._x)({},P("[data-indeterminate]"),{borderColor:{dark:"gray:50",light:"gray:40"}[L],color:t}),P("[data-indeterminate]:hover:not(:disabled)"),{borderColor:l,color:o}),P("[data-indeterminate]:focus-visible"),{outlineColor:s,outlineStyle:"solid",outlineWidth:"1h"}),P("[data-indeterminate]:disabled"),{borderColor:{dark:"gray:60",light:"gray:40"}[L],color:{dark:"gray:60",light:"gray:40"}[L],opacity:.28})):(c=({dark:"white:emphasis",light:"white:emphasis"})[L],f="transparent",v=({dark:"".concat(w,":60"),light:"".concat(w,":60")})[L],D=({dark:"".concat(w,":50"),light:"".concat(w,":50")})[L],b=({dark:"".concat(w,":50"),light:"".concat(w,":50")})[L],T=({dark:"gray:60",light:"gray:40"})[L],C=({dark:"".concat(w,":60"),light:"".concat(w,":60")})[L],k=({dark:"".concat(w,":60"),light:"".concat(w,":60")})[L],(0,a._x)((0,a._x)((0,a._x)((0,a._x)((0,a._x)((0,a._x)((0,a._x)((0,a._x)({backgroundColor:f,borderColor:{dark:"gray:50",light:"gray:40"}[L],color:c},P(":hover"),{backgroundColor:f,borderColor:b,color:c}),P(":disabled"),{backgroundColor:f,borderColor:T,color:c,opacity:.28}),P(":focus-visible"),{outlineColor:k,outlineStyle:"solid",outlineWidth:"1h"}),P(":checked"),{backgroundColor:v,borderColor:C,color:c}),P(":checked:hover:not(:disabled)"),{backgroundColor:D,borderColor:b,color:c}),P(":checked:focus-visible"),{backgroundColor:"inherit",borderColor:"transparent",color:c}),P(":checked:focus-visible")+"> div:first-of-type",{backgroundColor:v}),P(":checked:disabled"),{backgroundColor:{dark:"gray:60",light:"gray:40"}[L],borderColor:T,color:{dark:"white:emphasis",light:"black:primary"}[L],opacity:.28})));return(0,p.tZ)(y.Z,(0,a.Zj)((0,a.Zj)((0,a.Zj)({"aria-hidden":(0,r.Qm)(!0),role:"checkbox",sx:[V].concat((0,a.u)((0,i.rY)(F)))},{display:"inline-flex",alignItems:"center",justifyContent:"center",flexShrink:0,userSelect:"none"}),M),{},{children:j?(0,p.tZ)(x,{size:B}):(0,p.tZ)(h,{size:B})}))});v.displayName="CheckboxControlBox";var D=t(16301),b=function(){if(!s.useContext)throw Error("The `useContext` hook is not available with your React version.");return(0,s.useContext)(D.w)},T=["checked","children","defaultChecked","disabled","id","indeterminate","inputProps","inputRef","name","onBlur","onChange","onClick","onFocus","size","value","variantColor"],C=(0,s.forwardRef)(function(e,n){var t,d,u=e.checked,f=e.children,h=e.defaultChecked,x=e.disabled,g=e.id,D=e.indeterminate,C=e.inputProps,k=e.inputRef,j=e.name,S=e.onBlur,I=e.onChange,E=e.onClick,w=e.onFocus,F=e.size,M=e.value,O=e.variantColor,Z=(0,a.Kd)(e,T),L=(0,s.useRef)(),B=(0,o.Z)(k,L),P={display:"inline-flex",verticalAlign:"top",alignItems:"center",cursor:x?"not-allowed":"pointer"},V=b();if(V){var G,A,W,R,z=(0,a.Zj)({},V),N=z.disabled,_=z.name,$=z.size,H=z.value,U=z.variantColor,Y=z.onChange;void 0!==H&&(u=(0,i.rY)(H).includes(M)),x=N||x,j=null!=_?_:j,I=(0,r.PP)(I,Y),F=null!==(G=null!==(A=F)&&void 0!==A?A:$)&&void 0!==G?G:"md",O=null!==(W=null!==(R=O)&&void 0!==R?R:U)&&void 0!==W?W:m}else F=null!==(t=F)&&void 0!==t?t:"md",O=null!==(d=O)&&void 0!==d?d:m;return(0,p.BX)(y.Z,(0,a.Zj)((0,a.Zj)((0,a.Zj)({as:"label",ref:n},P),Z),{},{children:[(0,p.tZ)(c.Z,(0,a.Zj)({as:"input",checked:u,"data-indeterminate":(0,r.PB)(D),defaultChecked:h,disabled:x,id:g,name:j,onBlur:S,onChange:I,onClick:E,onFocus:w,ref:B,type:"checkbox",value:M},C)),(0,p.tZ)(v,{indeterminate:D,size:F,variantColor:O}),!(0,l.Rw)(f)&&(0,p.tZ)(y.Z,{ml:"2x",userSelect:"none",opacity:x?.28:1,children:f})]}))});C.displayName="Checkbox";var k=C},16301:function(e,n,t){"use strict";t.d(n,{w:function(){return a}});var a=(0,t(2784).createContext)()},17025:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var a=t(53860),o=t(2784),r=t(83513),l=t(19088),i=t(10130),s=t(52903),c=(0,o.forwardRef)(function(e,n){var t=(0,i.u)();return(0,s.tZ)(l.Z,(0,a.Zj)((0,a.Zj)({as:r.Z,ref:n},t),e))});c.displayName="LinkButton";var d=c},81522:function(e,n,t){"use strict";t.d(n,{Z:function(){return s}});var a=t(53860),o=t(2784),r=t(52903),l=t(49857),i=(0,o.forwardRef)(function(e,n){return(0,r.tZ)(l.Z,(0,a.Zj)({ref:n,position:"absolute",width:1,height:1,padding:0,border:0,overflow:"hidden",clipPath:"inset(50%)",whiteSpace:"nowrap"},e))});i.displayName="VisuallyHidden";var s=i}},function(e){e.O(0,[9184,4395,4960,4791,2065,4739,2888,9774,179],function(){return e(e.s=75026)}),_N_E=e.O()}]);