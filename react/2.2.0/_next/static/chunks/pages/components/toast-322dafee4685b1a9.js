(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7449],{27033:function(n,t,e){"use strict";e.r(t),e.d(t,{default:function(){return nz}});var o=e(52322),a=e(45392),r=e(96835),i=e(73645),s=e(85017),l=e(70758),c=e(62080),u=e(49857),d=e(99293),h=e(72448),p=e(2501),m=e(53335),f=e(14378),x=e(42049),y=e(95346),T=e(61481),b=e(61619),g=e(57861),C=e(42309),v=e(6194),w=e(37662),j=e(2784),S=e(60258);function Z(n){return(Z="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function k(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})),e.push.apply(e,o)}return e}function B(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{if(r=(e=e.call(n)).next,0===t){if(Object(e)!==e)return;l=!1}else for(;!(l=(o=r.call(e)).done)&&(s.push(o.value),s.length!==t);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,t)||E(n,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function E(n,t){if(n){if("string"==typeof n)return A(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return A(n,t)}}function A(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}function O(){return(O=Object.assign?Object.assign.bind():function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o])}return n}).apply(this,arguments)}var I=function(n){return j.createElement(i.Z,O({flexDirection:"column",alignItems:"center",position:"absolute",top:"12x",left:"50%",transform:"translateX(-50%)",width:"max-content",maxWidth:"80%",zIndex:"toast"},n))},M=0,W=function(){var n=B((0,s.Z)(),1)[0],t=B((0,j.useState)([]),2),e=t[0],o=t[1],a=function(n){var t=function(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?k(Object(e),!0).forEach(function(t){var o,a;o=t,a=e[t],(o=function(n){var t=function(n,t){if("object"!==Z(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!==Z(o))return o;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"===Z(t)?t:String(t)}(o))in n?Object.defineProperty(n,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[o]=a}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):k(Object(e)).forEach(function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))})}return n}({},n),e=t.appearance,a=t.content,r=t.duration,i=void 0===r?null:r,s=t.isClosable,l=void 0===s||s;o(function(n){var t,r=++M;return[].concat(function(n){if(Array.isArray(n))return A(n)}(t=n.slice(n.length))||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(t)||E(t)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[{id:r,appearance:e,content:a,duration:i,isClosable:l,onClose:function(){o(function(n){return n.filter(function(n){return n.id!==r})})}}])})},r=function(){o([])},O=function(n){return function(t){var e={success:j.createElement(j.Fragment,null,j.createElement(l.Z,null,"This is a success message."),j.createElement(l.Z,null,"The toast will be automatically dismissed after 5 seconds.")),info:j.createElement(j.Fragment,null,j.createElement(l.Z,null,"This is an info message."),j.createElement(l.Z,null,"The toast will remain visible until the user dismisses it.")),warning:j.createElement(j.Fragment,null,j.createElement(l.Z,null,"This is a warning message."),j.createElement(l.Z,null,"The toast will remain visible until the user dismisses it.")),error:j.createElement(j.Fragment,null,j.createElement(l.Z,null,"This is an error message."),j.createElement(l.Z,null,"The toast will remain visible until the user dismisses it."))}[n];a({appearance:n,content:e,duration:"success"===n?5e3:void 0})}};return j.createElement(j.Fragment,null,j.createElement(i.Z,{justifyContent:"space-between",columnGap:"4x"},j.createElement(i.Z,{flexWrap:"wrap",columnGap:"2x",rowGap:"2x"},j.createElement(c.Z,{variant:"secondary",onClick:O("success")},"Show Success Message"),j.createElement(c.Z,{variant:"secondary",onClick:O("info")},"Show Info Message"),j.createElement(c.Z,{variant:"secondary",onClick:O("warning")},"Show Warning Message"),j.createElement(c.Z,{variant:"secondary",onClick:O("error")},"Show Error Message")),j.createElement(u.Z,null,j.createElement(c.Z,{variant:"secondary",onClick:function(){r()}},j.createElement(w.Z,null),j.createElement(d.Z,{width:"2x"}),"Close"))),j.createElement(h.Z,{my:"4x"}),j.createElement(i.Z,{columnGap:"4x"},j.createElement(p.Z,{margin:0,minHeight:400,minWidth:320,width:"50%"},j.createElement(I,null,j.createElement(S.Z,{component:null},e.map(function(t){return j.createElement(m.Z,{key:null==t?void 0:t.id,in:!0,unmountOnExit:!0},j.createElement(f.Z,{duration:null==t?void 0:t.duration,onClose:null==t?void 0:t.onClose},j.createElement(x.Z,{appearance:null==t?void 0:t.appearance,isClosable:null==t?void 0:t.isClosable,onClose:null==t?void 0:t.onClose,sx:{mb:"2x",minWidth:280,width:"fit-content",boxShadow:n.shadow.thin}},null==t?void 0:t.content)))}))),j.createElement(y.Z,null,"Drawer"),j.createElement(T.Z,null,j.createElement(b.Z,{direction:"column",spacing:"4x"},j.createElement(g.Z,{width:160}),j.createElement(g.Z,{width:240}),j.createElement(g.Z,{width:240}))),j.createElement(C.Z,null,j.createElement(v.Z,{templateColumns:"repeat(2, 1fr)",columnGap:"2x"},j.createElement(c.Z,{variant:"primary"},"OK"),j.createElement(c.Z,null,"Cancel"))))))},F=e(40736),N=e(52235),L=e(35358),P=e(76168);function D(n){return(D="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function G(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);t&&(o=o.filter(function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable})),e.push.apply(e,o)}return e}function z(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{if(r=(e=e.call(n)).next,0===t){if(Object(e)!==e)return;l=!1}else for(;!(l=(o=r.call(e)).done)&&(s.push(o.value),s.length!==t);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,t)||R(n,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function R(n,t){if(n){if("string"==typeof n)return H(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return H(n,t)}}function H(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}function _(){return(_=Object.assign?Object.assign.bind():function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o])}return n}).apply(this,arguments)}var X=function(n){return j.createElement(i.Z,_({flexDirection:"column",alignItems:"center",position:"absolute",top:"12x",left:"50%",transform:"translateX(-50%)",width:"max-content",maxWidth:"80%",zIndex:"toast"},n))},K=0,U=function(){var n=z((0,s.Z)(),1)[0],t=z((0,j.useState)([]),2),e=t[0],o=t[1],a=function(n){var t=function(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?G(Object(e),!0).forEach(function(t){var o,a;o=t,a=e[t],(o=function(n){var t=function(n,t){if("object"!==D(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!==D(o))return o;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(n,"string");return"symbol"===D(t)?t:String(t)}(o))in n?Object.defineProperty(n,o,{value:a,enumerable:!0,configurable:!0,writable:!0}):n[o]=a}):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):G(Object(e)).forEach(function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))})}return n}({},n),e=t.appearance,a=t.content,r=t.duration,i=void 0===r?null:r,s=t.isClosable,l=void 0===s||s;o(function(n){var t,r=++K;return[].concat(function(n){if(Array.isArray(n))return H(n)}(t=n.slice(n.length))||function(n){if("undefined"!=typeof Symbol&&null!=n[Symbol.iterator]||null!=n["@@iterator"])return Array.from(n)}(t)||R(t)||function(){throw TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[{id:r,appearance:e,content:a,duration:i,isClosable:l,onClose:function(){o(function(n){return n.filter(function(n){return n.id!==r})})}}])})},r=function(){o([])},p=function(n){return function(t){var e={success:j.createElement(j.Fragment,null,j.createElement(l.Z,null,"This is a success message."),j.createElement(l.Z,null,"The toast will be automatically dismissed after 5 seconds.")),info:j.createElement(j.Fragment,null,j.createElement(l.Z,null,"This is an info message."),j.createElement(l.Z,null,"The toast will remain visible until the user dismisses it.")),warning:j.createElement(j.Fragment,null,j.createElement(l.Z,null,"This is a warning message."),j.createElement(l.Z,null,"The toast will remain visible until the user dismisses it.")),error:j.createElement(j.Fragment,null,j.createElement(l.Z,null,"This is an error message."),j.createElement(l.Z,null,"The toast will remain visible until the user dismisses it."))}[n];a({appearance:n,content:e,duration:"success"===n?5e3:void 0})}};return j.createElement(j.Fragment,null,j.createElement(i.Z,{justifyContent:"space-between",columnGap:"4x"},j.createElement(i.Z,{flexWrap:"wrap",columnGap:"2x",rowGap:"2x"},j.createElement(c.Z,{variant:"secondary",onClick:p("success")},"Show Success Message"),j.createElement(c.Z,{variant:"secondary",onClick:p("info")},"Show Info Message"),j.createElement(c.Z,{variant:"secondary",onClick:p("warning")},"Show Warning Message"),j.createElement(c.Z,{variant:"secondary",onClick:p("error")},"Show Error Message")),j.createElement(u.Z,null,j.createElement(c.Z,{variant:"secondary",onClick:function(){r()}},j.createElement(w.Z,null),j.createElement(d.Z,{width:"2x"}),"Close"))),j.createElement(h.Z,{my:"4x"}),j.createElement(i.Z,{columnGap:"4x"},j.createElement(F.Z,{margin:0,minHeight:400,minWidth:320,width:"50%"},j.createElement(X,null,j.createElement(S.Z,{component:null},e.map(function(t){return j.createElement(m.Z,{key:null==t?void 0:t.id,in:!0,unmountOnExit:!0},j.createElement(f.Z,{duration:null==t?void 0:t.duration,onClose:null==t?void 0:t.onClose},j.createElement(x.Z,{appearance:null==t?void 0:t.appearance,isClosable:null==t?void 0:t.isClosable,onClose:null==t?void 0:t.onClose,sx:{mb:"2x",minWidth:280,width:"fit-content",boxShadow:n.shadow.thin}},null==t?void 0:t.content)))}))),j.createElement(N.Z,null,"Modal"),j.createElement(L.Z,null,j.createElement(b.Z,{direction:"column",spacing:"4x"},j.createElement(g.Z,{width:160}),j.createElement(g.Z,{width:240}),j.createElement(g.Z,{width:240}))),j.createElement(P.Z,null,j.createElement(v.Z,{templateColumns:"repeat(2, 1fr)",columnGap:"2x"},j.createElement(c.Z,{variant:"primary"},"OK"),j.createElement(c.Z,null,"Cancel"))))))},$=e(14594),Y=e(91269),Q=e(65019);function q(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}var V=function(){var n,t=function(n){if(Array.isArray(n))return n}(n=(0,Q.Z)(!0))||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{for(r=(e=e.call(n)).next;!(l=(o=r.call(e)).done)&&(s.push(o.value),2!==s.length);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,2)||function(n,t){if(n){if("string"==typeof n)return q(n,2);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return q(n,2)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),e=t[0],o=t[1];return j.createElement($.Z,{in:e,unmountOnExit:!0},j.createElement(x.Z,{appearance:"success",onClose:o,width:320},j.createElement(l.Z,{pr:"10x"},"This is a success toast."),j.createElement(Y.Z,{top:10,right:8,position:"absolute","data-test":"toast-close-button"})))};function J(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}var nn=function(){var n,t=function(n){if(Array.isArray(n))return n}(n=(0,Q.Z)(!0))||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{for(r=(e=e.call(n)).next;!(l=(o=r.call(e)).done)&&(s.push(o.value),2!==s.length);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,2)||function(n,t){if(n){if("string"==typeof n)return J(n,2);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return J(n,2)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),e=t[0],o=t[1];return j.createElement($.Z,{in:e,unmountOnExit:!0},j.createElement(x.Z,{appearance:"success",isClosable:!0,onClose:o,width:320},j.createElement(l.Z,null,"This is a success toast.")))},nt=e(40596),ne=e(78727),no=e(64864);function na(n){return(na="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function nr(n,t,e){var o;return(o=function(n,t){if("object"!==na(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!==na(o))return o;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(t,"string"),(t="symbol"===na(o)?o:String(o))in n)?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function ni(){return(ni=Object.assign?Object.assign.bind():function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o])}return n}).apply(this,arguments)}function ns(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{if(r=(e=e.call(n)).next,0===t){if(Object(e)!==e)return;l=!1}else for(;!(l=(o=r.call(e)).done)&&(s.push(o.value),s.length!==t);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,t)||function(n,t){if(n){if("string"==typeof n)return nl(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return nl(n,t)}}(n,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function nl(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}var nc=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,appearance:"success"},"This is a success toast.")},nu=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,appearance:"success",icon:j.createElement(no.Z,{color:"gray:80"})},"This is a success toast.")},nd=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,appearance:"success",icon:!1},"This is a success toast.")},nh=function(n){var t=ns((0,nt.Z)(),1)[0],e=ns((0,s.Z)({colorMode:t}),1)[0].shadow.thin;return j.createElement(u.Z,ni({fontSize:"sm",lineHeight:"sm",textAlign:"left",boxShadow:e},n))},np=function(){var n=(0,ne.Z)();return j.createElement(b.Z,{direction:"column",spacing:"6x"},[nc,nu,nd].map(function(t,e){return j.createElement(u.Z,{key:e},j.createElement(u.Z,{mb:"4x"},j.createElement(c.Z,{variant:"secondary",onClick:function(){n(function(n){var e=n.onClose,o=nr(nr({},n.placement.includes("top")?"pb":"pt","2x"),"width",320);return j.createElement(nh,{sx:o},j.createElement(t,{onClose:e}))},{placement:"bottom-right",duration:5e3})}},"Show")),j.createElement(nh,null,j.createElement(t,null)))}))};function nm(n){return(nm="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function nf(n,t,e){var o;return(o=function(n,t){if("object"!==nm(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!==nm(o))return o;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(t,"string"),(t="symbol"===nm(o)?o:String(o))in n)?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function nx(){return(nx=Object.assign?Object.assign.bind():function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o])}return n}).apply(this,arguments)}function ny(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{if(r=(e=e.call(n)).next,0===t){if(Object(e)!==e)return;l=!1}else for(;!(l=(o=r.call(e)).done)&&(s.push(o.value),s.length!==t);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,t)||function(n,t){if(n){if("string"==typeof n)return nT(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return nT(n,t)}}(n,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function nT(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}var nb=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,appearance:"success"},"This is a success toast.")},ng=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,appearance:"info"},"This is an info toast.")},nC=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,appearance:"warning"},"This is a warning toast.")},nv=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,appearance:"error"},"This is an error toast.")},nw=function(n){var t=ny((0,nt.Z)(),1)[0],e=ny((0,s.Z)({colorMode:t}),1)[0].shadow.thin;return j.createElement(u.Z,nx({fontSize:"sm",lineHeight:"sm",textAlign:"left",boxShadow:e},n))},nj=function(){var n=(0,ne.Z)();return j.createElement(b.Z,{direction:"column",spacing:"6x"},[nb,ng,nC,nv].map(function(t,e){return j.createElement(u.Z,{key:e},j.createElement(c.Z,{variant:"secondary",onClick:function(){n(function(n){var e=n.onClose,o=nf(nf({},n.placement.includes("top")?"pb":"pt","2x"),"width",320);return j.createElement(nw,{sx:o},j.createElement(t,{onClose:e}))},{placement:"bottom-right",duration:5e3})}},"Show"),j.createElement(nw,{mt:"4x"},j.createElement(t,null)))}))},nS=e(19088);function nZ(n){return(nZ="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function nk(n,t,e){var o;return(o=function(n,t){if("object"!==nZ(n)||null===n)return n;var e=n[Symbol.toPrimitive];if(void 0!==e){var o=e.call(n,t||"default");if("object"!==nZ(o))return o;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(n)}(t,"string"),(t="symbol"===nZ(o)?o:String(o))in n)?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function nB(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{if(r=(e=e.call(n)).next,0===t){if(Object(e)!==e)return;l=!1}else for(;!(l=(o=r.call(e)).done)&&(s.push(o.value),s.length!==t);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,t)||function(n,t){if(n){if("string"==typeof n)return nE(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return nE(n,t)}}(n,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function nE(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}function nA(){return(nA=Object.assign?Object.assign.bind():function(n){for(var t=1;t<arguments.length;t++){var e=arguments[t];for(var o in e)Object.prototype.hasOwnProperty.call(e,o)&&(n[o]=e[o])}return n}).apply(this,arguments)}var nO=(0,j.forwardRef)(function(n,t){return j.createElement(c.Z,nA({ref:t,variant:"secondary",borderColor:"black:primary",color:"black:primary",sx:{":active":{color:"black:primary"},":focus":{color:"black:primary"},":hover":{background:"rgba(0, 0, 0, 0.12)",color:"black:primary"},":hover:not(:focus)":{boxShadow:"none"}}},n))});nO.displayName="ActionButton";var nI=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t},j.createElement(l.Z,null,"This is a toast notification."))},nM=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,py:"4x"},j.createElement(i.Z,{alignItems:"flex-start"},j.createElement(u.Z,{bg:"gray:40",height:48,minWidth:48}),j.createElement(d.Z,{minWidth:"4x"}),j.createElement(l.Z,null,"This is a toast notification.")))},nW=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,py:"4x"},j.createElement(u.Z,{mb:"2x"},j.createElement(l.Z,{fontWeight:"bold"},"Notification Title")),j.createElement(u.Z,{mr:"-10x"},j.createElement(l.Z,null,"This is a toast notification.")))},nF=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,py:"4x"},j.createElement(u.Z,{mb:"6x"},j.createElement(l.Z,null,"This is a toast notification.")),j.createElement(i.Z,{justifyContent:"flex-end",mr:"-10x"},j.createElement(nO,{size:"sm"},"Action Button")))},nN=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,py:"4x"},j.createElement(u.Z,{mb:"6x"},j.createElement(l.Z,null,"This is a toast notification.")),j.createElement(i.Z,{justifyContent:"flex-end",mr:"-10x"},j.createElement(nS.Z,null,"Action Link")))},nL=function(n){var t=n.onClose;return j.createElement(x.Z,{isClosable:!0,onClose:t,py:"4x"},j.createElement(u.Z,{mb:"2x"},j.createElement(l.Z,{fontWeight:"bold"},"Notification Title")),j.createElement(i.Z,{alignItems:"flex-start",mb:"6x"},j.createElement(u.Z,{bg:"gray:40",height:48,minWidth:48}),j.createElement(d.Z,{minWidth:"4x"}),j.createElement(l.Z,null,"This is a toast notification.")),j.createElement(i.Z,{justifyContent:"flex-end",mr:"-10x"},j.createElement(nO,{size:"sm"},"Action Button")))},nP=function(n){var t=nB((0,nt.Z)(),1)[0],e=nB((0,s.Z)({colorMode:t}),1)[0].shadow.thin;return j.createElement(u.Z,nA({fontSize:"sm",lineHeight:"sm",textAlign:"left",boxShadow:e},n))},nD=function(){var n=(0,ne.Z)(),t=function(t){return function(){n(function(n){var e=n.onClose,o=nk(nk({},n.placement.includes("top")?"pb":"pt","2x"),"width",320);return j.createElement(nP,{sx:o},j.createElement(t,{onClose:e}))},{placement:"bottom-right",duration:5e3})}};return j.createElement(j.Fragment,null,j.createElement(b.Z,{direction:"column",spacing:"6x"},j.createElement(u.Z,null,j.createElement(c.Z,{variant:"secondary",onClick:t(nI)},"Show"),j.createElement(nP,{mt:"4x"},j.createElement(nI,null))),j.createElement(u.Z,null,j.createElement(c.Z,{variant:"secondary",onClick:t(nM)},"Show"),j.createElement(nP,{mt:"4x"},j.createElement(nM,null))),j.createElement(u.Z,null,j.createElement(c.Z,{variant:"secondary",onClick:t(nW)},"Show"),j.createElement(nP,{mt:"4x"},j.createElement(nW,null))),j.createElement(u.Z,null,j.createElement(c.Z,{variant:"secondary",onClick:t(nF)},"Show"),j.createElement(nP,{mt:"4x"},j.createElement(nF,null))),j.createElement(u.Z,null,j.createElement(c.Z,{variant:"secondary",onClick:t(nN)},"Show"),j.createElement(nP,{mt:"4x"},j.createElement(nN,null))),j.createElement(u.Z,null,j.createElement(c.Z,{variant:"secondary",onClick:t(nL)},"Show"),j.createElement(nP,{mt:"4x"},j.createElement(nL,null)))))};function nG(n){var t=Object.assign({div:"div",h1:"h1",p:"p",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",code:"code",h3:"h3",ul:"ul",li:"li",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,a.ah)(),n.components);return(0,o.jsxs)(t.div,{className:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n",(0,o.jsx)(t.h1,{id:"toast",children:"Toast"}),"\n",(0,o.jsx)(t.p,{children:"A toast notification is a small popup that appears at either side of the screen, and disappears after a short time. The toast notification is used to notify the user of something that has happened, but it is not intended to be used as a permanent message."}),"\n",(0,o.jsxs)(t.h2,{id:"import",children:["Import",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-js",children:"import {\n  Toast,\n  ToastCloseButton,\n  ToastController,\n  ToastTransition,\n} from '@tonic-ui/react';\n"})}),"\n",(0,o.jsxs)(t.h2,{id:"usage",children:["Usage",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.h3,{id:"layout",children:["Layout",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#layout",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Increase the vertical padding space to ",(0,o.jsx)(t.code,{children:"4x"})," (or ",(0,o.jsx)(t.code,{children:"1rem"}),") for a multiline paragraph."]}),"\n",(0,o.jsxs)(t.li,{children:["Set the minimum horizontal margin space to ",(0,o.jsx)(t.code,{children:"4x"})," (or ",(0,o.jsx)(t.code,{children:"1rem"}),") before the close button."]}),"\n",(0,o.jsxs)(t.li,{children:["Set the minimum horizontal margin space to ",(0,o.jsx)(t.code,{children:"4x"})," (or ",(0,o.jsx)(t.code,{children:"1rem"}),") between the icon and the content."]}),"\n",(0,o.jsxs)(t.li,{children:["Apply vertical margin space with ",(0,o.jsx)(t.code,{children:"2x"})," (or ",(0,o.jsx)(t.code,{children:".5rem"}),") between the title and its content."]}),"\n",(0,o.jsxs)(t.li,{children:["Apply vertical margin space with ",(0,o.jsx)(t.code,{children:"6x"})," (or ",(0,o.jsx)(t.code,{children:"1.5rem"}),") between the end of the content and the action button (or action link)."]}),"\n"]}),"\n",(0,o.jsx)(r.Z,Object.assign({},{component:nD,file:{data:'import {\n  Box,\n  Button,\n  Flex,\n  Link,\n  Space,\n  Stack,\n  Text,\n  Toast,\n  useColorMode,\n  useColorStyle,\n  useToastManager,\n} from \'@tonic-ui/react\';\nimport React, { forwardRef } from \'react\';\n\nconst ActionButton = forwardRef((props, ref) => (\n  <Button\n    ref={ref}\n    variant="secondary"\n    borderColor="black:primary"\n    color="black:primary"\n    sx={{\n      \':active\': {\n        color: \'black:primary\',\n      },\n      \':focus\': {\n        color: \'black:primary\',\n      },\n      \':hover\': {\n        background: \'rgba(0, 0, 0, 0.12)\',\n        color: \'black:primary\',\n      },\n      \':hover:not(:focus)\': {\n        boxShadow: \'none\',\n      },\n    }}\n    {...props}\n  />\n));\nActionButton.displayName = \'ActionButton\';\n\nconst ToastSimple = ({ onClose }) => (\n  <Toast isClosable onClose={onClose}>\n    <Text>This is a toast notification.</Text>\n  </Toast>\n);\n\nconst ToastWithIcon = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Flex alignItems="flex-start">\n      <Box\n        bg="gray:40"\n        height={48}\n        minWidth={48}\n      />\n      <Space minWidth="4x" />\n      <Text>This is a toast notification.</Text>\n    </Flex>\n  </Toast>\n);\n\nconst ToastWithTitle = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Box mb="2x">\n      <Text fontWeight="bold">Notification Title</Text>\n    </Box>\n    <Box mr="-10x">\n      <Text>This is a toast notification.</Text>\n    </Box>\n  </Toast>\n);\n\nconst ToastWithActionButton = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Box mb="6x">\n      <Text>This is a toast notification.</Text>\n    </Box>\n    <Flex justifyContent="flex-end" mr="-10x">\n      <ActionButton\n        // See above for the ActionButton component\n        size="sm"\n      >\n        Action Button\n      </ActionButton>\n    </Flex>\n  </Toast>\n);\n\nconst ToastWithActionLink = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Box mb="6x">\n      <Text>This is a toast notification.</Text>\n    </Box>\n    <Flex justifyContent="flex-end" mr="-10x">\n      <Link>Action Link</Link>\n    </Flex>\n  </Toast>\n);\n\nconst ToastWithAllTogether = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Box mb="2x">\n      <Text fontWeight="bold">Notification Title</Text>\n    </Box>\n    <Flex alignItems="flex-start" mb="6x">\n      <Box\n        bg="gray:40"\n        height={48}\n        minWidth={48}\n      />\n      <Space minWidth="4x" />\n      <Text>This is a toast notification.</Text>\n    </Flex>\n    <Flex justifyContent="flex-end" mr="-10x">\n      <ActionButton\n        // See above for the ActionButton component\n        size="sm"\n      >\n        Action Button\n      </ActionButton>\n    </Flex>\n  </Toast>\n);\n\nconst ToastLayout = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const boxShadow = colorStyle.shadow.thin;\n\n  return (\n    <Box\n      fontSize="sm"\n      lineHeight="sm"\n      textAlign="left"\n      boxShadow={boxShadow}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const toast = useToastManager();\n  const handleClickBy = (ToastNotification) => () => {\n    toast(({ onClose, placement }) => {\n      const isTop = placement.includes(\'top\');\n      const toastSpacingKey = isTop ? \'pb\' : \'pt\';\n      const styleProps = {\n        [toastSpacingKey]: \'2x\',\n        width: 320,\n      };\n\n      return (\n        <ToastLayout sx={styleProps}>\n          <ToastNotification onClose={onClose} />\n        </ToastLayout>\n      );\n    }, {\n      placement: \'bottom-right\',\n      duration: 5000,\n    });\n  };\n\n  return (\n    <>\n      <Stack direction="column" spacing="6x">\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastSimple)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastSimple />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithIcon)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithIcon />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithTitle)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithTitle />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithActionButton)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithActionButton />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithActionLink)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithActionLink />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithAllTogether)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithAllTogether />\n          </ToastLayout>\n        </Box>\n      </Stack>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/toast/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  Button,\n  Flex,\n  Link,\n  Space,\n  Stack,\n  Text,\n  Toast,\n  useColorMode,\n  useColorStyle,\n  useToastManager,\n} from \'@tonic-ui/react\';\nimport React, { forwardRef } from \'react\';\n\nconst ActionButton = forwardRef((props, ref) => (\n  <Button\n    ref={ref}\n    variant="secondary"\n    borderColor="black:primary"\n    color="black:primary"\n    sx={{\n      \':active\': {\n        color: \'black:primary\',\n      },\n      \':focus\': {\n        color: \'black:primary\',\n      },\n      \':hover\': {\n        background: \'rgba(0, 0, 0, 0.12)\',\n        color: \'black:primary\',\n      },\n      \':hover:not(:focus)\': {\n        boxShadow: \'none\',\n      },\n    }}\n    {...props}\n  />\n));\nActionButton.displayName = \'ActionButton\';\n\nconst ToastSimple = ({ onClose }) => (\n  <Toast isClosable onClose={onClose}>\n    <Text>This is a toast notification.</Text>\n  </Toast>\n);\n\nconst ToastWithIcon = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Flex alignItems="flex-start">\n      <Box\n        bg="gray:40"\n        height={48}\n        minWidth={48}\n      />\n      <Space minWidth="4x" />\n      <Text>This is a toast notification.</Text>\n    </Flex>\n  </Toast>\n);\n\nconst ToastWithTitle = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Box mb="2x">\n      <Text fontWeight="bold">Notification Title</Text>\n    </Box>\n    <Box mr="-10x">\n      <Text>This is a toast notification.</Text>\n    </Box>\n  </Toast>\n);\n\nconst ToastWithActionButton = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Box mb="6x">\n      <Text>This is a toast notification.</Text>\n    </Box>\n    <Flex justifyContent="flex-end" mr="-10x">\n      <ActionButton\n        // See above for the ActionButton component\n        size="sm"\n      >\n        Action Button\n      </ActionButton>\n    </Flex>\n  </Toast>\n);\n\nconst ToastWithActionLink = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Box mb="6x">\n      <Text>This is a toast notification.</Text>\n    </Box>\n    <Flex justifyContent="flex-end" mr="-10x">\n      <Link>Action Link</Link>\n    </Flex>\n  </Toast>\n);\n\nconst ToastWithAllTogether = ({ onClose }) => (\n  <Toast isClosable onClose={onClose} py="4x">\n    <Box mb="2x">\n      <Text fontWeight="bold">Notification Title</Text>\n    </Box>\n    <Flex alignItems="flex-start" mb="6x">\n      <Box\n        bg="gray:40"\n        height={48}\n        minWidth={48}\n      />\n      <Space minWidth="4x" />\n      <Text>This is a toast notification.</Text>\n    </Flex>\n    <Flex justifyContent="flex-end" mr="-10x">\n      <ActionButton\n        // See above for the ActionButton component\n        size="sm"\n      >\n        Action Button\n      </ActionButton>\n    </Flex>\n  </Toast>\n);\n\nconst ToastLayout = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const boxShadow = colorStyle.shadow.thin;\n\n  return (\n    <Box\n      fontSize="sm"\n      lineHeight="sm"\n      textAlign="left"\n      boxShadow={boxShadow}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const toast = useToastManager();\n  const handleClickBy = (ToastNotification) => () => {\n    toast(({ onClose, placement }) => {\n      const isTop = placement.includes(\'top\');\n      const toastSpacingKey = isTop ? \'pb\' : \'pt\';\n      const styleProps = {\n        [toastSpacingKey]: \'2x\',\n        width: 320,\n      };\n\n      return (\n        <ToastLayout sx={styleProps}>\n          <ToastNotification onClose={onClose} />\n        </ToastLayout>\n      );\n    }, {\n      placement: \'bottom-right\',\n      duration: 5000,\n    });\n  };\n\n  return (\n    <>\n      <Stack direction="column" spacing="6x">\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastSimple)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastSimple />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithIcon)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithIcon />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithTitle)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithTitle />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithActionButton)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithActionButton />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithActionLink)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithActionLink />\n          </ToastLayout>\n        </Box>\n        <Box>\n          <Button\n            variant="secondary"\n            onClick={handleClickBy(ToastWithAllTogether)}\n          >\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastWithAllTogether />\n          </ToastLayout>\n        </Box>\n      </Stack>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(t.h3,{id:"appearances",children:["Appearances",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#appearances",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.p,{children:["You can control the appearance of a toast notification. If specified, the value can be one of ",(0,o.jsx)(t.code,{children:"success"}),", ",(0,o.jsx)(t.code,{children:"info"}),", ",(0,o.jsx)(t.code,{children:"warning"}),", or ",(0,o.jsx)(t.code,{children:"error"}),"."]}),"\n",(0,o.jsx)(r.Z,Object.assign({},{component:nj,file:{data:'import {\n  Box,\n  Button,\n  Stack,\n  Toast,\n  useColorMode,\n  useColorStyle,\n  useToastManager,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst ToastSuccess = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="success"\n  >\n    This is a success toast.\n  </Toast>\n);\n\nconst ToastInfo = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="info"\n  >\n    This is an info toast.\n  </Toast>\n);\n\nconst ToastWarning = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="warning"\n  >\n    This is a warning toast.\n  </Toast>\n);\n\nconst ToastError = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="error"\n  >\n    This is an error toast.\n  </Toast>\n);\n\nconst ToastLayout = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const boxShadow = colorStyle.shadow.thin;\n\n  return (\n    <Box\n      fontSize="sm"\n      lineHeight="sm"\n      textAlign="left"\n      boxShadow={boxShadow}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const toast = useToastManager();\n  const handleClickBy = (ToastNotification) => () => {\n    toast(({ onClose, placement }) => {\n      const isTop = placement.includes(\'top\');\n      const toastSpacingKey = isTop ? \'pb\' : \'pt\';\n      const styleProps = {\n        [toastSpacingKey]: \'2x\',\n        width: 320,\n      };\n\n      return (\n        <ToastLayout sx={styleProps}>\n          <ToastNotification onClose={onClose} />\n        </ToastLayout>\n      );\n    }, {\n      placement: \'bottom-right\',\n      duration: 5000,\n    });\n  };\n  const toastComponents = [\n    ToastSuccess,\n    ToastInfo,\n    ToastWarning,\n    ToastError,\n  ];\n\n  return (\n    <Stack direction="column" spacing="6x">\n      {toastComponents.map((ToastNotification, idx) => (\n        <Box key={idx}>\n          <Button variant="secondary" onClick={handleClickBy(ToastNotification)}>\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastNotification />\n          </ToastLayout>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nexport default App;',path:"pages/components/toast/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  Button,\n  Stack,\n  Toast,\n  useColorMode,\n  useColorStyle,\n  useToastManager,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst ToastSuccess = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="success"\n  >\n    This is a success toast.\n  </Toast>\n);\n\nconst ToastInfo = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="info"\n  >\n    This is an info toast.\n  </Toast>\n);\n\nconst ToastWarning = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="warning"\n  >\n    This is a warning toast.\n  </Toast>\n);\n\nconst ToastError = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="error"\n  >\n    This is an error toast.\n  </Toast>\n);\n\nconst ToastLayout = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const boxShadow = colorStyle.shadow.thin;\n\n  return (\n    <Box\n      fontSize="sm"\n      lineHeight="sm"\n      textAlign="left"\n      boxShadow={boxShadow}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const toast = useToastManager();\n  const handleClickBy = (ToastNotification) => () => {\n    toast(({ onClose, placement }) => {\n      const isTop = placement.includes(\'top\');\n      const toastSpacingKey = isTop ? \'pb\' : \'pt\';\n      const styleProps = {\n        [toastSpacingKey]: \'2x\',\n        width: 320,\n      };\n\n      return (\n        <ToastLayout sx={styleProps}>\n          <ToastNotification onClose={onClose} />\n        </ToastLayout>\n      );\n    }, {\n      placement: \'bottom-right\',\n      duration: 5000,\n    });\n  };\n  const toastComponents = [\n    ToastSuccess,\n    ToastInfo,\n    ToastWarning,\n    ToastError,\n  ];\n\n  return (\n    <Stack direction="column" spacing="6x">\n      {toastComponents.map((ToastNotification, idx) => (\n        <Box key={idx}>\n          <Button variant="secondary" onClick={handleClickBy(ToastNotification)}>\n            Show\n          </Button>\n          <ToastLayout mt="4x">\n            <ToastNotification />\n          </ToastLayout>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(t.h3,{id:"icons",children:["Icons",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#icons",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"icon"})," prop allows you to override the default icon for the specified appearance."]}),"\n",(0,o.jsxs)(t.p,{children:["Setting the ",(0,o.jsx)(t.code,{children:"icon"})," prop to ",(0,o.jsx)(t.code,{children:"false"})," will remove the icon altogether."]}),"\n",(0,o.jsx)(r.Z,Object.assign({},{component:np,file:{data:'import { Box, Button, Stack, Toast, useColorMode, useColorStyle, useToastManager } from \'@tonic-ui/react\';\nimport { CheckCircleOIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst ToastWithDefaultIcon = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="success"\n  >\n    This is a success toast.\n  </Toast>\n);\n\nconst ToastWithProprietaryIcon = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="success"\n    icon={<CheckCircleOIcon color="gray:80" />}\n  >\n    This is a success toast.\n  </Toast>\n);\n\nconst ToastWithoutIcon = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="success"\n    icon={false}\n  >\n    This is a success toast.\n  </Toast>\n);\n\nconst ToastLayout = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const boxShadow = colorStyle.shadow.thin;\n\n  return (\n    <Box\n      fontSize="sm"\n      lineHeight="sm"\n      textAlign="left"\n      boxShadow={boxShadow}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const toast = useToastManager();\n  const handleClickBy = (ToastNotification) => () => {\n    toast(({ onClose, placement }) => {\n      const isTop = placement.includes(\'top\');\n      const toastSpacingKey = isTop ? \'pb\' : \'pt\';\n      const styleProps = {\n        [toastSpacingKey]: \'2x\',\n        width: 320,\n      };\n\n      return (\n        <ToastLayout sx={styleProps}>\n          <ToastNotification onClose={onClose} />\n        </ToastLayout>\n      );\n    }, {\n      placement: \'bottom-right\',\n      duration: 5000,\n    });\n  };\n  const alertToasts = [\n    ToastWithDefaultIcon,\n    ToastWithProprietaryIcon,\n    ToastWithoutIcon,\n  ];\n\n  return (\n    <Stack direction="column" spacing="6x">\n      {alertToasts.map((ToastNotification, idx) => (\n        <Box key={idx}>\n          <Box mb="4x">\n            <Button variant="secondary" onClick={handleClickBy(ToastNotification)}>\n              Show\n            </Button>\n          </Box>\n          <ToastLayout>\n            <ToastNotification />\n          </ToastLayout>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nexport default App;',path:"pages/components/toast/index.page.mdx"},sandbox:{files:{},raw:'import { Box, Button, Stack, Toast, useColorMode, useColorStyle, useToastManager } from \'@tonic-ui/react\';\nimport { CheckCircleOIcon } from \'@tonic-ui/react-icons\';\nimport React from \'react\';\n\nconst ToastWithDefaultIcon = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="success"\n  >\n    This is a success toast.\n  </Toast>\n);\n\nconst ToastWithProprietaryIcon = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="success"\n    icon={<CheckCircleOIcon color="gray:80" />}\n  >\n    This is a success toast.\n  </Toast>\n);\n\nconst ToastWithoutIcon = ({ onClose }) => (\n  <Toast\n    isClosable\n    onClose={onClose}\n    appearance="success"\n    icon={false}\n  >\n    This is a success toast.\n  </Toast>\n);\n\nconst ToastLayout = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const boxShadow = colorStyle.shadow.thin;\n\n  return (\n    <Box\n      fontSize="sm"\n      lineHeight="sm"\n      textAlign="left"\n      boxShadow={boxShadow}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const toast = useToastManager();\n  const handleClickBy = (ToastNotification) => () => {\n    toast(({ onClose, placement }) => {\n      const isTop = placement.includes(\'top\');\n      const toastSpacingKey = isTop ? \'pb\' : \'pt\';\n      const styleProps = {\n        [toastSpacingKey]: \'2x\',\n        width: 320,\n      };\n\n      return (\n        <ToastLayout sx={styleProps}>\n          <ToastNotification onClose={onClose} />\n        </ToastLayout>\n      );\n    }, {\n      placement: \'bottom-right\',\n      duration: 5000,\n    });\n  };\n  const alertToasts = [\n    ToastWithDefaultIcon,\n    ToastWithProprietaryIcon,\n    ToastWithoutIcon,\n  ];\n\n  return (\n    <Stack direction="column" spacing="6x">\n      {alertToasts.map((ToastNotification, idx) => (\n        <Box key={idx}>\n          <Box mb="4x">\n            <Button variant="secondary" onClick={handleClickBy(ToastNotification)}>\n              Show\n            </Button>\n          </Box>\n          <ToastLayout>\n            <ToastNotification />\n          </ToastLayout>\n        </Box>\n      ))}\n    </Stack>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(t.h3,{id:"how-to-close-a-toast",children:["How to close a toast",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#how-to-close-a-toast",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.h4,{id:"using-the-isclosable-prop",children:["Using the ",(0,o.jsx)(t.code,{children:"isClosable"})," prop",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-isclosable-prop",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"isClosable"})," prop is used to make a toast closable by adding a close button to it. By default, the value of ",(0,o.jsx)(t.code,{children:"isClosable"})," is false. To make a toast closable, set ",(0,o.jsx)(t.code,{children:"isClosable"})," to true."]}),"\n",(0,o.jsx)(t.pre,{disabled:!0,children:(0,o.jsx)(t.code,{className:"language-jsx",children:'<Toast appearance="success" isClosable onClose={onClose} width={320}>\n  <Text>This is a success toast.</Text>\n</Toast>\n'})}),"\n",(0,o.jsx)(r.Z,Object.assign({},{component:nn,file:{data:"import {\n  Collapse,\n  Text,\n  Toast,\n} from '@tonic-ui/react';\nimport {\n  useToggle,\n} from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [isOpen, onClose] = useToggle(true);\n\n  return (\n    <Collapse in={isOpen} unmountOnExit>\n      <Toast appearance=\"success\" isClosable onClose={onClose} width={320}>\n        <Text>This is a success toast.</Text>\n      </Toast>\n    </Collapse>\n  );\n};\n\nexport default App;",path:"pages/components/toast/index.page.mdx"},sandbox:{files:{},raw:"import {\n  Collapse,\n  Text,\n  Toast,\n} from '@tonic-ui/react';\nimport {\n  useToggle,\n} from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [isOpen, onClose] = useToggle(true);\n\n  return (\n    <Collapse in={isOpen} unmountOnExit>\n      <Toast appearance=\"success\" isClosable onClose={onClose} width={320}>\n        <Text>This is a success toast.</Text>\n      </Toast>\n    </Collapse>\n  );\n};\n\nexport default App;",title:"Tonic UI"}})),"\n",(0,o.jsxs)(t.h4,{id:"using-the-toastclosebutton-component",children:["Using the ",(0,o.jsx)(t.code,{children:"ToastCloseButton"})," component",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-toastclosebutton-component",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"ToastCloseButton"})," component provides an easy way to add a close button to a toast. This button is specifically designed to handle closing the toast, so you don't need to write any additional code to handle it. If you use ",(0,o.jsx)(t.code,{children:"ToastCloseButton"}),", you can omit the ",(0,o.jsx)(t.code,{children:"isClosable"})," prop in the ",(0,o.jsx)(t.code,{children:"Toast"})," component."]}),"\n",(0,o.jsxs)(t.p,{children:["Besides the default functionality of the ",(0,o.jsx)(t.code,{children:"ToastCloseButton"}),", you can also pass additional props, such as ",(0,o.jsx)(t.code,{children:"data-test"})," or ",(0,o.jsx)(t.code,{children:"data-tracking"})," attributes, to the ",(0,o.jsx)(t.code,{children:"ToastCloseButton"})," component as needed."]}),"\n",(0,o.jsx)(t.pre,{disabled:!0,children:(0,o.jsx)(t.code,{className:"language-jsx",children:'<Toast appearance="success" onClose={onClose} width={320}>\n  <Text pr="10x">This is a success toast.</Text>\n  <ToastCloseButton top={10} right={8} position="absolute" data-test="toast-close-button" />\n</Toast>\n'})}),"\n",(0,o.jsxs)(t.p,{children:["When using the ",(0,o.jsx)(t.code,{children:"ToastCloseButton"})," component, be sure to manually adjust its position. In the example above, the close button is positioned absolutely, with 10 pixels from the top and 8 pixels from the right of its parent element."]}),"\n",(0,o.jsx)(r.Z,Object.assign({},{component:V,file:{data:'import {\n  Collapse,\n  Text,\n  Toast,\n  ToastCloseButton,\n} from \'@tonic-ui/react\';\nimport {\n  useToggle,\n} from \'@tonic-ui/react-hooks\';\nimport React from \'react\';\n\nconst App = () => {\n  const [isOpen, onClose] = useToggle(true);\n\n  return (\n    <Collapse in={isOpen} unmountOnExit>\n      <Toast appearance="success" onClose={onClose} width={320}>\n        <Text pr="10x">This is a success toast.</Text>\n        <ToastCloseButton top={10} right={8} position="absolute" data-test="toast-close-button" />\n      </Toast>\n    </Collapse>\n  );\n};\n\nexport default App;',path:"pages/components/toast/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Collapse,\n  Text,\n  Toast,\n  ToastCloseButton,\n} from \'@tonic-ui/react\';\nimport {\n  useToggle,\n} from \'@tonic-ui/react-hooks\';\nimport React from \'react\';\n\nconst App = () => {\n  const [isOpen, onClose] = useToggle(true);\n\n  return (\n    <Collapse in={isOpen} unmountOnExit>\n      <Toast appearance="success" onClose={onClose} width={320}>\n        <Text pr="10x">This is a success toast.</Text>\n        <ToastCloseButton top={10} right={8} position="absolute" data-test="toast-close-button" />\n      </Toast>\n    </Collapse>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(t.h3,{id:"toast-on-modal-and-drawer",children:["Toast on modal and drawer",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#toast-on-modal-and-drawer",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(t.p,{children:"Toast is a useful way to provide feedback to the user about an action that has been completed or failed within a modal or drawer. They can be displayed on top of a modal or drawer without interrupting the user's workflow."}),"\n",(0,o.jsx)(t.p,{children:"The placement and size of toasts are typically determined by the design of the application in which they are being used. In general, they should be carefully considered to ensure that they are easy for the user to read and understand, without interfering with the rest of the user interface."}),"\n",(0,o.jsx)(t.p,{children:"In this example, the toast will be positioned 48 pixels from the top of the modal or drawer, and has a minimum width of 280 pixels. If the content of the toast message is wider than 280 pixels, the toast will expand to fit the content without exceeding 80% of the width of the modal or drawer in which it is being displayed."}),"\n",(0,o.jsxs)(t.p,{children:["To animate the toast when it is displayed or dismissed, you can use the ",(0,o.jsx)(t.code,{children:"ToastTransition"})," component. The ",(0,o.jsx)(t.code,{children:"ToastController"})," component can also be used to control the duration for which the toast will be displayed before it is automatically dismissed. This allows you to set a specific amount of time for the toast to be visible, ensuring that it does not interrupt the user's workflow for too long."]}),"\n",(0,o.jsx)(r.Z,Object.assign({},{component:U,file:{data:'import {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Grid,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Skeleton,\n  Space,\n  Stack,\n  Text,\n  Toast,\n  ToastController,\n  ToastTransition,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { CloseSIcon } from \'@tonic-ui/react-icons\';\nimport React, { useState } from \'react\';\nimport { TransitionGroup } from \'react-transition-group\';\n\nconst MAX_TOASTS = 1;\n\nconst CustomToastContainer = (props) => (\n  <Flex\n    flexDirection="column"\n    alignItems="center"\n    position="absolute"\n    top="12x"\n    left="50%"\n    transform="translateX(-50%)"\n    width="max-content"\n    maxWidth="80%" // up to 80% of the modal or drawer width\n    zIndex="toast"\n    {...props}\n  />\n);\n\nlet autoIncrementIndex = 0;\n\nconst App = () => {\n  const [colorStyle] = useColorStyle();\n  const [toasts, setToasts] = useState([]);\n\n  const notify = (options) => {\n    const {\n      appearance,\n      content,\n      duration = null,\n      isClosable = true,\n    } = { ...options };\n\n    setToasts(prevState => {\n      const id = ++autoIncrementIndex;\n      const onClose = () => {\n        setToasts(toasts => toasts.filter(x => x.id !== id));\n      };\n      // You can decide how many toasts you want to show at the same time depending on your use case\n      const nextState = [\n        ...prevState.slice(MAX_TOASTS > 1 ? -(MAX_TOASTS - 1) : prevState.length),\n        {\n          id,\n          appearance,\n          content,\n          duration,\n          isClosable,\n          onClose,\n        },\n      ];\n      return nextState;\n    });\n  };\n\n  const closeAll = () => {\n    setToasts([]);\n  };\n\n  const handleClickAddToastByAppearance = (appearance) => (event) => {\n    const content = {\n      success: (\n        <>\n          <Text>This is a success message.</Text>\n          <Text>The toast will be automatically dismissed after 5 seconds.</Text>\n        </>\n      ),\n      info: (\n        <>\n          <Text>This is an info message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n      warning: (\n        <>\n          <Text>This is a warning message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n      error: (\n        <>\n          <Text>This is an error message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n    }[appearance];\n\n    notify({\n      appearance,\n      content,\n      duration: (appearance === \'success\') ? 5000 : undefined,\n    });\n  };\n\n  const handleClickCloseToasts = () => {\n    closeAll();\n  };\n\n  return (<>\n    <Flex justifyContent="space-between" columnGap="4x">\n      <Flex flexWrap="wrap" columnGap="2x" rowGap="2x">\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'success\')}>\n          Show Success Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'info\')}>\n          Show Info Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'warning\')}>\n          Show Warning Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'error\')}>\n          Show Error Message\n        </Button>\n      </Flex>\n      <Box>\n        <Button variant="secondary" onClick={handleClickCloseToasts}>\n          <CloseSIcon />\n          <Space width="2x" />\n          Close\n        </Button>\n      </Box>\n    </Flex>\n    <Divider my="4x" />\n    <Flex columnGap="4x">\n      <ModalContent\n        margin={0}\n        minHeight={400}\n        minWidth={320}\n        width="50%"\n      >\n        <CustomToastContainer>\n          <TransitionGroup\n            component={null} // Pass in `component={null}` to avoid a wrapping `<div>` element\n          >\n            {toasts.map(toast => (\n              <ToastTransition\n                key={toast?.id}\n                in={true}\n                unmountOnExit\n              >\n                <ToastController\n                  duration={toast?.duration}\n                  onClose={toast?.onClose}\n                >\n                  <Toast\n                    appearance={toast?.appearance}\n                    isClosable={toast?.isClosable}\n                    onClose={toast?.onClose}\n                    sx={{\n                      mb: \'2x\',\n                      minWidth: 280, // The toast has a minimum width of 280 pixels\n                      width: \'fit-content\',\n                      boxShadow: colorStyle.shadow.thin,\n                    }}\n                  >\n                    {toast?.content}\n                  </Toast>\n                </ToastController>\n              </ToastTransition>\n            ))}\n          </TransitionGroup>\n        </CustomToastContainer>\n        <ModalHeader>\n          Modal\n        </ModalHeader>\n        <ModalBody>\n          <Stack direction="column" spacing="4x">\n            <Skeleton width={160} />\n            <Skeleton width={240} />\n            <Skeleton width={240} />\n          </Stack>\n        </ModalBody>\n        <ModalFooter>\n          <Grid templateColumns="repeat(2, 1fr)" columnGap="2x">\n            <Button variant="primary">\n              OK\n            </Button>\n            <Button>\n              Cancel\n            </Button>\n          </Grid>\n        </ModalFooter>\n      </ModalContent>\n    </Flex>\n  </>);\n};\n\nexport default App;',path:"pages/components/toast/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Grid,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Skeleton,\n  Space,\n  Stack,\n  Text,\n  Toast,\n  ToastController,\n  ToastTransition,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { CloseSIcon } from \'@tonic-ui/react-icons\';\nimport React, { useState } from \'react\';\nimport { TransitionGroup } from \'react-transition-group\';\n\nconst MAX_TOASTS = 1;\n\nconst CustomToastContainer = (props) => (\n  <Flex\n    flexDirection="column"\n    alignItems="center"\n    position="absolute"\n    top="12x"\n    left="50%"\n    transform="translateX(-50%)"\n    width="max-content"\n    maxWidth="80%" // up to 80% of the modal or drawer width\n    zIndex="toast"\n    {...props}\n  />\n);\n\nlet autoIncrementIndex = 0;\n\nconst App = () => {\n  const [colorStyle] = useColorStyle();\n  const [toasts, setToasts] = useState([]);\n\n  const notify = (options) => {\n    const {\n      appearance,\n      content,\n      duration = null,\n      isClosable = true,\n    } = { ...options };\n\n    setToasts(prevState => {\n      const id = ++autoIncrementIndex;\n      const onClose = () => {\n        setToasts(toasts => toasts.filter(x => x.id !== id));\n      };\n      // You can decide how many toasts you want to show at the same time depending on your use case\n      const nextState = [\n        ...prevState.slice(MAX_TOASTS > 1 ? -(MAX_TOASTS - 1) : prevState.length),\n        {\n          id,\n          appearance,\n          content,\n          duration,\n          isClosable,\n          onClose,\n        },\n      ];\n      return nextState;\n    });\n  };\n\n  const closeAll = () => {\n    setToasts([]);\n  };\n\n  const handleClickAddToastByAppearance = (appearance) => (event) => {\n    const content = {\n      success: (\n        <>\n          <Text>This is a success message.</Text>\n          <Text>The toast will be automatically dismissed after 5 seconds.</Text>\n        </>\n      ),\n      info: (\n        <>\n          <Text>This is an info message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n      warning: (\n        <>\n          <Text>This is a warning message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n      error: (\n        <>\n          <Text>This is an error message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n    }[appearance];\n\n    notify({\n      appearance,\n      content,\n      duration: (appearance === \'success\') ? 5000 : undefined,\n    });\n  };\n\n  const handleClickCloseToasts = () => {\n    closeAll();\n  };\n\n  return (<>\n    <Flex justifyContent="space-between" columnGap="4x">\n      <Flex flexWrap="wrap" columnGap="2x" rowGap="2x">\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'success\')}>\n          Show Success Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'info\')}>\n          Show Info Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'warning\')}>\n          Show Warning Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'error\')}>\n          Show Error Message\n        </Button>\n      </Flex>\n      <Box>\n        <Button variant="secondary" onClick={handleClickCloseToasts}>\n          <CloseSIcon />\n          <Space width="2x" />\n          Close\n        </Button>\n      </Box>\n    </Flex>\n    <Divider my="4x" />\n    <Flex columnGap="4x">\n      <ModalContent\n        margin={0}\n        minHeight={400}\n        minWidth={320}\n        width="50%"\n      >\n        <CustomToastContainer>\n          <TransitionGroup\n            component={null} // Pass in `component={null}` to avoid a wrapping `<div>` element\n          >\n            {toasts.map(toast => (\n              <ToastTransition\n                key={toast?.id}\n                in={true}\n                unmountOnExit\n              >\n                <ToastController\n                  duration={toast?.duration}\n                  onClose={toast?.onClose}\n                >\n                  <Toast\n                    appearance={toast?.appearance}\n                    isClosable={toast?.isClosable}\n                    onClose={toast?.onClose}\n                    sx={{\n                      mb: \'2x\',\n                      minWidth: 280, // The toast has a minimum width of 280 pixels\n                      width: \'fit-content\',\n                      boxShadow: colorStyle.shadow.thin,\n                    }}\n                  >\n                    {toast?.content}\n                  </Toast>\n                </ToastController>\n              </ToastTransition>\n            ))}\n          </TransitionGroup>\n        </CustomToastContainer>\n        <ModalHeader>\n          Modal\n        </ModalHeader>\n        <ModalBody>\n          <Stack direction="column" spacing="4x">\n            <Skeleton width={160} />\n            <Skeleton width={240} />\n            <Skeleton width={240} />\n          </Stack>\n        </ModalBody>\n        <ModalFooter>\n          <Grid templateColumns="repeat(2, 1fr)" columnGap="2x">\n            <Button variant="primary">\n              OK\n            </Button>\n            <Button>\n              Cancel\n            </Button>\n          </Grid>\n        </ModalFooter>\n      </ModalContent>\n    </Flex>\n  </>);\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsx)(r.Z,Object.assign({},{component:W,file:{data:'import {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Grid,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  DrawerFooter,\n  Skeleton,\n  Space,\n  Stack,\n  Text,\n  Toast,\n  ToastController,\n  ToastTransition,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { CloseSIcon } from \'@tonic-ui/react-icons\';\nimport React, { useState } from \'react\';\nimport { TransitionGroup } from \'react-transition-group\';\n\nconst MAX_TOASTS = 1;\n\nconst CustomToastContainer = (props) => (\n  <Flex\n    flexDirection="column"\n    alignItems="center"\n    position="absolute"\n    top="12x"\n    left="50%"\n    transform="translateX(-50%)"\n    width="max-content"\n    maxWidth="80%" // up to 80% of the modal or drawer width\n    zIndex="toast"\n    {...props}\n  />\n);\n\nlet autoIncrementIndex = 0;\n\nconst App = () => {\n  const [colorStyle] = useColorStyle();\n  const [toasts, setToasts] = useState([]);\n\n  const notify = (options) => {\n    const {\n      appearance,\n      content,\n      duration = null,\n      isClosable = true,\n    } = { ...options };\n\n    setToasts(prevState => {\n      const id = ++autoIncrementIndex;\n      const onClose = () => {\n        setToasts(toasts => toasts.filter(x => x.id !== id));\n      };\n      // You can decide how many toasts you want to show at the same time depending on your use case\n      const nextState = [\n        ...prevState.slice(MAX_TOASTS > 1 ? -(MAX_TOASTS - 1) : prevState.length),\n        {\n          id,\n          appearance,\n          content,\n          duration,\n          isClosable,\n          onClose,\n        },\n      ];\n      return nextState;\n    });\n  };\n\n  const closeAll = () => {\n    setToasts([]);\n  };\n\n  const handleClickAddToastByAppearance = (appearance) => (event) => {\n    const content = {\n      success: (\n        <>\n          <Text>This is a success message.</Text>\n          <Text>The toast will be automatically dismissed after 5 seconds.</Text>\n        </>\n      ),\n      info: (\n        <>\n          <Text>This is an info message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n      warning: (\n        <>\n          <Text>This is a warning message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n      error: (\n        <>\n          <Text>This is an error message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n    }[appearance];\n\n    notify({\n      appearance,\n      content,\n      duration: (appearance === \'success\') ? 5000 : undefined,\n    });\n  };\n\n  const handleClickCloseToasts = () => {\n    closeAll();\n  };\n\n  return (<>\n    <Flex justifyContent="space-between" columnGap="4x">\n      <Flex flexWrap="wrap" columnGap="2x" rowGap="2x">\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'success\')}>\n          Show Success Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'info\')}>\n          Show Info Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'warning\')}>\n          Show Warning Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'error\')}>\n          Show Error Message\n        </Button>\n      </Flex>\n      <Box>\n        <Button variant="secondary" onClick={handleClickCloseToasts}>\n          <CloseSIcon />\n          <Space width="2x" />\n          Close\n        </Button>\n      </Box>\n    </Flex>\n    <Divider my="4x" />\n    <Flex columnGap="4x">\n      <DrawerContent\n        margin={0}\n        minHeight={400}\n        minWidth={320}\n        width="50%"\n      >\n        <CustomToastContainer>\n          <TransitionGroup\n            component={null} // Pass in `component={null}` to avoid a wrapping `<div>` element\n          >\n            {toasts.map(toast => (\n              <ToastTransition\n                key={toast?.id}\n                in={true}\n                unmountOnExit\n              >\n                <ToastController\n                  duration={toast?.duration}\n                  onClose={toast?.onClose}\n                >\n                  <Toast\n                    appearance={toast?.appearance}\n                    isClosable={toast?.isClosable}\n                    onClose={toast?.onClose}\n                    sx={{\n                      mb: \'2x\',\n                      minWidth: 280, // The toast has a minimum width of 280 pixels\n                      width: \'fit-content\',\n                      boxShadow: colorStyle.shadow.thin,\n                    }}\n                  >\n                    {toast?.content}\n                  </Toast>\n                </ToastController>\n              </ToastTransition>\n            ))}\n          </TransitionGroup>\n        </CustomToastContainer>\n        <DrawerHeader>\n          Drawer\n        </DrawerHeader>\n        <DrawerBody>\n          <Stack direction="column" spacing="4x">\n            <Skeleton width={160} />\n            <Skeleton width={240} />\n            <Skeleton width={240} />\n          </Stack>\n        </DrawerBody>\n        <DrawerFooter>\n          <Grid templateColumns="repeat(2, 1fr)" columnGap="2x">\n            <Button variant="primary">\n              OK\n            </Button>\n            <Button>\n              Cancel\n            </Button>\n          </Grid>\n        </DrawerFooter>\n      </DrawerContent>\n    </Flex>\n  </>);\n};\n\nexport default App;',path:"pages/components/toast/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  Button,\n  Divider,\n  Flex,\n  Grid,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  DrawerFooter,\n  Skeleton,\n  Space,\n  Stack,\n  Text,\n  Toast,\n  ToastController,\n  ToastTransition,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { CloseSIcon } from \'@tonic-ui/react-icons\';\nimport React, { useState } from \'react\';\nimport { TransitionGroup } from \'react-transition-group\';\n\nconst MAX_TOASTS = 1;\n\nconst CustomToastContainer = (props) => (\n  <Flex\n    flexDirection="column"\n    alignItems="center"\n    position="absolute"\n    top="12x"\n    left="50%"\n    transform="translateX(-50%)"\n    width="max-content"\n    maxWidth="80%" // up to 80% of the modal or drawer width\n    zIndex="toast"\n    {...props}\n  />\n);\n\nlet autoIncrementIndex = 0;\n\nconst App = () => {\n  const [colorStyle] = useColorStyle();\n  const [toasts, setToasts] = useState([]);\n\n  const notify = (options) => {\n    const {\n      appearance,\n      content,\n      duration = null,\n      isClosable = true,\n    } = { ...options };\n\n    setToasts(prevState => {\n      const id = ++autoIncrementIndex;\n      const onClose = () => {\n        setToasts(toasts => toasts.filter(x => x.id !== id));\n      };\n      // You can decide how many toasts you want to show at the same time depending on your use case\n      const nextState = [\n        ...prevState.slice(MAX_TOASTS > 1 ? -(MAX_TOASTS - 1) : prevState.length),\n        {\n          id,\n          appearance,\n          content,\n          duration,\n          isClosable,\n          onClose,\n        },\n      ];\n      return nextState;\n    });\n  };\n\n  const closeAll = () => {\n    setToasts([]);\n  };\n\n  const handleClickAddToastByAppearance = (appearance) => (event) => {\n    const content = {\n      success: (\n        <>\n          <Text>This is a success message.</Text>\n          <Text>The toast will be automatically dismissed after 5 seconds.</Text>\n        </>\n      ),\n      info: (\n        <>\n          <Text>This is an info message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n      warning: (\n        <>\n          <Text>This is a warning message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n      error: (\n        <>\n          <Text>This is an error message.</Text>\n          <Text>The toast will remain visible until the user dismisses it.</Text>\n        </>\n      ),\n    }[appearance];\n\n    notify({\n      appearance,\n      content,\n      duration: (appearance === \'success\') ? 5000 : undefined,\n    });\n  };\n\n  const handleClickCloseToasts = () => {\n    closeAll();\n  };\n\n  return (<>\n    <Flex justifyContent="space-between" columnGap="4x">\n      <Flex flexWrap="wrap" columnGap="2x" rowGap="2x">\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'success\')}>\n          Show Success Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'info\')}>\n          Show Info Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'warning\')}>\n          Show Warning Message\n        </Button>\n        <Button variant="secondary" onClick={handleClickAddToastByAppearance(\'error\')}>\n          Show Error Message\n        </Button>\n      </Flex>\n      <Box>\n        <Button variant="secondary" onClick={handleClickCloseToasts}>\n          <CloseSIcon />\n          <Space width="2x" />\n          Close\n        </Button>\n      </Box>\n    </Flex>\n    <Divider my="4x" />\n    <Flex columnGap="4x">\n      <DrawerContent\n        margin={0}\n        minHeight={400}\n        minWidth={320}\n        width="50%"\n      >\n        <CustomToastContainer>\n          <TransitionGroup\n            component={null} // Pass in `component={null}` to avoid a wrapping `<div>` element\n          >\n            {toasts.map(toast => (\n              <ToastTransition\n                key={toast?.id}\n                in={true}\n                unmountOnExit\n              >\n                <ToastController\n                  duration={toast?.duration}\n                  onClose={toast?.onClose}\n                >\n                  <Toast\n                    appearance={toast?.appearance}\n                    isClosable={toast?.isClosable}\n                    onClose={toast?.onClose}\n                    sx={{\n                      mb: \'2x\',\n                      minWidth: 280, // The toast has a minimum width of 280 pixels\n                      width: \'fit-content\',\n                      boxShadow: colorStyle.shadow.thin,\n                    }}\n                  >\n                    {toast?.content}\n                  </Toast>\n                </ToastController>\n              </ToastTransition>\n            ))}\n          </TransitionGroup>\n        </CustomToastContainer>\n        <DrawerHeader>\n          Drawer\n        </DrawerHeader>\n        <DrawerBody>\n          <Stack direction="column" spacing="4x">\n            <Skeleton width={160} />\n            <Skeleton width={240} />\n            <Skeleton width={240} />\n          </Stack>\n        </DrawerBody>\n        <DrawerFooter>\n          <Grid templateColumns="repeat(2, 1fr)" columnGap="2x">\n            <Button variant="primary">\n              OK\n            </Button>\n            <Button>\n              Cancel\n            </Button>\n          </Grid>\n        </DrawerFooter>\n      </DrawerContent>\n    </Flex>\n  </>);\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(t.h2,{id:"props",children:["Props",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.h3,{id:"toast-1",children:["Toast",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#toast-1",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{align:"left",children:"Name"}),(0,o.jsx)(t.th,{align:"left",children:"Type"}),(0,o.jsx)(t.th,{align:"left",children:"Default"}),(0,o.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"children"}),(0,o.jsx)(t.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsx)(t.td,{align:"left"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"isClosable"}),(0,o.jsx)(t.td,{align:"left",children:"boolean"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsxs)(t.td,{align:"left",children:["If ",(0,o.jsx)(t.code,{children:"true"}),", a close button will appear on the right side."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"onClose"}),(0,o.jsx)(t.td,{align:"left",children:"function"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsx)(t.td,{align:"left",children:"A callback called when the close button is clicked."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"appearance"}),(0,o.jsx)(t.td,{align:"left",children:"string"}),(0,o.jsx)(t.td,{align:"left",children:"'none'"}),(0,o.jsx)(t.td,{align:"left",children:"One of: 'none', 'success', 'info', 'warning', 'error'"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"icon"}),(0,o.jsx)(t.td,{align:"left",children:"ReactNode | boolean | string"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsxs)(t.td,{align:"left",children:["Override the icon displayed before the children. Unless provided, the icon is mapped to the value of the ",(0,o.jsx)(t.code,{children:"appearance"})," prop."]})]})]})]}),"\n",(0,o.jsxs)(t.h3,{id:"toastclosebutton",children:["ToastCloseButton",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#toastclosebutton",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{align:"left",children:"Name"}),(0,o.jsx)(t.th,{align:"left",children:"Type"}),(0,o.jsx)(t.th,{align:"left",children:"Default"}),(0,o.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,o.jsx)(t.tbody,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"children"}),(0,o.jsx)(t.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsx)(t.td,{align:"left"})]})})]}),"\n",(0,o.jsxs)(t.h3,{id:"toastcontroller",children:["ToastController",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#toastcontroller",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{align:"left",children:"Name"}),(0,o.jsx)(t.th,{align:"left",children:"Type"}),(0,o.jsx)(t.th,{align:"left",children:"Default"}),(0,o.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"children"}),(0,o.jsx)(t.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsx)(t.td,{align:"left"})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"duration"}),(0,o.jsx)(t.td,{align:"left",children:"number"}),(0,o.jsx)(t.td,{align:"left",children:"null"}),(0,o.jsxs)(t.td,{align:"left",children:["The duration in milliseconds after which the toast will be automatically closed. Set to ",(0,o.jsx)(t.code,{children:"null"})," to disable auto-closing."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"onClose"}),(0,o.jsx)(t.td,{align:"left",children:"function"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsx)(t.td,{align:"left",children:"A callback called when the toast is being closed."})]})]})]}),"\n",(0,o.jsxs)(t.h3,{id:"toasttransition",children:["ToastTransition",(0,o.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#toasttransition",children:(0,o.jsx)(t.svg,{children:(0,o.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(t.table,{children:[(0,o.jsx)(t.thead,{children:(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.th,{align:"left",children:"Name"}),(0,o.jsx)(t.th,{align:"left",children:"Type"}),(0,o.jsx)(t.th,{align:"left",children:"Default"}),(0,o.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(t.tbody,{children:[(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"appear"}),(0,o.jsx)(t.td,{align:"left",children:"boolean"}),(0,o.jsx)(t.td,{align:"left",children:"false"}),(0,o.jsxs)(t.td,{align:"left",children:["By default the child component does not perform the enter transition when it first mounts, regardless of the value of ",(0,o.jsx)(t.code,{children:"in"}),". If you want this behavior, set both ",(0,o.jsx)(t.code,{children:"appear"})," and ",(0,o.jsx)(t.code,{children:"in"})," to true."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"children"}),(0,o.jsxs)(t.td,{align:"left",children:["ReactNode | ",(0,o.jsx)(t.code,{children:"(state, props) => ReactNode"})]}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsx)(t.td,{align:"left",children:"A function child can be used instead of a React element. This function is called with the current transition state ('entering', 'entered', 'exiting', 'exited'), ref, style, and context specific props for a component."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"easing"}),(0,o.jsxs)(t.td,{align:"left",children:["string | ",(0,o.jsx)(t.code,{children:"{ enter?: string, exit?: string }"})]}),(0,o.jsx)(t.td,{align:"left",children:(0,o.jsx)(t.code,{children:"{ enter: easing.easeInOut, exit: easing.easeInOut }"})}),(0,o.jsx)(t.td,{align:"left",children:"The timing function that describes how intermediate values are calculated during a transition. You may specify a single timing function for all transitions, or individually with an object."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"in"}),(0,o.jsx)(t.td,{align:"left",children:"boolean"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsxs)(t.td,{align:"left",children:["If ",(0,o.jsx)(t.code,{children:"true"}),", the component will transition in."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"mountOnEnter"}),(0,o.jsx)(t.td,{align:"left",children:"boolean"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsxs)(t.td,{align:"left",children:["If ",(0,o.jsx)(t.code,{children:"true"}),', it will "lazy mount" the component on the first ',(0,o.jsx)(t.code,{children:"in={true}"}),". After the first enter transition the component will stay mounted, even on the 'exited' state, unless you also specify ",(0,o.jsx)(t.code,{children:"unmountOnExit"}),". By default the child component is mounted immediately along with the parent transition component."]})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"timeout"}),(0,o.jsxs)(t.td,{align:"left",children:["number | ",(0,o.jsx)(t.code,{children:"{ appear?: number, enter?: number, exit?: number }"})]}),(0,o.jsx)(t.td,{align:"left",children:(0,o.jsx)(t.code,{children:"{ enter: duration.standard, exit: duration.standard }"})}),(0,o.jsx)(t.td,{align:"left",children:"The duration for the transition, in milliseconds. You may specify a single timeout for all transitions, or individually with an object."})]}),(0,o.jsxs)(t.tr,{children:[(0,o.jsx)(t.td,{align:"left",children:"unmountOnExit"}),(0,o.jsx)(t.td,{align:"left",children:"boolean"}),(0,o.jsx)(t.td,{align:"left"}),(0,o.jsxs)(t.td,{align:"left",children:["If ",(0,o.jsx)(t.code,{children:"true"}),", it will unmount the child component when ",(0,o.jsx)(t.code,{children:"in={false}"})," and the animation has finished. By default the child component stays mounted after it reaches the 'exited' state."]})]})]})]})]})}var nz=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},(0,a.ah)(),n.components).wrapper;return t?(0,o.jsx)(t,Object.assign({},n,{children:(0,o.jsx)(nG,n)})):nG(n)}},96835:function(n,t,e){"use strict";e.d(t,{Z:function(){return E}});var o=e(27216),a=e(40596),r=e(49857),i=e(73645),s=e(99870),l=e(62272),c=e(14594),u=e(65019),d=e(37384),h=e(99554),p=e(69111),m=e(5632),f=e(2784),x=e(65245);function y(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}var T=function(n){var t=document.createElement("textarea");t.value=n,t.setAttribute("readonly",""),t.style.position="absolute",t.style.left="-9999px",document.body.appendChild(t);var e=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);t.select(),document.execCommand("copy"),document.body.removeChild(t),e&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(e))},b=function(n){var t,e=function(n){if(Array.isArray(n))return n}(t=(0,f.useState)(!1))||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{for(r=(e=e.call(n)).next;!(l=(o=r.call(e)).done)&&(s.push(o.value),2!==s.length);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(t,2)||function(n,t){if(n){if("string"==typeof n)return y(n,2);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return y(n,2)}}(t,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),o=e[0],a=e[1];return{value:n,onCopy:function(){T(n),a(!0),setTimeout(function(){return a(!1)},1500)},hasCopied:o}},g=e(63768),C=e(76761),v=e(73205),w=e(98107),j=e(44285),S=["component","defaultExpanded","expanded","file","sandbox"];function Z(n,t){return function(n){if(Array.isArray(n))return n}(n)||function(n,t){var e=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=e){var o,a,r,i,s=[],l=!0,c=!1;try{if(r=(e=e.call(n)).next,0===t){if(Object(e)!==e)return;l=!1}else for(;!(l=(o=r.call(e)).done)&&(s.push(o.value),s.length!==t);l=!0);}catch(n){c=!0,a=n}finally{try{if(!l&&null!=e.return&&(i=e.return(),Object(i)!==i))return}finally{if(c)throw a}}return s}}(n,t)||function(n,t){if(n){if("string"==typeof n)return k(n,t);var e=Object.prototype.toString.call(n).slice(8,-1);if("Object"===e&&n.constructor&&(e=n.constructor.name),"Map"===e||"Set"===e)return Array.from(n);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return k(n,t)}}(n,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,t){(null==t||t>n.length)&&(t=n.length);for(var e=0,o=Array(t);e<t;e++)o[e]=n[e];return o}var B=function(n){var t,e=n.component,y=n.defaultExpanded,T=n.expanded,k=n.file,B=n.sandbox;!function(n,t){if(null!=n){var e,o,a=function(n,t){if(null==n)return{};var e,o,a={},r=Object.keys(n);for(o=0;o<r.length;o++)e=r[o],t.indexOf(e)>=0||(a[e]=n[e]);return a}(n,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);for(o=0;o<r.length;o++)e=r[o],!(t.indexOf(e)>=0)&&Object.prototype.propertyIsEnumerable.call(n,e)&&(a[e]=n[e])}}}(n,S);var E=(0,m.useRouter)(),A=Z((0,f.useReducer)(function(n){return!n},!1),2),O=A[0],I=A[1],M=(0,o.u)(),W=Z((0,a.Z)(),1)[0],F={dark:C.y,light:C.q}[W],N=Z((0,u.Z)(null!=T?T:void 0!==y&&y),2),L=N[0],P=N[1],D=b(null==k?void 0:k.data),G=D.onCopy,z=D.hasCopied,R=(0,f.useCallback)(function(){G()},[G]),H=(0,f.useCallback)(function(){(0,v.b)(B)},[B]),_=(0,f.useCallback)(function(){I(),P(!1)},[I,P]);return((0,f.useEffect)(function(){void 0!==T&&T!==L&&P(T)},[T,L,P]),e)?f.createElement(x.nu,{code:null==k?void 0:k.data,disabled:!0,language:"jsx",theme:F},f.createElement(r.Z,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[W],p:"4x"},f.createElement(r.Z,{fontSize:"sm",lineHeight:"sm"},f.createElement(f.Fragment,{key:O},f.createElement(e,null)))),f.createElement(i.Z,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},f.createElement(j.Z,{"data-track":L?"CodeBlock|hide_source|".concat((0,w.Z)({path:E.pathname})):"CodeBlock|show_source|".concat((0,w.Z)({path:E.pathname})),onClick:P},f.createElement(s.Z,{label:L?"Hide the source":"Show the source"},f.createElement(d.Z,null))),f.createElement(j.Z,{"data-track":"CodeBlock|copy_source|".concat((0,w.Z)({path:E.pathname})),onClick:R},f.createElement(s.Z,{label:z?"Copied":"Copy the source"},f.createElement(h.Z,null))),f.createElement(j.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(E.pathname),onClick:H},f.createElement(s.Z,{label:"Edit in CodeSandbox"},f.createElement(g.Z,null))),f.createElement(j.Z,{"data-track":"CodeBlock|reset|".concat(E.pathname),onClick:_},f.createElement(s.Z,{label:"Reset the demo"},f.createElement(p.Z,null)))),f.createElement(l.Z,{in:L},f.createElement(c.Z,{in:L,unmountOnExit:!0},f.createElement(r.Z,{as:x.uz,sx:{fontFamily:"mono",fontSize:"md",lineHeight:"md",mb:"4x","& > .prism-code":{padding:"".concat(null==M?void 0:null===(t=M.space)||void 0===t?void 0:t["4x"]," !important"),overflowX:"auto"}}})))):f.createElement(x.nu,{code:null==k?void 0:k.data,disabled:!0,language:"jsx",theme:F},f.createElement(r.Z,{as:x.uz,sx:{fontFamily:"mono",fontSize:"sm","& > .prism-code":{overflowX:"auto"}}}))};B.displayName="Demo";var E=B},46872:function(n,t,e){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/toast",function(){return e(27033)}])},10525:function(n,t,e){"use strict";e.d(t,{Z:function(){return a}});var o=e(2784),a=function(n){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],e=(0,o.useRef)(!1);t&&!e.current&&("function"==typeof n&&n(),e.current=!0)}},64864:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}}),e(2784);var o=e(75928),a=e(52903),r=(0,o.Z)((0,a.tZ)("path",{d:"M8 0c-4.4 0-8 3.6-8 8s3.6 8 8 8c4.4 0 8-3.6 8-8s-3.6-8-8-8zM8 14.5c-3.6 0-6.5-2.9-6.5-6.5s2.9-6.5 6.5-6.5 6.5 2.9 6.5 6.5-2.9 6.5-6.5 6.5zM11 5l1.2 1-5.2 6-3.6-3.6 1.1-1.1 2.4 2.4 4.1-4.7z"}),"CheckCircleOIcon")},22938:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}}),e(2784);var o=e(75928),a=e(52903),r=(0,o.Z)((0,a.tZ)("path",{d:"M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.418 0 8-3.582 8-8v0c0-4.418-3.582-8-8-8v0zM11 12l-3-3-3 3-1.060-1.060 3.060-2.94-3-3 1.060-1.070 2.94 2.95 2.94-2.94 1.060 1.060-2.89 3 3 3z"}),"ErrorIcon")},99554:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}}),e(2784);var o=e(75928),a=e(52903),r=(0,o.Z)((0,a.tZ)("path",{d:"M12 0h-6c-0.5 0-1 0.5-1 1v3h-3c-0.5 0-1 0.5-1 1v10c0 0.5 0.5 1 1 1h8c0.5 0 1-0.5 1-1v-3h3c0.5 0 1-0.5 1-1v-8l-3-3zM12 1.4l1.6 1.6h-1.6v-1.6zM10 15h-8v-10h5v3h3v7zM8 7v-1.6l1.6 1.6h-1.6zM14 11h-3v-4l-3-3h-2v-3h5v3h3v7z"}),"FileCopyOIcon")},97152:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}}),e(2784);var o=e(75928),a=e(52903),r=(0,o.Z)((0,a.tZ)("path",{d:"M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.418 0 8-3.582 8-8v0c0-4.418-3.582-8-8-8v0zM7 4h2v2h-2zM10 12h-4v-1h1v-3h-1v-1h3v4h1z"}),"InfoIcon")},69111:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}}),e(2784);var o=e(75928),a=e(52903),r=(0,o.Z)((0,a.tZ)("path",{d:"M10 7l1.995-1.995c-0.921-1.215-2.365-1.992-3.99-1.992-2.758 0-4.993 2.235-4.993 4.993s2.235 4.993 4.993 4.993c1.839 0 3.446-0.995 4.313-2.475l0.013-0.024 1.732 1c-1.233 2.111-3.487 3.507-6.068 3.507-3.867 0-7.003-3.135-7.003-7.003s3.135-7.003 7.003-7.003c2.183 0 4.133 0.999 5.417 2.565l0.010 0.012 1.579-1.579v5z"}),"RedoIcon")},83591:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}}),e(2784);var o=e(75928),a=e(52903),r=(0,o.Z)((0,a.tZ)("path",{d:"M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.418 0 8-3.582 8-8v0c0-4.418-3.582-8-8-8v0zM7 12l-4-4 1-1 3 3 5-6 1 1z"}),"SuccessIcon")},81141:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}}),e(2784);var o=e(75928),a=e(52903),r=(0,o.Z)((0,a.tZ)("path",{d:"M15.7 7.3l-7-7c-0.4-0.4-1-0.4-1.4 0l-7 7c-0.4 0.4-0.4 1 0 1.4l7 7c0.4 0.4 1 0.4 1.4 0l7-7c0.4-0.4 0.4-1 0-1.4zM9 12h-2v-2h2v2zM9 9h-2v-5h2v5z"}),"WarningMinorIcon")},29088:function(n,t,e){"use strict";e.d(t,{Z:function(){return T}});var o,a,r=e(53860),i=e(95530),s=e(5081),l=e(2784),c=e(98827),u=e(28165),d=(0,u.F4)(o||(o=(0,r.AI)(["\n  0% {\n      transform: rotate(0deg)\n  }\n  to {\n      transform: rotate(1turn)\n  }\n"]))),h=(0,u.F4)(a||(a=(0,r.AI)(["\n  0% {\n      transform: rotate(0deg)\n  }\n  to {\n      transform: rotate(-1turn)\n  }\n"]))),p=function(n){var t,e=n.spin;return"ccw"===e?t="".concat(h," 2s linear infinite"):("cw"===e||!0===e)&&(t="".concat(d," 2s linear infinite")),{animation:t}},m=e(27216),f=e(52903),x=["children","icon","spin"],y=(0,l.forwardRef)(function(n,t){var e=(0,c.Z)({props:n,name:"Icon"}),o=e.children,a=e.icon,u=e.spin,d=(0,r.Kd)(e,x),h=(0,m.u)(),y=(0,l.useRef)([null,null]),T="string"==typeof a&&a.length>0&&function(n){var t,e=(0,r.ZQ)(y.current,2),o=e[0],a=e[1];if(o===n)return a;var i=null===(t=(0,s.rY)(null==h?void 0:h.icons).find(function(t){return(0,r.ZQ)(t,1)[0]===n}))||void 0===t?void 0:t[1];return i&&(y.current=[n,i]),i}(a)||o,b=p({spin:void 0!==u&&u});return(0,f.tZ)(i.Z,(0,r.Zj)((0,r.Zj)((0,r.Zj)({ref:t},b),d),{},{children:T}))});y.displayName="Icon";var T=y},35358:function(n,t,e){"use strict";e.d(t,{Z:function(){return d}});var o=e(53860),a=e(2784),r=e(98827),i=e(53638),s=e(13692),l=e(52903),c=e(49857),u=(0,a.forwardRef)(function(n,t){var e=(0,r.Z)({props:n,name:"ModalBody"}),a=(0,s.Z)(),u=(0,o.Zj)({},a).scrollBehavior,d=(0,i.mS)({scrollBehavior:u});return(0,l.tZ)(c.Z,(0,o.Zj)((0,o.Zj)({ref:t},d),e))});u.displayName="ModalBody";var d=u},76168:function(n,t,e){"use strict";e.d(t,{Z:function(){return u}});var o=e(53860),a=e(2784),r=e(98827),i=e(53638),s=e(52903),l=e(49857),c=(0,a.forwardRef)(function(n,t){var e=(0,r.Z)({props:n,name:"ModalFooter"}),a=(0,i.IB)();return(0,s.tZ)(l.Z,(0,o.Zj)((0,o.Zj)({ref:t},a),e))});c.displayName="ModalFooter";var u=c},52235:function(n,t,e){"use strict";e.d(t,{Z:function(){return d}});var o=e(53860),a=e(2784),r=e(98827),i=e(53638),s=e(13692),l=e(52903),c=e(49857),u=(0,a.forwardRef)(function(n,t){var e=(0,r.Z)({props:n,name:"ModalHeader"}),a=(0,s.Z)(),u=(0,o.Zj)({},a).isClosable,d=(0,i.vZ)({isClosable:u});return(0,l.tZ)(c.Z,(0,o.Zj)((0,o.Zj)({ref:t},d),e))});u.displayName="ModalHeader";var d=u},57861:function(n,t,e){"use strict";e.d(t,{Z:function(){return C}});var o,a,r=e(53860),i=e(10525),s=e(56818),l=e(2784),c=e(98827),u=e(28165),d=e(40596),h=(0,u.F4)(o||(o=(0,r.AI)(["\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: .4;\n  }\n  100% {\n    opacity: 1;\n  }\n"]))),p=(0,u.F4)(a||(a=(0,r.AI)(["\n  0% {\n    transform: translateX(-100%);\n  }\n  50% {\n    // +0.5s of delay between each loop\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n"]))),m=function(n){var t=n.animation,e=n.colorMode;return"pulse"===t?{animation:"".concat(h," 1.5s ease-in-out .5s infinite")}:"wave"===t?{position:"relative",overflow:"hidden",__after:{animation:"".concat(p," 1.6s linear .5s infinite"),background:"linear-gradient(90deg,".concat(["transparent","rgba(255, 255, 255, ".concat({dark:.08,light:.32}[e],")"),"transparent"].join(","),")"),content:'""',position:"absolute",inset:0,transform:"translateX(-100%)"}}:{animation:t}},f=function(n){var t=n.variant;return"text"===t?{height:"3x",borderRadius:"sm",_empty:{"::before":{content:'"\\00a0"'}}}:"rectangle"===t?{}:"circle"===t?{borderRadius:"50%"}:{}},x=function(n){var t=n.animation,e=n.variant,o=(0,d.Z)(),a=(0,r.ZQ)(o,1)[0],i={dark:"rgba(255, 255, 255, 0.08)",light:"rgba(0, 0, 0, 0.08)"}[a],s=m({animation:t,colorMode:a}),l=f({variant:e});return(0,r.Zj)((0,r.Zj)({display:"block",backgroundColor:i},s),l)},y=e(52903),T=e(49857),b=["animation","variant"],g=(0,l.forwardRef)(function(n,t){var e=(0,c.Z)({props:n,name:"Skeleton"}),o=e.animation,a=e.variant,l=(0,r.Kd)(e,b),u=void 0===a?"text":a,d="".concat(g.displayName,":");(0,i.Z)(function(){(0,s.TL)('variant="rect"',{prefix:d,alternative:'variant="rectangle"',willRemove:!0})},"rect"===u),"rect"===u&&(u="rectangle");var h=x({animation:o,variant:u});return(0,y.tZ)(T.Z,(0,r.Zj)((0,r.Zj)({ref:t},h),l))});g.displayName="Skeleton";var C=g},42049:function(n,t,e){"use strict";e.d(t,{Z:function(){return S}});var o=e(53860),a=e(56818),r=e(92307),i=e.n(r),s=e(2784),l=e(98827),c=e(91269),u=e(83591),d=e(97152),h=e(81141),p=e(22938),m=e(29088),f=e(50274),x=e(60186),y=e(52903),T=e(49857),b=(0,s.forwardRef)(function(n,t){var e=(0,l.Z)({props:n,name:"ToastIcon"}),a=(0,x.Z)(),r=(0,o.Zj)({},a),i=r.appearance,c=r.icon,b=(0,f.zh)({appearance:i}),g=(0,s.useMemo)(function(){if("string"==typeof c)return(0,y.tZ)(m.Z,{icon:c});if(void 0===c){var n={success:u.Z,info:d.Z,warning:h.Z,error:p.Z}[i];return n?(0,y.tZ)(n,{size:"4x"}):null}return c},[i,c]);return g?(0,y.tZ)(T.Z,(0,o.Zj)((0,o.Zj)((0,o.Zj)({ref:t},b),e),{},{children:g})):null});b.displayName="ToastIcon";var g=(0,s.forwardRef)(function(n,t){var e=(0,l.Z)({props:n,name:"ToastMessage"}),a=(0,x.Z)(),r=(0,o.Zj)({},a).isClosable,i=(0,f.Zy)({isClosable:r});return(0,y.tZ)(T.Z,(0,o.Zj)((0,o.Zj)({ref:t},i),e))});g.displayName="ToastMessage";var C=e(82268),v=["appearance","icon","isClosable","onClose","children"],w=i()(function(n){return(0,o.Zj)({},n)}),j=(0,s.forwardRef)(function(n,t){var e=(0,l.Z)({props:n,name:"Toast"}),r=e.appearance,i=void 0===r?"none":r,s=e.icon,u=e.isClosable,d=void 0!==u&&u,h=e.onClose,p=e.children,m=(0,o.Kd)(e,v),x=w({appearance:i,icon:s,isClosable:d,onClose:h}),j=(0,f.Xf)({appearance:i});return(0,y.tZ)(C.u.Provider,{value:x,children:(0,y.BX)(T.Z,(0,o.Zj)((0,o.Zj)((0,o.Zj)({ref:t},j),m),{},{children:[(0,y.tZ)(b,{}),(0,y.tZ)(g,{children:(0,a.Pu)(p,x)}),!!d&&(0,y.tZ)(c.Z,{})]}))})});j.displayName="Toast";var S=j},91269:function(n,t,e){"use strict";e.d(t,{Z:function(){return m}});var o=e(53860),a=e(37662),r=e(56818),i=e(2784),s=e(83513),l=e(98827),c=e(50274),u=e(60186),d=e(52903),h=["children","onClick"],p=(0,i.forwardRef)(function(n,t){var e=(0,l.Z)({props:n,name:"ToastCloseButton"}),i=e.children,p=e.onClick,m=(0,o.Kd)(e,h),f=(0,u.Z)(),x=(0,o.Zj)({},f),y=x.isClosable,T=x.onClose,b=x.variant,g=(0,c.mm)({isClosable:y,variant:b});return(0,d.tZ)(s.Z,(0,o.Zj)((0,o.Zj)((0,o.Zj)({"aria-label":"Close",ref:t,onClick:(0,r.N)(p,T)},g),m),{},{children:null!=i?i:(0,d.tZ)(a.Z,{size:"4x"})}))});p.displayName="ToastCloseButton";var m=p},50274:function(n,t,e){"use strict";e.d(t,{Xf:function(){return s},Zy:function(){return c},mm:function(){return u},zh:function(){return l}});var o=e(53860),a=e(40596),r=e(31131),i=function(n){var t=n.appearance,e=n.colorMode;return(0,o.Zj)({backgroundColor:{dark:"gray:10",light:"white"}[e],color:"black:primary"},{success:{borderLeftColor:"green:50",borderLeftStyle:"solid",borderLeftWidth:"1x",pl:"3x"},info:{borderLeftColor:"blue:60",borderLeftStyle:"solid",borderLeftWidth:"1x",pl:"3x"},warning:{borderLeftColor:"yellow:50",borderLeftStyle:"solid",borderLeftWidth:"1x",pl:"3x"},error:{borderLeftColor:"red:60",borderLeftStyle:"solid",borderLeftWidth:"1x",pl:"3x"}}[t])},s=function(n){var t=n.appearance,e=(0,a.Z)(),r=i({appearance:t,colorMode:(0,o.ZQ)(e,1)[0]});return(0,o.Zj)({display:"flex",alignItems:"flex-start",justifyContent:"space-between",position:"relative",px:"4x",py:"4x"},r)},l=function(n){return{color:({success:"green:50",info:"blue:60",warning:"yellow:50",error:"red:60"})[n.appearance],display:"inline-flex",mr:"2x",mt:"1h"}},c=function(n){return{pr:n.isClosable?"10x":0,width:"100%"}},u=function(n){var t=n.isClosable;n.variant;var e=(0,a.Z)(),i=(0,o.ZQ)(e,1)[0],s="blue:60",l={dark:"black:primary",light:"black:primary"}[i],c=(0,r.P)({color:{dark:"black:tertiary",light:"black:tertiary"}[i],size:"8x"});return t?(0,o.Zj)((0,o.Zj)({},c),{},{_focusVisible:{outlineColor:s,outlineOffset:"-1h",outlineStyle:"solid",outlineWidth:"1h"},_hover:{color:l},position:"absolute",top:"10q",right:"2x"}):(0,o.Zj)((0,o.Zj)({},c),{},{_focusVisible:{outlineColor:s,outlineOffset:"-1h",outlineStyle:"solid",outlineWidth:"1h"},_hover:{color:l}})}},60186:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}});var o=e(2784),a=e(82268),r=function(){if(!o.useContext)throw Error("The `useContext` hook is not available with your React version.");return(0,o.useContext)(a.u)}},78727:function(n,t,e){"use strict";e.d(t,{Z:function(){return r}});var o=e(2784),a=e(82268),r=function(){var n=(0,o.useRef)(null),t=(0,o.useRef)(null);if(!o.useContext)throw Error("The `useContext` hook is not available with your React version.");var e=(0,o.useContext)(a.K);if(!e)throw Error("The `useToastManager` hook must be called from a descendent of the `ToastManager`.");return n.current=e.notify,t.current||(t.current=function(){for(var t,e=arguments.length,o=Array(e),a=0;a<e;a++)o[a]=arguments[a];return null===(t=n.current)||void 0===t?void 0:t.call.apply(t,[n].concat(o))}),Object.assign(t.current,e),t.current}}},function(n){n.O(0,[3732,2888,9774,179],function(){return n(n.s=46872)}),_N_E=n.O()}]);