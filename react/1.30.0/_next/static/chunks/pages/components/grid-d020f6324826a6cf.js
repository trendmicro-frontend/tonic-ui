(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[891],{94673:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return er}});var r=n(52322),o=n(45392),a=n(16959),i=n(67569),l=n(2784);function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function u(){return(u=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var s=function(e){return l.createElement(i.Grid,u({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},d=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)('"a a a" "b c c" "b c c"'))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return c(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return c(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r('"a a a" "b c c" "b c c"')}},l.createElement(i.Box,{fontFamily:"mono",py:"1x"},l.createElement(i.Box,null,'"a a a"'),l.createElement(i.Box,null,'"b c c"'),l.createElement(i.Box,null,'"b c c"'))),l.createElement(i.Button,{variant:"outline",onClick:function(){return r('"b b a" "b b c" "b b c"')}},l.createElement(i.Box,{fontFamily:"mono",py:"1x"},l.createElement(i.Box,null,'"b b a"'),l.createElement(i.Box,null,'"b b c"'),l.createElement(i.Box,null,'"b b c"'))),l.createElement(i.Button,{variant:"outline",onClick:function(){return r('"a a ." "a a ." ". b c"')}},l.createElement(i.Box,{fontFamily:"mono",py:"1x"},l.createElement(i.Box,null,'"a a ."'),l.createElement(i.Box,null,'"a a ."'),l.createElement(i.Box,null,'". b c"')))),l.createElement("pre",null,"<Grid templateAreas=".concat(JSON.stringify(n),">")),l.createElement(i.Grid,{templateAreas:n,templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},l.createElement(s,{area:"a",bg:"blue:50",borderColor:"blue:60"},"One (a)"),l.createElement(s,{area:"b",bg:"red:50",borderColor:"red:60"},"Two (b)"),l.createElement(s,{area:"c",bg:"teal:50",borderColor:"teal:60"},"Three (c)")))};function m(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function p(){return(p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var f=function(e){return l.createElement(i.Grid,p({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},h=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("4rem 4rem"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return m(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return m(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("4rem 4rem")}},"4rem 4rem"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1fr 4rem")}},"1fr 4rem"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1fr auto")}},"1fr auto"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1fr 2fr")}},"1fr 2fr")),l.createElement("pre",null,'<Grid templateColumns="'.concat(n,'">')),l.createElement(i.Grid,{templateColumns:n,gap:"2x",bg:"gray:10",p:"4x"},l.createElement(f,null,"One"),l.createElement(f,null,"Two"),l.createElement(f,null,"Three"),l.createElement(f,null,"Four"),l.createElement(f,null,"Five")))};function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function g(){return(g=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var b=function(e){return l.createElement(i.Grid,g({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},v=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("auto"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return x(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return x(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("auto")}},"auto"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("3rem 4rem 3rem")}},"3rem 4rem 3rem"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1fr 2fr 1fr")}},"1fr 2fr 1fr"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("3rem auto minmax(3rem, 4rem)")}},"3rem auto minmax(3rem, 4rem)")),l.createElement("pre",null,'<Grid templateRows="'.concat(n,'">')),l.createElement(i.Grid,{templateRows:n,templateColumns:"1fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},l.createElement(b,null,"One"),l.createElement(b,null,"Two"),l.createElement(b,null,"Three"),l.createElement(b,null,"Four"),l.createElement(b,null,"Five")))};function G(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function y(){return(y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var j=function(e){return l.createElement(i.Grid,y({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},B=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("auto"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return G(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return G(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("auto")}},"auto"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1fr")}},"1fr"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("min-content")}},"min-content"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("minmax(3rem, auto)")}},"minmax(3rem, auto)")),l.createElement("pre",null,'<Grid autoColumns="'.concat(n,'">')),l.createElement(i.Grid,{autoColumns:n,gap:"2x",bg:"gray:10",p:"4x"},l.createElement(j,{column:"1/3"},"One"),l.createElement(j,{column:"2"},"Two"),l.createElement(j,null,"Three"),l.createElement(j,null,"Four"),l.createElement(j,null,"Five")))};function k(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function C(){return(C=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var I=function(e){return l.createElement(i.Grid,C({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},w=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("auto"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return k(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return k(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("auto")}},"auto"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("3rem")}},"3rem"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("min-content")}},"min-content"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("minmax(2rem, auto)")}},"minmax(2rem, auto)")),l.createElement("pre",null,'<Grid autoRows="'.concat(n,'">')),l.createElement(i.Grid,{autoRows:n,templateColumns:"1fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},l.createElement(I,null,"One"),l.createElement(I,null,"Two"),l.createElement(I,null,"Three"),l.createElement(I,null,"Four"),l.createElement(I,null)))};function S(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function E(){return(E=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var A=function(e){return l.createElement(i.Grid,E({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},O=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("row"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return S(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return S(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("row")}},"row"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("column")}},"column"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("row dense")}},"row dense")),l.createElement("pre",null,'<Grid autoFlow="'.concat(n,'">')),l.createElement(i.Grid,{autoFlow:n,templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},l.createElement(A,{column:"auto/span 2"},"One"),l.createElement(A,{column:"auto/span 2"},"Two"),l.createElement(A,null,"Three"),l.createElement(A,null,"Four"),l.createElement(A,null,"Five")))};function V(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function T(){return(T=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var F=function(e){return l.createElement(i.Grid,T({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},R=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("a"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return V(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return V(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("a")}},"a"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("b")}},"b"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("c")}},"c"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("2 / 1 / 2 / 4")}},"2 / 1 / 2 / 4")),l.createElement(i.Grid,{templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1fr 1fr",templateAreas:'\n          "a a a"\n          "b c c"\n          "b c c"\n        ',gap:"2x",bg:"gray:10",p:"4x"},l.createElement(F,{area:n},"Example")))};function z(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function U(){return(U=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var $=function(e){return l.createElement(i.Grid,U({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},N=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("1"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return z(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return z(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1")}},"1"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1 / 3")}},"1 / 3"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("2 / -1")}},"2 / -1"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1 / span 2")}},"1 / span 2")),l.createElement(i.Grid,{templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1.5fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},l.createElement($,{column:n,bg:"blue:50",borderColor:"blue:60"},"One"),l.createElement($,null,"Two"),l.createElement($,null,"Three")))};function M(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function P(){return(P=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var Z=function(e){return l.createElement(i.Grid,P({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},H=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("1"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return M(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return M(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1")}},"1"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1 / 3")}},"1 / 3"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("2 / -1")}},"2 / -1"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1 / span 2")}},"1 / span 2")),l.createElement(i.Grid,{templateRows:"repeat(3,minmax(3rem,auto))",templateColumns:"1fr 1.5fr 1fr",gap:"2x",bg:"gray:10",p:"4x"},l.createElement(Z,{row:n,bg:"blue:50",borderColor:"blue:60"},"One"),l.createElement(Z,null,"Two"),l.createElement(Z,null,"Three")))};function _(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function W(){return(W=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var L=function(e){return l.createElement(i.Grid,W({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},D=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("0"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return _(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("0")}},"0"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("10%")}},"10%"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1rem")}},"1rem"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("20px")}},"20px")),l.createElement("pre",null,'<Grid columnGap="'.concat(n,'">')),l.createElement(i.Grid,{columnGap:n,templateColumns:"1fr 1fr",bg:"gray:10",p:"4x",transition:"all .3s ease-in"},l.createElement(L,null,"One"),l.createElement(L,null,"Two"),l.createElement(L,null,"Three"),l.createElement(L,null,"Four"),l.createElement(L,null,"Five")))};function J(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function X(){return(X=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var q=function(e){return l.createElement(i.Grid,X({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},K=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("0"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return J(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return J(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("0")}},"0"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("10%")}},"10%"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1rem")}},"1rem"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("20px")}},"20px")),l.createElement("pre",null,'<Grid rowGap="'.concat(n,'">')),l.createElement(i.Grid,{rowGap:n,templateColumns:"1fr 1fr",bg:"gray:10",p:"4x",transition:"all .3s ease-in"},l.createElement(q,null,"One"),l.createElement(q,null,"Two"),l.createElement(q,null,"Three"),l.createElement(q,null,"Four"),l.createElement(q,null,"Five")))};function Q(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function Y(){return(Y=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var ee=function(e){return l.createElement(i.Grid,Y({bg:"teal:50",border:1,borderColor:"teal:60",p:"3x"},e))},et=function(){var e,t=function(e){if(Array.isArray(e))return e}(e=(0,l.useState)("0"))||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{for(a=(n=n.call(e)).next;!(c=(r=a.call(n)).done)&&(l.push(r.value),2!==l.length);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,2)||function(e,t){if(e){if("string"==typeof e)return Q(e,2);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return Q(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),n=t[0],r=t[1];return l.createElement(l.Fragment,null,l.createElement(i.Stack,{direction:"row",spacing:"2x",mb:"4x"},l.createElement(i.Button,{variant:"outline",onClick:function(){return r("0")}},"0"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("10%")}},"10%"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("1rem")}},"1rem"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("10px 20px")}},"10px 20px"),l.createElement(i.Button,{variant:"outline",onClick:function(){return r("calc(20px + 10%)")}},"calc(20px + 10%)")),l.createElement("pre",null,'<Grid gap="'.concat(n,'">')),l.createElement(i.Grid,{gap:n,templateColumns:"1fr 1fr",bg:"gray:10",p:"4x",transition:"all .3s ease-in"},l.createElement(ee,null,"One"),l.createElement(ee,null,"Two"),l.createElement(ee,null,"Three"),l.createElement(ee,null,"Four"),l.createElement(ee,null,"Five")))};function en(e){var t=Object.assign({div:"div",h1:"h1",p:"p",code:"code",a:"a",h2:"h2",svg:"svg",use:"use",pre:"pre",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td",h3:"h3"},(0,o.ah)(),e.components);return(0,r.jsxs)(t.div,{className:"main-content",id:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,r.jsx)(t.h1,{id:"grid",children:"Grid"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Grid"})," is a ",(0,r.jsx)(t.a,{href:"box",children:(0,r.jsx)(t.code,{children:"Box"})})," with ",(0,r.jsx)(t.code,{children:"display: grid"})," and comes with helpful style shorthand props."]}),"\n",(0,r.jsxs)(t.h2,{id:"import",children:["Import",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-js",children:"import { Grid } from '@tonic-ui/react';\n"})}),"\n",(0,r.jsxs)(t.h2,{id:"usage",children:["Usage",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Grid provides the following style shorthand props:"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{align:"left",children:"Shorthand Prop"}),(0,r.jsx)(t.th,{align:"left",children:"Style Prop"}),(0,r.jsx)(t.th,{align:"left",children:"CSS Property"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"gap"}),(0,r.jsx)(t.td,{align:"left",children:"gridGap"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/gap",children:"grid-gap"})}),(0,r.jsxs)(t.td,{children:["Sets the gaps (gutters) between rows and columns. It is a shorthand for ",(0,r.jsx)(t.code,{children:"row-gap"})," and ",(0,r.jsx)(t.code,{children:"column-gap"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"rowGap"}),(0,r.jsx)(t.td,{align:"left",children:"gridRowGap"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/row-gap",children:"grid-row-gap"})}),(0,r.jsx)(t.td,{children:"Sets the size of the gap (gutter) between an element's grid rows."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"columnGap"}),(0,r.jsx)(t.td,{align:"left",children:"gridColumnGap"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/column-gap",children:"grid-column-gap"})}),(0,r.jsx)(t.td,{children:"Sets the size of the gap (gutter) between an element's columns."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"row"}),(0,r.jsx)(t.td,{align:"left",children:"gridRow"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-row",children:"grid-row"})}),(0,r.jsxs)(t.td,{children:["a shorthand property for ",(0,r.jsx)(t.code,{children:"grid-row-start"})," and ",(0,r.jsx)(t.code,{children:"grid-row-end"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"column"}),(0,r.jsx)(t.td,{align:"left",children:"gridColumn"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-column",children:"grid-column"})}),(0,r.jsxs)(t.td,{children:["A shorthand property for ",(0,r.jsx)(t.code,{children:"grid-column-start"})," and ",(0,r.jsx)(t.code,{children:"grid-column-end"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"area"}),(0,r.jsx)(t.td,{align:"left",children:"gridArea"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-area",children:"grid-area"})}),(0,r.jsxs)(t.td,{children:["A shorthand property for ",(0,r.jsx)(t.code,{children:"grid-row-start"}),", ",(0,r.jsx)(t.code,{children:"grid-column-start"}),", ",(0,r.jsx)(t.code,{children:"grid-row-end"})," and ",(0,r.jsx)(t.code,{children:"grid-column-end"}),"."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoFlow"}),(0,r.jsx)(t.td,{align:"left",children:"gridAutoFlow"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-flow",children:"grid-auto-flow"})}),(0,r.jsx)(t.td,{children:"Controls how the auto-placement algorithm works."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoRows"}),(0,r.jsx)(t.td,{align:"left",children:"gridAutoRows"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-rows",children:"grid-auto-rows"})}),(0,r.jsx)(t.td,{children:"Specifies the size of an implicitly-created grid row track or pattern of tracks."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoColumns"}),(0,r.jsx)(t.td,{align:"left",children:"gridAutoColumns"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-auto-columns",children:"grid-auto-columns"})}),(0,r.jsx)(t.td,{children:"Specifies the size of an implicitly-created grid column track or pattern of tracks."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateRows"}),(0,r.jsx)(t.td,{align:"left",children:"gridTemplateRows"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-rows",children:"grid-template-rows"})}),(0,r.jsx)(t.td,{children:"Defines the line names and track sizing functions of the grid rows."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateColumns"}),(0,r.jsx)(t.td,{align:"left",children:"gridTemplateColumns"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-columns",children:"grid-template-columns"})}),(0,r.jsx)(t.td,{children:"Defines the line names and track sizing functions of the grid columns."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateAreas"}),(0,r.jsx)(t.td,{align:"left",children:"gridTemplateAreas"}),(0,r.jsx)(t.td,{align:"left",children:(0,r.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/grid-template-areas",children:"grid-template-areas"})}),(0,r.jsx)(t.td,{children:"Specifies named grid areas."})]})]})]}),"\n",(0,r.jsxs)(t.h3,{id:"the-gap-gridgap-property",children:["The ",(0,r.jsx)(t.code,{children:"gap"})," (",(0,r.jsx)(t.code,{children:"gridGap"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-gap-gridgap-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:et,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'10px 20px\')}>10px 20px</Button>\n        <Button variant="outline" onClick={() => setValue(\'calc(20px + 10%)\')}>calc(20px + 10%)</Button>\n      </Stack>\n      <pre>\n        {`<Grid gap="${value}">`}\n      </pre>\n      <Grid\n        gap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'10px 20px\')}>10px 20px</Button>\n        <Button variant="outline" onClick={() => setValue(\'calc(20px + 10%)\')}>calc(20px + 10%)</Button>\n      </Stack>\n      <pre>\n        {`<Grid gap="${value}">`}\n      </pre>\n      <Grid\n        gap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-rowgap-gridrowgap-property",children:["The ",(0,r.jsx)(t.code,{children:"rowGap"})," (",(0,r.jsx)(t.code,{children:"gridRowGap"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-rowgap-gridrowgap-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:K,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid rowGap="${value}">`}\n      </pre>\n      <Grid\n        rowGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid rowGap="${value}">`}\n      </pre>\n      <Grid\n        rowGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-columngap-gridcolumngap-property",children:["The ",(0,r.jsx)(t.code,{children:"columnGap"})," (",(0,r.jsx)(t.code,{children:"gridColumnGap"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-columngap-gridcolumngap-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:D,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid columnGap="${value}">`}\n      </pre>\n      <Grid\n        columnGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'0\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'0\')}>0</Button>\n        <Button variant="outline" onClick={() => setValue(\'10%\')}>10%</Button>\n        <Button variant="outline" onClick={() => setValue(\'1rem\')}>1rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'20px\')}>20px</Button>\n      </Stack>\n      <pre>\n        {`<Grid columnGap="${value}">`}\n      </pre>\n      <Grid\n        columnGap={value}\n        templateColumns="1fr 1fr"\n        bg="gray:10"\n        p="4x"\n        transition="all .3s ease-in"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-row-gridrow-property",children:["The ",(0,r.jsx)(t.code,{children:"row"})," (",(0,r.jsx)(t.code,{children:"gridRow"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-row-gridrow-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:H,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem row={value} bg="blue:50" borderColor="blue:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem row={value} bg="blue:50" borderColor="blue:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-column-gridcolumn-property",children:["The ",(0,r.jsx)(t.code,{children:"column"})," (",(0,r.jsx)(t.code,{children:"gridColumn"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-column-gridcolumn-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:N,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column={value} bg="blue:50" borderColor="blue:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'1\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'1\')}>1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / 3\')}>1 / 3</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / -1\')}>2 / -1</Button>\n        <Button variant="outline" onClick={() => setValue(\'1 / span 2\')}>1 / span 2</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1.5fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column={value} bg="blue:50" borderColor="blue:60">One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-area-gridarea-property",children:["The ",(0,r.jsx)(t.code,{children:"area"})," (",(0,r.jsx)(t.code,{children:"gridArea"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-area-gridarea-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:R,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'a\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'a\')}>a</Button>\n        <Button variant="outline" onClick={() => setValue(\'b\')}>b</Button>\n        <Button variant="outline" onClick={() => setValue(\'c\')}>c</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / 1 / 2 / 4\')}>2 / 1 / 2 / 4</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        templateAreas={`\n          "a a a"\n          "b c c"\n          "b c c"\n        `}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem area={value}>Example</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'a\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'a\')}>a</Button>\n        <Button variant="outline" onClick={() => setValue(\'b\')}>b</Button>\n        <Button variant="outline" onClick={() => setValue(\'c\')}>c</Button>\n        <Button variant="outline" onClick={() => setValue(\'2 / 1 / 2 / 4\')}>2 / 1 / 2 / 4</Button>\n      </Stack>\n      <Grid\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        templateAreas={`\n          "a a a"\n          "b c c"\n          "b c c"\n        `}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem area={value}>Example</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-autoflow-gridautoflow-property",children:["The ",(0,r.jsx)(t.code,{children:"autoFlow"})," (",(0,r.jsx)(t.code,{children:"gridAutoFlow"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-autoflow-gridautoflow-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:O,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'row\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'row\')}>row</Button>\n        <Button variant="outline" onClick={() => setValue(\'column\')}>column</Button>\n        <Button variant="outline" onClick={() => setValue(\'row dense\')}>row dense</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoFlow="${value}">`}\n      </pre>\n      <Grid\n        autoFlow={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column="auto/span 2">One</GridItem>\n        <GridItem column="auto/span 2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'row\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'row\')}>row</Button>\n        <Button variant="outline" onClick={() => setValue(\'column\')}>column</Button>\n        <Button variant="outline" onClick={() => setValue(\'row dense\')}>row dense</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoFlow="${value}">`}\n      </pre>\n      <Grid\n        autoFlow={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column="auto/span 2">One</GridItem>\n        <GridItem column="auto/span 2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-autorows-gridautorows-property",children:["The ",(0,r.jsx)(t.code,{children:"autoRows"})," (",(0,r.jsx)(t.code,{children:"gridAutoRows"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-autorows-gridautorows-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:w,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem\')}>3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(2rem, auto)\')}>minmax(2rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoRows="${value}">`}\n      </pre>\n      <Grid\n        autoRows={value}\n        templateColumns="1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem></GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem\')}>3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(2rem, auto)\')}>minmax(2rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoRows="${value}">`}\n      </pre>\n      <Grid\n        autoRows={value}\n        templateColumns="1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem></GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-autocolumns-gridautocolumns-property",children:["The ",(0,r.jsx)(t.code,{children:"autoColumns"})," (",(0,r.jsx)(t.code,{children:"gridAutoColumns"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-autocolumns-gridautocolumns-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:B,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr\')}>1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(3rem, auto)\')}>minmax(3rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoColumns="${value}">`}\n      </pre>\n      <Grid\n        autoColumns={value}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column="1/3">One</GridItem>\n        <GridItem column="2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr\')}>1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'min-content\')}>min-content</Button>\n        <Button variant="outline" onClick={() => setValue(\'minmax(3rem, auto)\')}>minmax(3rem, auto)</Button>\n      </Stack>\n      <pre>\n        {`<Grid autoColumns="${value}">`}\n      </pre>\n      <Grid\n        autoColumns={value}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem column="1/3">One</GridItem>\n        <GridItem column="2">Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-templaterows-gridtemplaterows-property",children:["The ",(0,r.jsx)(t.code,{children:"templateRows"})," (",(0,r.jsx)(t.code,{children:"gridTemplateRows"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-templaterows-gridtemplaterows-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:v,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem 4rem 3rem\')}>3rem 4rem 3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr 1fr\')}>1fr 2fr 1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem auto minmax(3rem, 4rem)\')}>3rem auto minmax(3rem, 4rem)</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateRows="${value}">`}\n      </pre>\n      <Grid\n        templateRows={value}\n        templateColumns="1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'auto\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'auto\')}>auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem 4rem 3rem\')}>3rem 4rem 3rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr 1fr\')}>1fr 2fr 1fr</Button>\n        <Button variant="outline" onClick={() => setValue(\'3rem auto minmax(3rem, 4rem)\')}>3rem auto minmax(3rem, 4rem)</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateRows="${value}">`}\n      </pre>\n      <Grid\n        templateRows={value}\n        templateColumns="1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-templatecolumns-gridtemplatecolumns-property",children:["The ",(0,r.jsx)(t.code,{children:"templateColumns"})," (",(0,r.jsx)(t.code,{children:"gridTemplateColumns"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-templatecolumns-gridtemplatecolumns-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:h,file:{data:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'4rem 4rem\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'4rem 4rem\')}>4rem 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 4rem\')}>1fr 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr auto\')}>1fr auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr\')}>1fr 2fr</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateColumns="${value}">`}\n      </pre>\n      <Grid\n        templateColumns={value}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'import { Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'4rem 4rem\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'4rem 4rem\')}>4rem 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 4rem\')}>1fr 4rem</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr auto\')}>1fr auto</Button>\n        <Button variant="outline" onClick={() => setValue(\'1fr 2fr\')}>1fr 2fr</Button>\n      </Stack>\n      <pre>\n        {`<Grid templateColumns="${value}">`}\n      </pre>\n      <Grid\n        templateColumns={value}\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem>One</GridItem>\n        <GridItem>Two</GridItem>\n        <GridItem>Three</GridItem>\n        <GridItem>Four</GridItem>\n        <GridItem>Five</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h3,{id:"the-templateareas-gridtemplateareas-property",children:["The ",(0,r.jsx)(t.code,{children:"templateAreas"})," (",(0,r.jsx)(t.code,{children:"gridTemplateAreas"}),") property",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#the-templateareas-gridtemplateareas-property",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsx)(a.Z,{component:d,file:{data:'/* eslint-disable react/no-unescaped-entities */\nimport { Box, Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'"a a a" "b c c" "b c c"\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'"a a a" "b c c" "b c c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a a"</Box>\n            <Box>"b c c"</Box>\n            <Box>"b c c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"b b a" "b b c" "b b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"b b a"</Box>\n            <Box>"b b c"</Box>\n            <Box>"b b c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"a a ." "a a ." ". b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a ."</Box>\n            <Box>"a a ."</Box>\n            <Box>". b c"</Box>\n          </Box>\n        </Button>\n      </Stack>\n      <pre>\n        {`<Grid templateAreas=${JSON.stringify(value)}>`}\n      </pre>\n      <Grid\n        templateAreas={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem area="a" bg="blue:50" borderColor="blue:60">One (a)</GridItem>\n        <GridItem area="b" bg="red:50" borderColor="red:60">Two (b)</GridItem>\n        <GridItem area="c" bg="teal:50" borderColor="teal:60">Three (c)</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/grid/index.page.mdx"},sandbox:{files:{},raw:'/* eslint-disable react/no-unescaped-entities */\nimport { Box, Button, Grid, Stack } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst GridItem = (props) => (\n  <Grid bg="teal:50" border={1} borderColor="teal:60" p="3x" {...props} />\n);\n\nconst App = () => {\n  const [value, setValue] = useState(\'"a a a" "b c c" "b c c"\');\n\n  return (\n    <>\n      <Stack direction="row" spacing="2x" mb="4x">\n        <Button variant="outline" onClick={() => setValue(\'"a a a" "b c c" "b c c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a a"</Box>\n            <Box>"b c c"</Box>\n            <Box>"b c c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"b b a" "b b c" "b b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"b b a"</Box>\n            <Box>"b b c"</Box>\n            <Box>"b b c"</Box>\n          </Box>\n        </Button>\n        <Button variant="outline" onClick={() => setValue(\'"a a ." "a a ." ". b c"\')}>\n          <Box fontFamily="mono" py="1x">\n            <Box>"a a ."</Box>\n            <Box>"a a ."</Box>\n            <Box>". b c"</Box>\n          </Box>\n        </Button>\n      </Stack>\n      <pre>\n        {`<Grid templateAreas=${JSON.stringify(value)}>`}\n      </pre>\n      <Grid\n        templateAreas={value}\n        templateRows="repeat(3,minmax(3rem,auto))"\n        templateColumns="1fr 1fr 1fr"\n        gap="2x"\n        bg="gray:10"\n        p="4x"\n      >\n        <GridItem area="a" bg="blue:50" borderColor="blue:60">One (a)</GridItem>\n        <GridItem area="b" bg="red:50" borderColor="red:60">Two (b)</GridItem>\n        <GridItem area="c" bg="teal:50" borderColor="teal:60">Three (c)</GridItem>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,r.jsxs)(t.h2,{id:"props",children:["Props",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(t.h3,{id:"grid-1",children:["Grid",(0,r.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#grid-1",children:(0,r.jsx)(t.svg,{children:(0,r.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{align:"left",children:"Name"}),(0,r.jsx)(t.th,{align:"left",children:"Type"}),(0,r.jsx)(t.th,{align:"left",children:"Default"}),(0,r.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"children"}),(0,r.jsx)(t.td,{align:"left",children:"ReactNode"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsx)(t.td,{align:"left"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"gap"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridGap"})," property that sets the gaps (gutters) between rows and columns."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"rowGap"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridRowGap"})," property that sets the size of the gap (gutter) between an element's grid rows."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"columnGap"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridColumnGap"})," property that sets the size of the gap (gutter) between an element's columns."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"row"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridRow"})," property that specifies the grid items' location in terms of the grid's rows."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"column"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridColumn"})," property that specifies the grid items' location in terms of the grid's columns."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"area"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridArea"})," property that specifies a grid item's size and location within the grid by referencing a named grid area."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoFlow"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridAutoFlow"})," property that controls how the auto-placement algorithm works."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoRows"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridAutoRows"})," property that specifies the size of an implicitly-created grid row track or pattern of tracks."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"autoColumns"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridAutoColumns"})," property that specifies the size of an implicitly-created grid column track or pattern of tracks."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateRows"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridTemplateRows"})," property that defines the line names and track sizing functions of the grid rows."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateColumns"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridTemplateColumns"})," property that defines the line names and track sizing functions of the grid columns."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{align:"left",children:"templateAreas"}),(0,r.jsx)(t.td,{align:"left",children:"string"}),(0,r.jsx)(t.td,{align:"left"}),(0,r.jsxs)(t.td,{align:"left",children:["A shorthand of the ",(0,r.jsx)(t.code,{children:"gridTemplateAreas"})," property that specifies named grid areas."]})]})]})]})]})}var er=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},(0,o.ah)(),e.components).wrapper;return t?(0,r.jsx)(t,Object.assign({},e,{children:(0,r.jsx)(en,e)})):en(e)}},16959:function(e,t,n){"use strict";n.d(t,{Z:function(){return G}});var r=n(67569),o=n(49427),a=n(5632),i=n(2784),l=n(65245),c=n(16245),u=n(76761),s=n(73205),d=n(98107),m=["size"];function p(){return(p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var f=(0,i.forwardRef)(function(e,t){var n=e.size,o=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,m);return i.createElement(r.SVGIcon,p({size:n,viewBox:"0 0 1024 1024"},o),i.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});f.displayName="CodeSandboxIcon";var h=n(44285);function x(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,l=[],c=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=a.call(n)).done)&&(l.push(r.value),l.length!==t);c=!0);}catch(e){u=!0,o=e}finally{try{if(!c&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return l}}(e,t)||function(e,t){if(e){if("string"==typeof e)return g(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return g(e,t)}}(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}var b={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},v=function(e){var t=e.component,n=e.file,m=e.sandbox,p=(0,a.useRouter)(),g=x((0,i.useReducer)(function(e){return!e},!1),2),v=g[0],G=g[1],y=x((0,r.useColorMode)(),1)[0],j={dark:u.y,light:u.q}[y],B=x((0,o.useToggle)(!1),2),k=B[0],C=B[1],I=(0,c.Z)(null==n?void 0:n.data),w=I.onCopy,S=I.hasCopied,E=(0,i.useCallback)(function(){w()},[w]),A=(0,i.useCallback)(function(){(0,s.b)(m)},[m]),O=(0,i.useCallback)(function(){G(),C(!1)},[G,C]);return i.createElement(l.nu,{code:null==n?void 0:n.data,disabled:!0,language:"jsx",theme:j},i.createElement(r.Box,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[y],p:"4x"},i.createElement(r.Box,{fontSize:"sm",lineHeight:"sm"},i.createElement(i.Fragment,{key:v},i.createElement(t,null)))),i.createElement(r.Flex,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},i.createElement(h.Z,{"data-track":k?"CodeBlock|hide_source|".concat((0,d.Z)({path:p.pathname})):"CodeBlock|show_source|".concat((0,d.Z)({path:p.pathname})),onClick:C},i.createElement(r.Tooltip,{label:k?"Hide the source":"Show the source"},i.createElement(r.Icon,{icon:"code",size:{sm:"5x",md:"4x"}}))),i.createElement(h.Z,{"data-track":"CodeBlock|copy_source|".concat((0,d.Z)({path:p.pathname})),onClick:E},i.createElement(r.Tooltip,{label:S?"Copied":"Copy the source"},i.createElement(r.Icon,{icon:"file-copy-o",size:{sm:"5x",md:"4x"}}))),i.createElement(h.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(p.pathname),onClick:A},i.createElement(r.Tooltip,{label:"Edit in CodeSandbox"},i.createElement(f,{size:{sm:"5x",md:"4x"}}))),i.createElement(h.Z,{"data-track":"CodeBlock|reset|".concat(p.pathname),onClick:O},i.createElement(r.Tooltip,{label:"Reset the demo"},i.createElement(r.Icon,{icon:"redo",size:{sm:"5x",md:"4x"}})))),i.createElement(r.Fade,{in:k},i.createElement(r.Collapse,{in:k,unmountOnExit:!0},i.createElement(l.uz,{style:b}))))};v.displayName="Demo";var G=v},43096:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/grid",function(){return n(94673)}])}},function(e){e.O(0,[2888,9774,179],function(){return e(e.s=43096)}),_N_E=e.O()}]);