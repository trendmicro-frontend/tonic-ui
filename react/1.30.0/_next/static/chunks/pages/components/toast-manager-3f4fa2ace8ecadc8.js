(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[9267],{61266:function(e,t,n){"use strict";n.r(t),n.d(t,{default:function(){return x}});var a=n(52322),o=n(45392),s=n(16959),r=n(67569),c=n(2784);function i(e){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function l(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var a,o,s,r,c=[],i=!0,l=!1;try{if(s=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(a=s.call(n)).done)&&(c.push(a.value),c.length!==t);i=!0);}catch(e){l=!0,o=e}finally{try{if(!i&&null!=n.return&&(r=n.return(),Object(r)!==r))return}finally{if(l)throw o}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return d(e,t)}}(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a}function p(e,t,n){var a;return(a=function(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==i(a))return a;throw TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(t,"string"),(t="symbol"===i(a)?a:String(a))in e)?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function h(){return(h=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var u=function(e){return c.createElement(r.Box,h({mb:"4x"},e))},m=function(){var e=(0,c.useRef)(0),t=(0,r.useToastManager)();return c.createElement(r.Button,{onClick:function(){var n="bottom-right",a=n.includes("top"),o=t.state[n];if(o.length>=3){var s=a?o[o.length-1]:o[0];t.close(s.id,n)}t(function(e){var t=e.data,n=e.onClose;e.placement;var o=p(p({},a?"pb":"pt","var(--data-toast-spacing)"),"width",320);return c.createElement(r.Box,{sx:o},c.createElement(r.Toast,{isClosable:!0,onClose:n},"This is a toast message #",t.index+1))},{placement:n,duration:3e4,data:{index:e.current++}})}},"Notify Toast")},g=function(){var e=l((0,c.useState)(16),2),t=e[0],n=e[1],a=l((0,c.useState)(16),2),o=a[0],s=a[1];return c.createElement(c.Fragment,null,c.createElement(u,null,c.createElement(r.Box,{mb:"2x"},c.createElement(r.TextLabel,null,"The space to the edge of the screen")),c.createElement(r.Flex,{alignItems:"center",columnGap:"2x",mb:"4x"},c.createElement("input",{type:"range",min:0,max:64,step:4,onChange:function(e){n(parseInt(e.target.value))},value:t}),t,"px")),c.createElement(u,null,c.createElement(r.Box,{mb:"2x"},c.createElement(r.TextLabel,null,"The space between toasts")),c.createElement(r.Flex,{alignItems:"center",columnGap:"2x",mb:"4x"},c.createElement("input",{type:"range",min:0,max:32,step:4,onChange:function(e){s(parseInt(e.target.value))},value:o}),o,"px")),c.createElement(r.Divider,{my:"4x"}),c.createElement(r.ToastManager,{TransitionProps:{sx:{"--data-toast-spacing":"".concat(o,"px"),'[data-toast-placement^="top"] > &:first-of-type':{mt:t},'[data-toast-placement^="bottom"] > &:last-of-type':{mb:t},'[data-toast-placement$="left"] > &':{ml:t},'[data-toast-placement$="right"] > &':{mr:t}}}},c.createElement(m,null)))};function f(e){var t=Object.assign({div:"div",h1:"h1",p:"p",code:"code",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",h3:"h3",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,o.ah)(),e.components);return(0,a.jsxs)(t.div,{className:"main-content",id:"main-content",children:["\n","\n",(0,a.jsx)(t.h1,{id:"toastmanager",children:"ToastManager"}),"\n",(0,a.jsxs)(t.p,{children:[(0,a.jsx)(t.code,{children:"ToastManager"})," allows you to create and manage toasts in your React application. Toasts are small messages that appear temporarily on the screen to inform the user about important events or actions."]}),"\n",(0,a.jsxs)(t.h2,{id:"setup",children:["Setup",(0,a.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#setup",children:(0,a.jsx)(t.svg,{children:(0,a.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(t.p,{children:["To use ",(0,a.jsx)(t.code,{children:"ToastManager"}),", you should wrap your root component with it, along with the ",(0,a.jsx)(t.code,{children:"TonicProvider"})," component, as shown in the example below:"]}),"\n",(0,a.jsx)(t.pre,{disabled:!0,children:(0,a.jsx)(t.code,{className:"language-jsx",children:"import { TonicProvider, ToastManager } from '@tonic-ui/react';\n\nfunction App() {\n  return (\n    <TonicProvider>\n      <ToastManager\n        TransitionProps={{\n          sx: {\n            '[data-toast-placement^=\"top\"] > &:first-of-type': {\n              mt: '4x', // the space to the top edge of the screen\n            },\n            '[data-toast-placement^=\"bottom\"] > &:last-of-type': {\n              mb: '4x', // the space to the bottom edge of the screen\n            },\n            '[data-toast-placement$=\"left\"] > &': {\n              ml: '4x', // the space to the left edge of the screen\n            },\n            '[data-toast-placement$=\"right\"] > &': {\n              mr: '4x', // the space to the right edge of the screen\n            },\n          },\n        }}\n        placement=\"bottom-right\"\n      >\n        {/* Your app goes here */}\n      </ToastManager>\n    </TonicProvider>\n  );\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["Once ",(0,a.jsx)(t.code,{children:"ToastManager"})," is set up, you can use the ",(0,a.jsx)(t.code,{children:"useToastManager"})," Hook to create and manage toasts from any component:"]}),"\n",(0,a.jsx)(t.pre,{disabled:!0,children:(0,a.jsx)(t.code,{className:"language-jsx",children:"import { useToastManager } from '@tonic-ui/react';\n\nfunction MyComponent() {\n  const toast = useToastManager();\n  const handleClickOpenToast = () => {\n    const render = ({ onClose, placement }) => {\n      const isTop = placement.includes('top');\n      const toastSpacingKey = isTop ? 'pb' : 'pt';\n      const styleProps = {\n        [toastSpacingKey]: '2x',\n        width: 320,\n      };\n\n      return (\n        <Box sx={styleProps}>\n          <Toast isClosable onClose={onClose}>\n            This is a toast notification\n          </Toast>\n        </Box>\n      );\n    });\n    const options = {\n      placement: 'bottom-right',\n      duration: 5000,\n    };\n    toast(render, options);\n  };\n\n  return (\n    <Button onClick={handleClickOpenToast}>\n      Open Toast\n    </Button>\n  );\n}\n"})}),"\n",(0,a.jsxs)(t.p,{children:["The ",(0,a.jsx)(t.code,{children:"toast"})," method takes a function that returns the toast element to be displayed. The function can also receive an ",(0,a.jsx)(t.code,{children:"onClose"})," function and the ",(0,a.jsx)(t.code,{children:"placement"})," string. The ",(0,a.jsx)(t.code,{children:"onClose"})," function can be used to remove the toast when the user clicks on a close button or after a certain time period."]}),"\n",(0,a.jsx)(t.pre,{disabled:!0,children:(0,a.jsx)(t.code,{className:"language-jsx",children:"const id = toast(({ onClose, placement }) => (\n  <Toast isClosable onClose={onClose}>\n    This is a toast notification\n  </Toast>\n));\n"})}),"\n",(0,a.jsxs)(t.p,{children:["To remove a toast, you can either call the ",(0,a.jsx)(t.code,{children:"onClose"})," function or use the ",(0,a.jsx)(t.code,{children:"toast.remove"})," method, which takes the toast's unique id as an argument."]}),"\n",(0,a.jsx)(t.pre,{disabled:!0,children:(0,a.jsx)(t.code,{className:"language-jsx",children:"toast.remove(id);\n"})}),"\n",(0,a.jsxs)(t.p,{children:["See the ",(0,a.jsx)(t.a,{href:"./toast-manager/useToastManager",children:"useToastManager"})," Hook for detailed usage."]}),"\n",(0,a.jsxs)(t.h2,{id:"commonly-asked-questions",children:["Commonly Asked Questions",(0,a.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#commonly-asked-questions",children:(0,a.jsx)(t.svg,{children:(0,a.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(t.h3,{id:"control-the-spacing-to-the-edges-of-the-screen",children:["Control the spacing to the edges of the screen",(0,a.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#control-the-spacing-to-the-edges-of-the-screen",children:(0,a.jsx)(t.svg,{children:(0,a.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(t.p,{children:["To control the spacing to the edges of the screen, make use of the ",(0,a.jsx)(t.code,{children:"TransitionProps"})," prop in the ",(0,a.jsx)(t.code,{children:"ToastManager"}),". Pass the ",(0,a.jsx)(t.code,{children:"sx"})," prop to the transition component with your preferred spacing."]}),"\n",(0,a.jsx)(t.pre,{disabled:!0,children:(0,a.jsx)(t.code,{className:"language-jsx",children:"<ToastManager\n  TransitionProps={{\n    sx: {\n      '[data-toast-placement^=\"top\"] > &:first-of-type': {\n        mt: edgeSpacing, // the space to the top edge of the screen\n      },\n      '[data-toast-placement^=\"bottom\"] > &:last-of-type': {\n        mb: edgeSpacing, // the space to the bottom edge of the screen\n      },\n      '[data-toast-placement$=\"left\"] > &': {\n        ml: edgeSpacing, // the space to the left edge of the screen\n      },\n      '[data-toast-placement$=\"right\"] > &': {\n        mr: edgeSpacing, // the space to the right edge of the screen\n      },\n    },\n  }}\n>\n  <ToastApp />\n</ToastManager>\n"})}),"\n",(0,a.jsx)(s.Z,{component:g,file:{data:'import { Box, Button, Divider, Flex, TextLabel, Toast, ToastManager, useToastManager } from \'@tonic-ui/react\';\nimport React, { useRef, useState } from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst ToastApp = () => {\n  const counterRef = useRef(0);\n  const toast = useToastManager();\n\n  return (\n    <Button\n      onClick={() => {\n        const placement = \'bottom-right\';\n        const isTop = placement.includes(\'top\');\n        const render = ({ data, onClose, placement }) => {\n          const toastSpacingKey = isTop ? \'pb\' : \'pt\';\n          const styleProps = {\n            [toastSpacingKey]: \'var(--data-toast-spacing)\',\n            width: 320,\n          };\n          return (\n            <Box sx={styleProps}>\n              <Toast isClosable onClose={onClose}>\n                This is a toast message #{data.index + 1}\n              </Toast>\n            </Box>\n          );\n        };\n\n        // Remove the oldest toast if there are more than 3 toasts\n        const toastsOfPlacement = toast.state[placement];\n        if (toastsOfPlacement.length >= 3) {\n          const oldestToast = isTop ? toastsOfPlacement[toastsOfPlacement.length - 1] : toastsOfPlacement[0];\n          toast.close(oldestToast.id, placement);\n        }\n\n        const options = {\n          placement: placement,\n          duration: 30 * 1000,\n          data: { // user-defined data\n            index: counterRef.current++,\n          },\n        };\n        toast(render, options);\n      }}\n    >\n      Notify Toast\n    </Button>\n  );\n};\n\nconst App = () => {\n  const [edgeSpacing, setEdgeSpacing] = useState(16);\n  const [toastSpacing, setToastSpacing] = useState(16);\n\n  return (\n    <>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            The space to the edge of the screen\n          </TextLabel>\n        </Box>\n        <Flex alignItems="center" columnGap="2x" mb="4x">\n          <input\n            type="range"\n            min={0}\n            max={64}\n            step={4}\n            onChange={(event) => {\n              const value = parseInt(event.target.value);\n              setEdgeSpacing(value);\n            }}\n            value={edgeSpacing}\n          />\n          {edgeSpacing}px\n        </Flex>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            The space between toasts\n          </TextLabel>\n        </Box>\n        <Flex alignItems="center" columnGap="2x" mb="4x">\n          <input\n            type="range"\n            min={0}\n            max={32}\n            step={4}\n            onChange={(event) => {\n              const value = parseInt(event.target.value);\n              setToastSpacing(value);\n            }}\n            value={toastSpacing}\n          />\n          {toastSpacing}px\n        </Flex>\n      </FormGroup>\n      <Divider my="4x" />\n      <ToastManager\n        TransitionProps={{\n          sx: {\n            \'--data-toast-spacing\': `${toastSpacing}px`,\n            \'[data-toast-placement^="top"] > &:first-of-type\': {\n              mt: edgeSpacing, // the space to the top edge of the screen\n            },\n            \'[data-toast-placement^="bottom"] > &:last-of-type\': {\n              mb: edgeSpacing, // the space to the bottom edge of the screen\n            },\n            \'[data-toast-placement$="left"] > &\': {\n              ml: edgeSpacing, // the space to the left edge of the screen\n            },\n            \'[data-toast-placement$="right"] > &\': {\n              mr: edgeSpacing, // the space to the right edge of the screen\n            },\n          },\n        }}\n      >\n        <ToastApp />\n      </ToastManager>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/toast-manager/index.page.mdx"},sandbox:{files:{},raw:'import { Box, Button, Divider, Flex, TextLabel, Toast, ToastManager, useToastManager } from \'@tonic-ui/react\';\nimport React, { useRef, useState } from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst ToastApp = () => {\n  const counterRef = useRef(0);\n  const toast = useToastManager();\n\n  return (\n    <Button\n      onClick={() => {\n        const placement = \'bottom-right\';\n        const isTop = placement.includes(\'top\');\n        const render = ({ data, onClose, placement }) => {\n          const toastSpacingKey = isTop ? \'pb\' : \'pt\';\n          const styleProps = {\n            [toastSpacingKey]: \'var(--data-toast-spacing)\',\n            width: 320,\n          };\n          return (\n            <Box sx={styleProps}>\n              <Toast isClosable onClose={onClose}>\n                This is a toast message #{data.index + 1}\n              </Toast>\n            </Box>\n          );\n        };\n\n        // Remove the oldest toast if there are more than 3 toasts\n        const toastsOfPlacement = toast.state[placement];\n        if (toastsOfPlacement.length >= 3) {\n          const oldestToast = isTop ? toastsOfPlacement[toastsOfPlacement.length - 1] : toastsOfPlacement[0];\n          toast.close(oldestToast.id, placement);\n        }\n\n        const options = {\n          placement: placement,\n          duration: 30 * 1000,\n          data: { // user-defined data\n            index: counterRef.current++,\n          },\n        };\n        toast(render, options);\n      }}\n    >\n      Notify Toast\n    </Button>\n  );\n};\n\nconst App = () => {\n  const [edgeSpacing, setEdgeSpacing] = useState(16);\n  const [toastSpacing, setToastSpacing] = useState(16);\n\n  return (\n    <>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            The space to the edge of the screen\n          </TextLabel>\n        </Box>\n        <Flex alignItems="center" columnGap="2x" mb="4x">\n          <input\n            type="range"\n            min={0}\n            max={64}\n            step={4}\n            onChange={(event) => {\n              const value = parseInt(event.target.value);\n              setEdgeSpacing(value);\n            }}\n            value={edgeSpacing}\n          />\n          {edgeSpacing}px\n        </Flex>\n      </FormGroup>\n      <FormGroup>\n        <Box mb="2x">\n          <TextLabel>\n            The space between toasts\n          </TextLabel>\n        </Box>\n        <Flex alignItems="center" columnGap="2x" mb="4x">\n          <input\n            type="range"\n            min={0}\n            max={32}\n            step={4}\n            onChange={(event) => {\n              const value = parseInt(event.target.value);\n              setToastSpacing(value);\n            }}\n            value={toastSpacing}\n          />\n          {toastSpacing}px\n        </Flex>\n      </FormGroup>\n      <Divider my="4x" />\n      <ToastManager\n        TransitionProps={{\n          sx: {\n            \'--data-toast-spacing\': `${toastSpacing}px`,\n            \'[data-toast-placement^="top"] > &:first-of-type\': {\n              mt: edgeSpacing, // the space to the top edge of the screen\n            },\n            \'[data-toast-placement^="bottom"] > &:last-of-type\': {\n              mb: edgeSpacing, // the space to the bottom edge of the screen\n            },\n            \'[data-toast-placement$="left"] > &\': {\n              ml: edgeSpacing, // the space to the left edge of the screen\n            },\n            \'[data-toast-placement$="right"] > &\': {\n              mr: edgeSpacing, // the space to the right edge of the screen\n            },\n          },\n        }}\n      >\n        <ToastApp />\n      </ToastManager>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,a.jsxs)(t.h2,{id:"props",children:["Props",(0,a.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,a.jsx)(t.svg,{children:(0,a.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(t.h3,{id:"toastmanager-1",children:["ToastManager",(0,a.jsx)(t.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#toastmanager-1",children:(0,a.jsx)(t.svg,{children:(0,a.jsx)(t.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,a.jsxs)(t.table,{children:[(0,a.jsx)(t.thead,{children:(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.th,{align:"left",children:"Name"}),(0,a.jsx)(t.th,{align:"left",children:"Type"}),(0,a.jsx)(t.th,{align:"left",children:"Default"}),(0,a.jsx)(t.th,{align:"left",children:"Description"})]})}),(0,a.jsxs)(t.tbody,{children:[(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{align:"left",children:"TransitionComponent"}),(0,a.jsx)(t.td,{align:"left",children:"ElementType"}),(0,a.jsx)(t.td,{align:"left",children:"ToastTransition"}),(0,a.jsx)(t.td,{align:"left",children:"The component used for the transition."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{align:"left",children:"TransitionProps"}),(0,a.jsx)(t.td,{align:"left",children:"object"}),(0,a.jsx)(t.td,{align:"left"}),(0,a.jsxs)(t.td,{align:"left",children:["Props applied to the ",(0,a.jsx)(t.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{align:"left",children:"children"}),(0,a.jsxs)(t.td,{align:"left",children:["ReactNode | ",(0,a.jsx)(t.code,{children:"(context) => ReactNode"})]}),(0,a.jsx)(t.td,{align:"left"}),(0,a.jsx)(t.td,{align:"left",children:"A function child can be used intead of a React element. This function is called with the context object."})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{align:"left",children:"containerRef"}),(0,a.jsx)(t.td,{align:"left",children:"RefObject"}),(0,a.jsx)(t.td,{align:"left"}),(0,a.jsxs)(t.td,{align:"left",children:["A ",(0,a.jsx)(t.code,{children:"ref"})," to the component where the toasts will be rendered."]})]}),(0,a.jsxs)(t.tr,{children:[(0,a.jsx)(t.td,{align:"left",children:"placement"}),(0,a.jsx)(t.td,{align:"left",children:"string"}),(0,a.jsx)(t.td,{align:"left",children:"'bottom-right'"}),(0,a.jsx)(t.td,{align:"left",children:"The default placement to place toasts. One of: 'top', 'top-right', 'top-left', 'bottom', 'bottom-left', 'bottom-right'"})]})]})]})]})}var x=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=Object.assign({},(0,o.ah)(),e.components).wrapper;return t?(0,a.jsx)(t,Object.assign({},e,{children:(0,a.jsx)(f,e)})):f(e)}},16959:function(e,t,n){"use strict";n.d(t,{Z:function(){return j}});var a=n(67569),o=n(49427),s=n(5632),r=n(2784),c=n(65245),i=n(16245),l=n(76761),d=n(73205),p=n(98107),h=["size"];function u(){return(u=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}var m=(0,r.forwardRef)(function(e,t){var n=e.size,o=function(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],!(t.indexOf(n)>=0)&&Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,h);return r.createElement(a.SVGIcon,u({size:n,viewBox:"0 0 1024 1024"},o),r.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});m.displayName="CodeSandboxIcon";var g=n(44285);function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var a,o,s,r,c=[],i=!0,l=!1;try{if(s=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;i=!1}else for(;!(i=(a=s.call(n)).done)&&(c.push(a.value),c.length!==t);i=!0);}catch(e){l=!0,o=e}finally{try{if(!i&&null!=n.return&&(r=n.return(),Object(r)!==r))return}finally{if(l)throw o}}return c}}(e,t)||function(e,t){if(e){if("string"==typeof e)return x(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);if("Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return x(e,t)}}(e,t)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function x(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,a=Array(t);n<t;n++)a[n]=e[n];return a}var b={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},y=function(e){var t=e.component,n=e.file,h=e.sandbox,u=(0,s.useRouter)(),x=f((0,r.useReducer)(function(e){return!e},!1),2),y=x[0],j=x[1],T=f((0,a.useColorMode)(),1)[0],v={dark:l.y,light:l.q}[T],S=f((0,o.useToggle)(!1),2),C=S[0],E=S[1],k=(0,i.Z)(null==n?void 0:n.data),O=k.onCopy,w=k.hasCopied,B=(0,r.useCallback)(function(){O()},[O]),M=(0,r.useCallback)(function(){(0,d.b)(h)},[h]),P=(0,r.useCallback)(function(){j(),E(!1)},[j,E]);return r.createElement(c.nu,{code:null==n?void 0:n.data,disabled:!0,language:"jsx",theme:v},r.createElement(a.Box,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[T],p:"4x"},r.createElement(a.Box,{fontSize:"sm",lineHeight:"sm"},r.createElement(r.Fragment,{key:y},r.createElement(t,null)))),r.createElement(a.Flex,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},r.createElement(g.Z,{"data-track":C?"CodeBlock|hide_source|".concat((0,p.Z)({path:u.pathname})):"CodeBlock|show_source|".concat((0,p.Z)({path:u.pathname})),onClick:E},r.createElement(a.Tooltip,{label:C?"Hide the source":"Show the source"},r.createElement(a.Icon,{icon:"code",size:{sm:"5x",md:"4x"}}))),r.createElement(g.Z,{"data-track":"CodeBlock|copy_source|".concat((0,p.Z)({path:u.pathname})),onClick:B},r.createElement(a.Tooltip,{label:w?"Copied":"Copy the source"},r.createElement(a.Icon,{icon:"file-copy-o",size:{sm:"5x",md:"4x"}}))),r.createElement(g.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(u.pathname),onClick:M},r.createElement(a.Tooltip,{label:"Edit in CodeSandbox"},r.createElement(m,{size:{sm:"5x",md:"4x"}}))),r.createElement(g.Z,{"data-track":"CodeBlock|reset|".concat(u.pathname),onClick:P},r.createElement(a.Tooltip,{label:"Reset the demo"},r.createElement(a.Icon,{icon:"redo",size:{sm:"5x",md:"4x"}})))),r.createElement(a.Fade,{in:C},r.createElement(a.Collapse,{in:C,unmountOnExit:!0},r.createElement(c.uz,{style:b}))))};y.displayName="Demo";var j=y},37958:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/toast-manager",function(){return n(61266)}])}},function(e){e.O(0,[2888,9774,179],function(){return e(e.s=37958)}),_N_E=e.O()}]);