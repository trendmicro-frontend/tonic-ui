(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5836],{31167:function(e,r,o){"use strict";o.r(r),o.d(r,{default:function(){return C}});var t=o(52322),n=o(45392),l=o(16959),d=o(67569),a=o(2784);function i(){return(i=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var o=arguments[r];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e}).apply(this,arguments)}function c(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var t,n,l,d,a=[],i=!0,c=!1;try{if(l=(o=o.call(e)).next,0===r){if(Object(o)!==o)return;i=!1}else for(;!(i=(t=l.call(o)).done)&&(a.push(t.value),a.length!==r);i=!0);}catch(e){c=!0,n=e}finally{try{if(!i&&null!=o.return&&(d=o.return(),Object(d)!==d))return}finally{if(c)throw n}}return a}}(e,r)||function(e,r){if(e){if("string"==typeof e)return s(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return s(e,r)}}(e,r)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,r){(null==r||r>e.length)&&(r=e.length);for(var o=0,t=Array(r);o<r;o++)t[o]=e[o];return t}var u=function(e){var r=c((0,d.useColorMode)(),1)[0],o=c((0,d.useColorStyle)({colorMode:r}),1)[0];return a.createElement(d.Flex,i({px:"4x",py:"3x",alignItems:"flex-start",justifyContent:"center",flexDirection:"column",backgroundColor:o.background.secondary},e))},b=function(){var e=(0,d.useTheme)(),r={dark:"gray:60",light:"gray:30"}[c((0,d.useColorMode)(),1)[0]],o="solid",t=["thin","medium","thick"],n=c((0,a.useState)(t[0]),2),l=n[0],i=n[1],s=e.borders[l]||l,b=e.colors[r]||r;return a.createElement(a.Fragment,null,a.createElement(d.Flex,{alignItems:"center",mb:"5x"},a.createElement(d.TextLabel,null,"border ="),a.createElement(d.Space,{width:"2x"}),a.createElement(d.Stack,{direction:"row",spacing:"2x"},t.map(function(e){return a.createElement(d.Button,{key:e,onClick:function(){return i(e)},variant:e===l?"primary":"secondary"},a.createElement(d.Text,{fontFamily:"mono"},e))}))),a.createElement(d.Grid,{templateColumns:"repeat(auto-fill, minmax(240px, 1fr))",columnGap:"6x",rowGap:"6x"},a.createElement(u,{border:l,borderColor:r,borderStyle:o},a.createElement(d.Text,null,'border="',s,'"'),a.createElement(d.Text,null,'borderColor="',b,'"'),a.createElement(d.Text,null,'borderStyle="',o,'"')),a.createElement(u,{borderTop:l,borderTopColor:r,borderTopStyle:o},a.createElement(d.Text,null,'borderTop="',s,'"'),a.createElement(d.Text,null,'borderTopColor="',b,'"'),a.createElement(d.Text,null,'borderTopStyle="',o,'"')),a.createElement(u,{borderRight:l,borderRightColor:r,borderRightStyle:o},a.createElement(d.Text,null,'borderRight="',s,'"'),a.createElement(d.Text,null,'borderRightColor="',b,'"'),a.createElement(d.Text,null,'borderRightStyle="',o,'"')),a.createElement(u,{borderBottom:l,borderBottomColor:r,borderBottomStyle:o},a.createElement(d.Text,null,'borderBottom="',s,'"'),a.createElement(d.Text,null,'borderBottomColor="',b,'"'),a.createElement(d.Text,null,'borderBottomStyle="',o,'"')),a.createElement(u,{borderLeft:l,borderLeftColor:r,borderLeftStyle:o},a.createElement(d.Text,null,'borderLeft="',s,'"'),a.createElement(d.Text,null,'borderLeftColor="',b,'"'),a.createElement(d.Text,null,'borderLeftStyle="',o,'"'))))};function h(){return(h=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var o=arguments[r];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e}).apply(this,arguments)}function x(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var t,n,l,d,a=[],i=!0,c=!1;try{if(l=(o=o.call(e)).next,0===r){if(Object(o)!==o)return;i=!1}else for(;!(i=(t=l.call(o)).done)&&(a.push(t.value),a.length!==r);i=!0);}catch(e){c=!0,n=e}finally{try{if(!i&&null!=o.return&&(d=o.return(),Object(d)!==d))return}finally{if(c)throw n}}return a}}(e,r)||function(e,r){if(e){if("string"==typeof e)return m(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return m(e,r)}}(e,r)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(e,r){(null==r||r>e.length)&&(r=e.length);for(var o=0,t=Array(r);o<r;o++)t[o]=e[o];return t}var p=function(e){var r=x((0,d.useColorMode)(),1)[0],o=x((0,d.useColorStyle)({colorMode:r}),1)[0];return a.createElement(d.Flex,h({px:"4x",py:"3x",alignItems:"flex-start",justifyContent:"center",flexDirection:"column",backgroundColor:o.background.secondary},e))},f=function(){var e=(0,d.useTheme)(),r={dark:"gray:60",light:"gray:30"}[x((0,d.useColorMode)(),1)[0]],o=[1,2,3,4,5],t=x((0,a.useState)(o[0]),2),n=t[0],l=t[1],i=e.borders[n]||n,c=e.colors[r]||r;return a.createElement(a.Fragment,null,a.createElement(d.Flex,{alignItems:"center",mb:"5x"},a.createElement(d.TextLabel,null,"border ="),a.createElement(d.Space,{width:"2x"}),a.createElement(d.Stack,{direction:"row",spacing:"2x"},o.map(function(e){return a.createElement(d.Button,{key:e,onClick:function(){return l(e)},variant:e===n?"primary":"secondary"},a.createElement(d.Text,{fontFamily:"mono"},e))}))),a.createElement(d.Grid,{templateColumns:"repeat(auto-fill, minmax(240px, 1fr))",columnGap:"6x",rowGap:"6x"},a.createElement(p,{border:n,borderColor:r},a.createElement(d.Text,null,'border="',i,'"'),a.createElement(d.Text,null,'borderColor="',c,'"')),a.createElement(p,{borderTop:n,borderTopColor:r},a.createElement(d.Text,null,'borderTop="',i,'"'),a.createElement(d.Text,null,'borderTopColor="',c,'"')),a.createElement(p,{borderRight:n,borderRightColor:r},a.createElement(d.Text,null,'borderRight="',i,'"'),a.createElement(d.Text,null,'borderRightColor="',c,'"')),a.createElement(p,{borderBottom:n,borderBottomColor:r},a.createElement(d.Text,null,'borderBottom="',i,'"'),a.createElement(d.Text,null,'borderBottomColor="',c,'"')),a.createElement(p,{borderLeft:n,borderLeftColor:r},a.createElement(d.Text,null,'borderLeft="',i,'"'),a.createElement(d.Text,null,'borderLeftColor="',c,'"'))))},y=o(13002);function T(e){var r=Object.assign({div:"div",h1:"h1",h2:"h2",a:"a",svg:"svg",use:"use",p:"p",pre:"pre",code:"code",h3:"h3",ul:"ul",li:"li"},(0,n.ah)(),e.components);return(0,t.jsxs)(r.div,{className:"main-content",id:"main-content",children:["\n","\n","\n","\n",(0,t.jsx)(r.h1,{id:"borders",children:"Borders"}),"\n",(0,t.jsxs)(r.h2,{id:"design-tokens",children:["Design Tokens",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#design-tokens",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsx)(y.Z,{theme:"borders"}),"\n",(0,t.jsxs)(r.h2,{id:"examples",children:["Examples",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#examples",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsx)(r.p,{children:"The border shorthand property sets all the border properties in one declaration."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-js",children:'/* style */\nborder="solid"\n\n/* width | style */\nborder="2px dotted"\n\n/* style | color */\nborder="outset #f33"\n\n/* width | style | color */\nborder="medium dashed green"\n\n/* Global values */\nborder="inherit"\nborder="initial"\nborder="unset"\n'})}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"border"})," property may be specified using one, two, or three of the values listed below. The order of the value does not matter. See ",(0,t.jsx)(r.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/border",children:"border"})," in MDN for more details."]}),"\n",(0,t.jsxs)(r.p,{children:["Note: The border will be invisible if its style is not defined. This is because the style defaults to ",(0,t.jsx)(r.code,{children:"none"}),"."]}),"\n",(0,t.jsxs)(r.h3,{id:"values",children:["Values",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#values",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"<border-color>"}),"\nSets the color of the border. Defaults to ",(0,t.jsx)(r.code,{children:"currentcolor"})," if absent."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"<border-style>"}),"\nSets the style of the border. Defaults to ",(0,t.jsx)(r.code,{children:"none"})," if absent."]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"<border-width>"}),"\nSets the thickness of the border. Defaults to ",(0,t.jsx)(r.code,{children:"medium"})," if absent."]}),"\n",(0,t.jsxs)(r.h3,{id:"nonnegative-length",children:["Nonnegative length",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#nonnegative-length",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsxs)(r.p,{children:["If the border is a numeric value defined in the theme, the ",(0,t.jsx)(r.code,{children:"solid"})," border style will be applied as a shorthand for the ",(0,t.jsx)(r.code,{children:"borderWidth"})," and ",(0,t.jsx)(r.code,{children:"borderStyle"})," properties."]}),"\n",(0,t.jsx)(l.Z,{component:f,file:{data:'/* eslint-disable react/no-unescaped-entities */\nimport { Button, Flex, Grid, Space, Stack, Text, TextLabel, useColorMode, useColorStyle, useTheme } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst Block = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex\n      px="4x"\n      py="3x"\n      alignItems="flex-start"\n      justifyContent="center"\n      flexDirection="column"\n      backgroundColor={colorStyle.background.secondary}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const theme = useTheme();\n  const [colorMode] = useColorMode();\n  const borderColor = {\n    dark: \'gray:60\',\n    light: \'gray:30\',\n  }[colorMode];\n  const borderWidths = [1, 2, 3, 4, 5];\n  const [borderWidth, setBorderWidth] = useState(borderWidths[0]);\n  const borderValue = theme.borders[borderWidth] || borderWidth;\n  const borderColorValue = theme.colors[borderColor] || borderColor;\n\n  return (\n    <>\n      <Flex alignItems="center" mb="5x">\n        <TextLabel>border =</TextLabel>\n        <Space width="2x" />\n        <Stack direction="row" spacing="2x">\n          {borderWidths.map((width) => (\n            <Button\n              key={width}\n              onClick={() => setBorderWidth(width)}\n              variant={width === borderWidth ? \'primary\' : \'secondary\'}\n            >\n              <Text fontFamily="mono">{width}</Text>\n            </Button>\n          ))}\n        </Stack>\n      </Flex>\n      <Grid\n        templateColumns="repeat(auto-fill, minmax(240px, 1fr))"\n        columnGap="6x"\n        rowGap="6x"\n      >\n        <Block\n          border={borderWidth}\n          borderColor={borderColor}\n        >\n          <Text>border="{borderValue}"</Text>\n          <Text>borderColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderTop={borderWidth}\n          borderTopColor={borderColor}\n        >\n          <Text>borderTop="{borderValue}"</Text>\n          <Text>borderTopColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderRight={borderWidth}\n          borderRightColor={borderColor}\n        >\n          <Text>borderRight="{borderValue}"</Text>\n          <Text>borderRightColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderBottom={borderWidth}\n          borderBottomColor={borderColor}\n        >\n          <Text>borderBottom="{borderValue}"</Text>\n          <Text>borderBottomColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderLeft={borderWidth}\n          borderLeftColor={borderColor}\n        >\n          <Text>borderLeft="{borderValue}"</Text>\n          <Text>borderLeftColor="{borderColorValue}"</Text>\n        </Block>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/theme/borders/index.page.mdx"},sandbox:{files:{},raw:'/* eslint-disable react/no-unescaped-entities */\nimport { Button, Flex, Grid, Space, Stack, Text, TextLabel, useColorMode, useColorStyle, useTheme } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst Block = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex\n      px="4x"\n      py="3x"\n      alignItems="flex-start"\n      justifyContent="center"\n      flexDirection="column"\n      backgroundColor={colorStyle.background.secondary}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const theme = useTheme();\n  const [colorMode] = useColorMode();\n  const borderColor = {\n    dark: \'gray:60\',\n    light: \'gray:30\',\n  }[colorMode];\n  const borderWidths = [1, 2, 3, 4, 5];\n  const [borderWidth, setBorderWidth] = useState(borderWidths[0]);\n  const borderValue = theme.borders[borderWidth] || borderWidth;\n  const borderColorValue = theme.colors[borderColor] || borderColor;\n\n  return (\n    <>\n      <Flex alignItems="center" mb="5x">\n        <TextLabel>border =</TextLabel>\n        <Space width="2x" />\n        <Stack direction="row" spacing="2x">\n          {borderWidths.map((width) => (\n            <Button\n              key={width}\n              onClick={() => setBorderWidth(width)}\n              variant={width === borderWidth ? \'primary\' : \'secondary\'}\n            >\n              <Text fontFamily="mono">{width}</Text>\n            </Button>\n          ))}\n        </Stack>\n      </Flex>\n      <Grid\n        templateColumns="repeat(auto-fill, minmax(240px, 1fr))"\n        columnGap="6x"\n        rowGap="6x"\n      >\n        <Block\n          border={borderWidth}\n          borderColor={borderColor}\n        >\n          <Text>border="{borderValue}"</Text>\n          <Text>borderColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderTop={borderWidth}\n          borderTopColor={borderColor}\n        >\n          <Text>borderTop="{borderValue}"</Text>\n          <Text>borderTopColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderRight={borderWidth}\n          borderRightColor={borderColor}\n        >\n          <Text>borderRight="{borderValue}"</Text>\n          <Text>borderRightColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderBottom={borderWidth}\n          borderBottomColor={borderColor}\n        >\n          <Text>borderBottom="{borderValue}"</Text>\n          <Text>borderBottomColor="{borderColorValue}"</Text>\n        </Block>\n        <Block\n          borderLeft={borderWidth}\n          borderLeftColor={borderColor}\n        >\n          <Text>borderLeft="{borderValue}"</Text>\n          <Text>borderLeftColor="{borderColorValue}"</Text>\n        </Block>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,t.jsxs)(r.h3,{id:"keyword",children:["Keyword",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#keyword",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"thin"}),", ",(0,t.jsx)(r.code,{children:"medium"}),", and ",(0,t.jsx)(r.code,{children:"thick"})," are keywords that indicate the border width. You can use them in the ",(0,t.jsx)(r.code,{children:"border"})," property, but you have to set the ",(0,t.jsx)(r.code,{children:"borderStyle"})," property to ",(0,t.jsx)(r.code,{children:"solid"})," as well."]}),"\n",(0,t.jsxs)(r.p,{children:["Note: Because the specification doesn't define the exact thickness denoted by each keyword, the precise result when using one of them is implementation-specific. Nevertheless, they always follow the pattern ",(0,t.jsx)(r.code,{children:"thin ≤ medium ≤ thick"}),", and the values are constant within a single document."]}),"\n",(0,t.jsx)(l.Z,{component:b,file:{data:'/* eslint-disable react/no-unescaped-entities */\nimport { Button, Flex, Grid, Space, Stack, Text, TextLabel, useColorMode, useColorStyle, useTheme } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst Block = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex\n      px="4x"\n      py="3x"\n      alignItems="flex-start"\n      justifyContent="center"\n      flexDirection="column"\n      backgroundColor={colorStyle.background.secondary}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const theme = useTheme();\n  const [colorMode] = useColorMode();\n  const borderColor = {\n    dark: \'gray:60\',\n    light: \'gray:30\',\n  }[colorMode];\n  const borderStyle = \'solid\';\n  const borderWidths = [\'thin\', \'medium\', \'thick\'];\n  const [borderWidth, setBorderWidth] = useState(borderWidths[0]);\n  const borderValue = theme.borders[borderWidth] || borderWidth;\n  const borderColorValue = theme.colors[borderColor] || borderColor;\n\n  return (\n    <>\n      <Flex alignItems="center" mb="5x">\n        <TextLabel>border =</TextLabel>\n        <Space width="2x" />\n        <Stack direction="row" spacing="2x">\n          {borderWidths.map((width) => (\n            <Button\n              key={width}\n              onClick={() => setBorderWidth(width)}\n              variant={width === borderWidth ? \'primary\' : \'secondary\'}\n            >\n              <Text fontFamily="mono">{width}</Text>\n            </Button>\n          ))}\n        </Stack>\n      </Flex>\n      <Grid\n        templateColumns="repeat(auto-fill, minmax(240px, 1fr))"\n        columnGap="6x"\n        rowGap="6x"\n      >\n        <Block\n          border={borderWidth}\n          borderColor={borderColor}\n          borderStyle={borderStyle}\n        >\n          <Text>border="{borderValue}"</Text>\n          <Text>borderColor="{borderColorValue}"</Text>\n          <Text>borderStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderTop={borderWidth}\n          borderTopColor={borderColor}\n          borderTopStyle={borderStyle}\n        >\n          <Text>borderTop="{borderValue}"</Text>\n          <Text>borderTopColor="{borderColorValue}"</Text>\n          <Text>borderTopStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderRight={borderWidth}\n          borderRightColor={borderColor}\n          borderRightStyle={borderStyle}\n        >\n          <Text>borderRight="{borderValue}"</Text>\n          <Text>borderRightColor="{borderColorValue}"</Text>\n          <Text>borderRightStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderBottom={borderWidth}\n          borderBottomColor={borderColor}\n          borderBottomStyle={borderStyle}\n        >\n          <Text>borderBottom="{borderValue}"</Text>\n          <Text>borderBottomColor="{borderColorValue}"</Text>\n          <Text>borderBottomStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderLeft={borderWidth}\n          borderLeftColor={borderColor}\n          borderLeftStyle={borderStyle}\n        >\n          <Text>borderLeft="{borderValue}"</Text>\n          <Text>borderLeftColor="{borderColorValue}"</Text>\n          <Text>borderLeftStyle="{borderStyle}"</Text>\n        </Block>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',path:"pages/theme/borders/index.page.mdx"},sandbox:{files:{},raw:'/* eslint-disable react/no-unescaped-entities */\nimport { Button, Flex, Grid, Space, Stack, Text, TextLabel, useColorMode, useColorStyle, useTheme } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst Block = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Flex\n      px="4x"\n      py="3x"\n      alignItems="flex-start"\n      justifyContent="center"\n      flexDirection="column"\n      backgroundColor={colorStyle.background.secondary}\n      {...props}\n    />\n  );\n};\n\nconst App = () => {\n  const theme = useTheme();\n  const [colorMode] = useColorMode();\n  const borderColor = {\n    dark: \'gray:60\',\n    light: \'gray:30\',\n  }[colorMode];\n  const borderStyle = \'solid\';\n  const borderWidths = [\'thin\', \'medium\', \'thick\'];\n  const [borderWidth, setBorderWidth] = useState(borderWidths[0]);\n  const borderValue = theme.borders[borderWidth] || borderWidth;\n  const borderColorValue = theme.colors[borderColor] || borderColor;\n\n  return (\n    <>\n      <Flex alignItems="center" mb="5x">\n        <TextLabel>border =</TextLabel>\n        <Space width="2x" />\n        <Stack direction="row" spacing="2x">\n          {borderWidths.map((width) => (\n            <Button\n              key={width}\n              onClick={() => setBorderWidth(width)}\n              variant={width === borderWidth ? \'primary\' : \'secondary\'}\n            >\n              <Text fontFamily="mono">{width}</Text>\n            </Button>\n          ))}\n        </Stack>\n      </Flex>\n      <Grid\n        templateColumns="repeat(auto-fill, minmax(240px, 1fr))"\n        columnGap="6x"\n        rowGap="6x"\n      >\n        <Block\n          border={borderWidth}\n          borderColor={borderColor}\n          borderStyle={borderStyle}\n        >\n          <Text>border="{borderValue}"</Text>\n          <Text>borderColor="{borderColorValue}"</Text>\n          <Text>borderStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderTop={borderWidth}\n          borderTopColor={borderColor}\n          borderTopStyle={borderStyle}\n        >\n          <Text>borderTop="{borderValue}"</Text>\n          <Text>borderTopColor="{borderColorValue}"</Text>\n          <Text>borderTopStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderRight={borderWidth}\n          borderRightColor={borderColor}\n          borderRightStyle={borderStyle}\n        >\n          <Text>borderRight="{borderValue}"</Text>\n          <Text>borderRightColor="{borderColorValue}"</Text>\n          <Text>borderRightStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderBottom={borderWidth}\n          borderBottomColor={borderColor}\n          borderBottomStyle={borderStyle}\n        >\n          <Text>borderBottom="{borderValue}"</Text>\n          <Text>borderBottomColor="{borderColorValue}"</Text>\n          <Text>borderBottomStyle="{borderStyle}"</Text>\n        </Block>\n        <Block\n          borderLeft={borderWidth}\n          borderLeftColor={borderColor}\n          borderLeftStyle={borderStyle}\n        >\n          <Text>borderLeft="{borderValue}"</Text>\n          <Text>borderLeftColor="{borderColorValue}"</Text>\n          <Text>borderLeftStyle="{borderStyle}"</Text>\n        </Block>\n      </Grid>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,t.jsxs)(r.h2,{id:"borders-vs-outlines",children:["Borders vs. Outlines",(0,t.jsx)(r.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#borders-vs-outlines",children:(0,t.jsx)(r.svg,{children:(0,t.jsx)(r.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,t.jsxs)(r.p,{children:["Borders and ",(0,t.jsx)(r.a,{href:"./outlines",children:"outlines"})," are very similar. However, outlines differ from borders in the following ways:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsx)(r.li,{children:"Outlines never take up space, as they are drawn outside of an element's content."}),"\n",(0,t.jsx)(r.li,{children:"According to the spec, outlines don't have to be rectangular, although they usually are."}),"\n"]})]})}var C=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},r=Object.assign({},(0,n.ah)(),e.components).wrapper;return r?(0,t.jsx)(r,Object.assign({},e,{children:(0,t.jsx)(T,e)})):T(e)}},16959:function(e,r,o){"use strict";o.d(r,{Z:function(){return C}});var t=o(67569),n=o(49427),l=o(5632),d=o(2784),a=o(65245),i=o(16245),c=o(76761),s=o(73205),u=o(98107),b=["size"];function h(){return(h=Object.assign?Object.assign.bind():function(e){for(var r=1;r<arguments.length;r++){var o=arguments[r];for(var t in o)Object.prototype.hasOwnProperty.call(o,t)&&(e[t]=o[t])}return e}).apply(this,arguments)}var x=(0,d.forwardRef)(function(e,r){var o=e.size,n=function(e,r){if(null==e)return{};var o,t,n=function(e,r){if(null==e)return{};var o,t,n={},l=Object.keys(e);for(t=0;t<l.length;t++)o=l[t],r.indexOf(o)>=0||(n[o]=e[o]);return n}(e,r);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(t=0;t<l.length;t++)o=l[t],!(r.indexOf(o)>=0)&&Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}(e,b);return d.createElement(t.SVGIcon,h({size:o,viewBox:"0 0 1024 1024"},n),d.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});x.displayName="CodeSandboxIcon";var m=o(44285);function p(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var t,n,l,d,a=[],i=!0,c=!1;try{if(l=(o=o.call(e)).next,0===r){if(Object(o)!==o)return;i=!1}else for(;!(i=(t=l.call(o)).done)&&(a.push(t.value),a.length!==r);i=!0);}catch(e){c=!0,n=e}finally{try{if(!i&&null!=o.return&&(d=o.return(),Object(d)!==d))return}finally{if(c)throw n}}return a}}(e,r)||function(e,r){if(e){if("string"==typeof e)return f(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return f(e,r)}}(e,r)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(e,r){(null==r||r>e.length)&&(r=e.length);for(var o=0,t=Array(r);o<r;o++)t[o]=e[o];return t}var y={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},T=function(e){var r=e.component,o=e.file,b=e.sandbox,h=(0,l.useRouter)(),f=p((0,d.useReducer)(function(e){return!e},!1),2),T=f[0],C=f[1],g=p((0,t.useColorMode)(),1)[0],S={dark:c.y,light:c.q}[g],k=p((0,n.useToggle)(!1),2),j=k[0],B=k[1],v=(0,i.Z)(null==o?void 0:o.data),E=v.onCopy,w=v.hasCopied,W=(0,d.useCallback)(function(){E()},[E]),V=(0,d.useCallback)(function(){(0,s.b)(b)},[b]),L=(0,d.useCallback)(function(){C(),B(!1)},[C,B]);return d.createElement(a.nu,{code:null==o?void 0:o.data,disabled:!0,language:"jsx",theme:S},d.createElement(t.Box,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[g],p:"4x"},d.createElement(t.Box,{fontSize:"sm",lineHeight:"sm"},d.createElement(d.Fragment,{key:T},d.createElement(r,null)))),d.createElement(t.Flex,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},d.createElement(m.Z,{"data-track":j?"CodeBlock|hide_source|".concat((0,u.Z)({path:h.pathname})):"CodeBlock|show_source|".concat((0,u.Z)({path:h.pathname})),onClick:B},d.createElement(t.Tooltip,{label:j?"Hide the source":"Show the source"},d.createElement(t.Icon,{icon:"code",size:{sm:"5x",md:"4x"}}))),d.createElement(m.Z,{"data-track":"CodeBlock|copy_source|".concat((0,u.Z)({path:h.pathname})),onClick:W},d.createElement(t.Tooltip,{label:w?"Copied":"Copy the source"},d.createElement(t.Icon,{icon:"file-copy-o",size:{sm:"5x",md:"4x"}}))),d.createElement(m.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(h.pathname),onClick:V},d.createElement(t.Tooltip,{label:"Edit in CodeSandbox"},d.createElement(x,{size:{sm:"5x",md:"4x"}}))),d.createElement(m.Z,{"data-track":"CodeBlock|reset|".concat(h.pathname),onClick:L},d.createElement(t.Tooltip,{label:"Reset the demo"},d.createElement(t.Icon,{icon:"redo",size:{sm:"5x",md:"4x"}})))),d.createElement(t.Fade,{in:j},d.createElement(t.Collapse,{in:j,unmountOnExit:!0},d.createElement(a.uz,{style:y}))))};T.displayName="Demo";var C=T},13002:function(e,r,o){"use strict";var t=o(67569),n=o(2784),l=o(26762),d=o(37428);function a(e,r){return function(e){if(Array.isArray(e))return e}(e)||function(e,r){var o=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=o){var t,n,l,d,a=[],i=!0,c=!1;try{if(l=(o=o.call(e)).next,0===r){if(Object(o)!==o)return;i=!1}else for(;!(i=(t=l.call(o)).done)&&(a.push(t.value),a.length!==r);i=!0);}catch(e){c=!0,n=e}finally{try{if(!i&&null!=o.return&&(d=o.return(),Object(d)!==d))return}finally{if(c)throw n}}return a}}(e,r)||function(e,r){if(e){if("string"==typeof e)return i(e,r);var o=Object.prototype.toString.call(e).slice(8,-1);if("Object"===o&&e.constructor&&(o=e.constructor.name),"Map"===o||"Set"===o)return Array.from(e);if("Arguments"===o||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(o))return i(e,r)}}(e,r)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function i(e,r){(null==r||r>e.length)&&(r=e.length);for(var o=0,t=Array(r);o<r;o++)t[o]=e[o];return t}r.Z=function(e){var r,o=e.theme,i=(0,t.useTheme)(),c=a((0,t.useColorMode)(),1)[0],s=null!==(r=a((0,t.useColorStyle)({colorMode:c}),1)[0][o])&&void 0!==r?r:i[o];return s?(("space"===o||"sizes"===o)&&(s=Object.keys(s).filter(function(e){return!e.toString().match(/[qh]$/)}).reduce(function(e,r){return e[r]=s[r],e},{})),n.createElement(t.Box,{mb:"6x"},n.createElement(l.Z,null,n.createElement("div",{className:"js"},"const ".concat(o," = ").concat((0,d.Z)(s,!1)))))):"Theme field not found"}},37428:function(e,r){"use strict";r.Z=function(e){return JSON.stringify(e,null,2).replace(/"/g,"'").replace(/'(\d+|[a-z]+)':/g,"$1:")}},43057:function(e,r,o){(window.__NEXT_P=window.__NEXT_P||[]).push(["/theme/borders",function(){return o(31167)}])}},function(e){e.O(0,[2888,9774,179],function(){return e(e.s=43057)}),_N_E=e.O()}]);