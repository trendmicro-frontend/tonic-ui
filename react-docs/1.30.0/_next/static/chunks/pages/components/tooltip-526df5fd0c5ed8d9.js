(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2343],{81842:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return V}});var o=t(52322),l=t(45392),r=t(16959),i=t(49427),a=t(67569),c=t(2784);function s(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,r,i,a=[],c=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(o=r.call(t)).done)&&(a.push(o.value),a.length!==n);c=!0);}catch(e){s=!0,l=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw l}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return d(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return d(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function d(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}function p(){return(p=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var u=function(e){return c.createElement(a.Box,p({mb:"4x"},e))},m=function(){var e=s((0,a.useColorMode)(),1)[0],n=s((0,a.useColorStyle)({colorMode:e}),1)[0],t=s((0,i.useToggle)(!0),2),o=t[0],l=t[1];return c.createElement(c.Fragment,null,c.createElement(a.Box,{mb:"4x"},c.createElement(a.Text,{fontSize:"lg",lineHeight:"lg"},"Modifiers")),c.createElement(u,null,c.createElement(a.TextLabel,{display:"inline-flex",alignItems:"center"},c.createElement(a.Checkbox,{checked:o,onChange:function(){return l()}}),c.createElement(a.Space,{width:"2x"}),c.createElement(a.Text,{fontFamily:"mono",whiteSpace:"nowrap"},"Enable flip modifier"))),c.createElement(a.Divider,{my:"4x"}),c.createElement(a.Scrollbar,{height:180,width:180,overflowY:"visible",border:1,borderColor:n.divider},c.createElement(a.Flex,{alignItems:"center",justifyContent:"center",height:300},c.createElement(a.Tooltip,{isOpen:!0,placement:"top",label:"This is a tooltip",PopperProps:{modifiers:[{name:"flip",enabled:o}]}},c.createElement(a.Text,{display:"inline-block"},"Reference")))))},x=function(){return c.createElement(a.Tooltip,{PopperProps:{usePortal:!0},label:"This is a tooltip"},c.createElement(a.Text,{display:"inline-block"},"Hover Me"))};function h(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,r,i,a=[],c=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(o=r.call(t)).done)&&(a.push(o.value),a.length!==n);c=!0);}catch(e){s=!0,l=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw l}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return f(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return f(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function f(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var b=function(){var e=h((0,a.useColorMode)(),1)[0],n=h((0,a.useColorStyle)({colorMode:e}),1)[0],t=(0,c.useRef)(),o=h((0,c.useState)("hostname"),2),l=o[0],r=o[1],i=(0,c.useCallback)(function(e){e.persist(),r(e.target.attributes.value.value),setTimeout(function(){t.current&&t.current.focus()},0)},[]);return c.createElement(a.InputGroup,null,c.createElement(a.InputGroupPrepend,null,c.createElement(a.Menu,null,c.createElement(a.MenuButton,{mr:"4x"},c.createElement(a.Text,{color:"dark"===e?"white:secondary":"black:secondary"},{hostname:"Search by: Endpoint name",filename:"Search by: File name"}[l])),c.createElement(a.MenuList,{onClick:i},c.createElement(a.MenuItem,{value:"hostname"},"Endpoint name"),c.createElement(a.MenuItem,{value:"filename"},"File name")))),c.createElement(a.Tooltip,{label:"Use commas to separate multiple keywords",backgroundColor:n.background.secondary,color:n.color.primary,px:"2x",py:"3x"},c.createElement(a.Input,{ref:t,borderTopLeftRadius:0,borderBottomLeftRadius:0,placeholder:{hostname:"John Doe, Jane",filename:"README.md, *.cmd"}[l]})))},g=function(){return c.createElement(a.Box,{display:"inline-block"},c.createElement(a.Grid,{templateColumns:"repeat(3, minmax(80px,1fr))",templateRows:"repeat(4, 80px)",gap:"8x"},["top-start","top","top-end","right-start","right","right-end","bottom-start","bottom","bottom-end","left-start","left","left-end"].map(function(e){return c.createElement(a.Tooltip,{key:e,label:"Tooltip",placement:e},c.createElement(a.Button,{width:"100%"},e))})))};function T(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var j=function(){var e,n=(function(e){if(Array.isArray(e))return e}(e=(0,a.useColorMode)())||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,r,i,a=[],c=!0,s=!1;try{for(r=(t=t.call(e)).next;!(c=(o=r.call(t)).done)&&(a.push(o.value),1!==a.length);c=!0);}catch(e){s=!0,l=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw l}}return a}}(e,1)||function(e,n){if(e){if("string"==typeof e)return T(e,1);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return T(e,1)}}(e,1)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())[0],t={dark:"gray:80",light:"white"}[n],o={dark:"white:primary",light:"black:primary"}[n];return c.createElement(c.Fragment,null,c.createElement(a.Tooltip,{label:"This is a tooltip",backgroundColor:t,color:o},c.createElement(a.Text,{display:"inline-block"},"Hover Me")),c.createElement(a.Divider,{my:"4x"}),c.createElement(a.Tooltip,{arrow:!1,label:c.createElement(a.Box,{py:"1x"},c.createElement(a.Text,null,"Title"),c.createElement(a.Divider,{my:"2x"}),c.createElement(a.Text,null,"Content")),backgroundColor:t,color:o},c.createElement(a.Text,{display:"inline-block"},"Hover Me")))};function y(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,r,i,a=[],c=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(o=r.call(t)).done)&&(a.push(o.value),a.length!==n);c=!0);}catch(e){s=!0,l=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw l}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return v(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return v(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function v(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}function k(){return(k=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var w=function(e){return c.createElement(a.Box,k({mb:"4x"},e))},E=function(e){var n=y((0,c.useState)(e),2),t=n[0],o=n[1];return[t,function(e){return function(){return o(e)}}]},C=function(){var e=y((0,a.useColorStyle)(),1)[0],n=y(E("bottom-end"),2),t=n[0],o=n[1],l=y((0,c.useState)(8),2),r=l[0],i=l[1],s=y((0,c.useState)(12),2),d=s[0],p=s[1];return c.createElement(c.Fragment,null,c.createElement(w,null,c.createElement(a.Box,{mb:"2x"},c.createElement(a.TextLabel,null,"placement")),c.createElement(a.Menu,null,c.createElement(a.MenuButton,{variant:"secondary",minWidth:150},t),c.createElement(a.MenuList,{width:"max-content",minWidth:150},["top","top-start","top-end","bottom","bottom-start","bottom-end","left","left-start","left-end","right","right-start","right-end"].map(function(e){return c.createElement(a.MenuItem,{key:e,onClick:o(e)},c.createElement(a.Flex,{columnGap:"2x"},t===e?c.createElement(a.Icon,{icon:"check-s"}):c.createElement(a.Box,{width:"4x"}),e))})))),c.createElement(w,null,c.createElement(a.Box,{mb:"2x"},c.createElement(a.TextLabel,null,"skidding")),c.createElement(a.Flex,{columnGap:"4x"},c.createElement("input",{type:"range",name:"skidding",min:-48,max:48,value:r,onChange:function(e){return i(Number(e.target.value))}}),c.createElement(a.Text,null,r))),c.createElement(w,null,c.createElement(a.Box,{mb:"2x"},c.createElement(a.TextLabel,null,"distance")),c.createElement(a.Flex,{columnGap:"4x"},c.createElement("input",{type:"range",name:"distance",min:-48,max:48,value:d,onChange:function(e){return p(Number(e.target.value))}}),c.createElement(a.Text,null,d))),c.createElement(a.Divider,{my:"4x"}),c.createElement(a.Tooltip,{label:"This is a tooltip",followCursor:!0,offset:[r,d],placement:t},c.createElement(a.Flex,{sx:{border:1,backgroundColor:e.background.secondary,borderColor:e.divider,width:240,height:180,alignItems:"center",justifyContent:"center"}},"Hover Me")))};function I(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,r,i,a=[],c=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(o=r.call(t)).done)&&(a.push(o.value),a.length!==n);c=!0);}catch(e){s=!0,l=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw l}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return S(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return S(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function S(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}function B(){return(B=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var M=function(e){return c.createElement(a.Box,B({mb:"4x"},e))},F=function(e){var n=I((0,c.useState)(e),2),t=n[0],o=n[1];return[t,function(e){return function(){return o(e)}}]},A=function(){var e=I((0,a.useColorStyle)(),1)[0],n=I(F("bottom-end"),2),t=n[0],o=n[1],l=I((0,c.useState)(8),2),r=l[0],i=l[1],s=I((0,c.useState)(12),2),d=s[0],p=s[1];return c.createElement(c.Fragment,null,c.createElement(M,null,c.createElement(a.Box,{mb:"2x"},c.createElement(a.TextLabel,null,"placement")),c.createElement(a.Menu,null,c.createElement(a.MenuButton,{variant:"secondary",minWidth:150},t),c.createElement(a.MenuList,{width:"max-content",minWidth:150},["top","top-start","top-end","bottom","bottom-start","bottom-end","left","left-start","left-end","right","right-start","right-end"].map(function(e){return c.createElement(a.MenuItem,{key:e,onClick:o(e)},c.createElement(a.Flex,{columnGap:"2x"},t===e?c.createElement(a.Icon,{icon:"check-s"}):c.createElement(a.Box,{width:"4x"}),e))})))),c.createElement(M,null,c.createElement(a.Box,{mb:"2x"},c.createElement(a.TextLabel,null,"skidding")),c.createElement(a.Flex,{columnGap:"4x"},c.createElement("input",{type:"range",name:"skidding",min:-48,max:48,value:r,onChange:function(e){return i(Number(e.target.value))}}),c.createElement(a.Text,null,r))),c.createElement(M,null,c.createElement(a.Box,{mb:"2x"},c.createElement(a.TextLabel,null,"distance")),c.createElement(a.Flex,{columnGap:"4x"},c.createElement("input",{type:"range",name:"distance",min:-48,max:48,value:d,onChange:function(e){return p(Number(e.target.value))}}),c.createElement(a.Text,null,d))),c.createElement(a.Divider,{my:"4x"}),c.createElement(a.Tooltip,{label:"This is a tooltip",nextToCursor:!0,offset:[r,d],placement:t},c.createElement(a.Flex,{sx:{backgroundColor:e.background.secondary,border:1,borderColor:e.divider,width:240,height:180,alignItems:"center",justifyContent:"center"}},"Hover Me")))};function L(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,r,i,a=[],c=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(o=r.call(t)).done)&&(a.push(o.value),a.length!==n);c=!0);}catch(e){s=!0,l=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw l}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return G(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return G(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function G(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var O=function(){var e=L((0,c.useState)(0),2),n=e[0],t=e[1],o=L((0,c.useState)(8),2),l=o[0],r=o[1];return c.createElement(c.Fragment,null,c.createElement(a.Box,{mb:"4x"},c.createElement(a.Box,{mb:"2x"},c.createElement(a.TextLabel,null,"skidding")),c.createElement(a.Flex,{columnGap:"4x"},c.createElement("input",{type:"range",name:"skidding",min:-48,max:48,value:n,onChange:function(e){return t(Number(e.target.value))}}),c.createElement(a.Text,null,n))),c.createElement(a.Box,{mb:"4x"},c.createElement(a.Box,{mb:"2x"},c.createElement(a.TextLabel,null,"distance")),c.createElement(a.Flex,{columnGap:"4x"},c.createElement("input",{type:"range",name:"distance",min:-48,max:48,value:l,onChange:function(e){return r(Number(e.target.value))}}),c.createElement(a.Text,null,l))),c.createElement(a.Divider,{my:"4x"}),c.createElement(a.Tooltip,{isOpen:!0,label:"This is a tooltip",offset:[n,l]},c.createElement(a.Text,{display:"inline-block"},"Text content")))},R=function(){return c.createElement(a.Tooltip,{label:"This is a tooltip"},c.createElement(a.Text,{display:"inline-block",tabIndex:"0"},"Text content"))},P=function(){return c.createElement(a.Tooltip,{label:"This is a tooltip"},c.createElement(a.Button,null,"Button"))},D=function(){return c.createElement(a.Flex,null,c.createElement(a.Tooltip,{label:"This is a tooltip",shouldWrapChildren:!0},c.createElement(a.Button,{disabled:!0},"Button")))},N=function(){return c.createElement(a.Tooltip,{label:"This is a tooltip"},c.createElement(a.Button,{disabled:!0},"Button"))},H=function(){return c.createElement(a.Tooltip,{label:"Search",arrow:!1},c.createElement(a.Icon,{icon:"search-o"}))},_=function(){return c.createElement(a.Flex,{columnGap:"4x"},c.createElement(a.Tooltip,{label:""},c.createElement(a.Icon,{icon:"search-o"})),c.createElement(a.Divider,{orientation:"vertical"}),c.createElement(a.Tooltip,{label:"Search",disabled:!0},c.createElement(a.Icon,{icon:"search-o"})))},U=function(){return c.createElement(a.Tooltip,{label:"This is an uncontrolled tooltip",defaultIsOpen:!1},c.createElement(a.Text,{display:"inline-block"},"Text content"))};function Z(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var z=function(){var e,n=function(e){if(Array.isArray(e))return e}(e=(0,i.useToggle)(!1))||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,r,i,a=[],c=!0,s=!1;try{for(r=(t=t.call(e)).next;!(c=(o=r.call(t)).done)&&(a.push(o.value),2!==a.length);c=!0);}catch(e){s=!0,l=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw l}}return a}}(e,2)||function(e,n){if(e){if("string"==typeof e)return Z(e,2);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return Z(e,2)}}(e,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),t=n[0],o=n[1];return c.createElement(c.Fragment,null,c.createElement(a.Flex,{mb:"4x"},c.createElement(a.Switch,{checked:t,onChange:o})),c.createElement(a.Tooltip,{label:"This is a controlled tooltip",isOpen:t},c.createElement(a.Text,{display:"inline-block"},"Text content")))};function W(e){var n=Object.assign({div:"div",h1:"h1",p:"p",code:"code",a:"a",h2:"h2",svg:"svg",use:"use",pre:"pre",h3:"h3",h4:"h4",strong:"strong",blockquote:"blockquote",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,l.ah)(),e.components);return(0,o.jsxs)(n.div,{className:"main-content",id:"main-content",children:["\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n","\n",(0,o.jsx)(n.h1,{id:"tooltip",children:"Tooltip"}),"\n",(0,o.jsx)(n.p,{children:"A tooltip is a brief, informative message that appears when a user interacts with an element. Tooltips are usually initiated in one of two ways: through a mouse-hover or keyboard-hover action."}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Tooltip"})," component follows the ",(0,o.jsx)(n.a,{href:"https://www.w3.org/TR/wai-aria-practices/#tooltip",children:"WAI-ARIA"})," Tooltip pattern."]}),"\n",(0,o.jsxs)(n.h2,{id:"import",children:["Import",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import { Tooltip } from '@tonic-ui/react';\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"usage",children:["Usage",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["By default, you have to pass a single React element child to the ",(0,o.jsx)(n.code,{children:"Tooltip"})," component."]}),"\n",(0,o.jsx)(n.pre,{disabled:!0,children:(0,o.jsx)(n.code,{className:"language-jsx",children:'<Tooltip label="This is a tooltip">\n  <Text display="inline-block">Text content</Text>\n</Tooltip>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["If you need to pass more than one child element or non-element children, wrap them in an element or pass the ",(0,o.jsx)(n.code,{children:"shouldWrapChildren"})," prop."]}),"\n",(0,o.jsx)(n.pre,{disabled:!0,children:(0,o.jsx)(n.code,{className:"language-jsx",children:'<Tooltip label="This is a tooltip">\n  <Text display="inline-block">Text content</Text>\n</Tooltip>\n\n<Tooltip label="This is a tooltip" shouldWrapChildren>\n  Text content\n</Tooltip>\n\n<Tooltip label="This is a tooltip" shouldWrapChildren>\n  <Icon icon="menu" height="5x" mr="2x" />\n  <Text display="inline-block">Text content</Text>\n</Tooltip>\n'})}),"\n",(0,o.jsxs)(n.h3,{id:"controlled-and-uncontrolled-tooltip",children:["Controlled and uncontrolled tooltip",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#controlled-and-uncontrolled-tooltip",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["Pass ",(0,o.jsx)(n.code,{children:"isOpen"})," to the ",(0,o.jsx)(n.code,{children:"Tooltip"})," component to control the state of the tooltip."]}),"\n",(0,o.jsx)(r.Z,{component:z,file:{data:"import { Flex, Switch, Text, Tooltip } from '@tonic-ui/react';\nimport { useToggle } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [on, toggle] = useToggle(false);\n\n  return (\n    <>\n      <Flex mb=\"4x\">\n        <Switch checked={on} onChange={toggle} />\n      </Flex>\n      <Tooltip\n        label=\"This is a controlled tooltip\"\n        isOpen={on}\n      >\n        <Text display=\"inline-block\">Text content</Text>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Flex, Switch, Text, Tooltip } from '@tonic-ui/react';\nimport { useToggle } from '@tonic-ui/react-hooks';\nimport React from 'react';\n\nconst App = () => {\n  const [on, toggle] = useToggle(false);\n\n  return (\n    <>\n      <Flex mb=\"4x\">\n        <Switch checked={on} onChange={toggle} />\n      </Flex>\n      <Tooltip\n        label=\"This is a controlled tooltip\"\n        isOpen={on}\n      >\n        <Text display=\"inline-block\">Text content</Text>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.p,{children:["Tooltip is uncontrolled by default. You can set ",(0,o.jsx)(n.code,{children:"defaultIsOpen"})," to ",(0,o.jsx)(n.code,{children:"true"})," to have the tooltip open for the first render."]}),"\n",(0,o.jsx)(r.Z,{component:U,file:{data:"import { Text, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip\n    label=\"This is an uncontrolled tooltip\"\n    defaultIsOpen={false}\n  >\n    <Text display=\"inline-block\">Text content</Text>\n  </Tooltip>\n);\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Text, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip\n    label=\"This is an uncontrolled tooltip\"\n    defaultIsOpen={false}\n  >\n    <Text display=\"inline-block\">Text content</Text>\n  </Tooltip>\n);\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"hide-the-tooltip",children:["Hide the tooltip",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#hide-the-tooltip",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["To hide a tooltip in your app, you can use the ",(0,o.jsx)(n.code,{children:"label"})," and ",(0,o.jsx)(n.code,{children:"disabled"})," props. To hide the tooltip, set the ",(0,o.jsx)(n.code,{children:"label"})," prop to an empty value represented by ",(0,o.jsx)(n.code,{children:'""'}),", or set the ",(0,o.jsx)(n.code,{children:"disabled"})," prop to ",(0,o.jsx)(n.code,{children:"true"}),". Here are examples:"]}),"\n",(0,o.jsx)(r.Z,{component:_,file:{data:'import { Divider, Flex, Icon, Tooltip } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Flex columnGap="4x">\n    <Tooltip label="">\n      <Icon icon="search-o" />\n    </Tooltip>\n    <Divider orientation="vertical" />\n    <Tooltip label="Search" disabled>\n      <Icon icon="search-o" />\n    </Tooltip>\n  </Flex>\n);\n\nexport default App;',path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:'import { Divider, Flex, Icon, Tooltip } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Flex columnGap="4x">\n    <Tooltip label="">\n      <Icon icon="search-o" />\n    </Tooltip>\n    <Divider orientation="vertical" />\n    <Tooltip label="Search" disabled>\n      <Icon icon="search-o" />\n    </Tooltip>\n  </Flex>\n);\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"hide-the-arrow-of-the-tooltip",children:["Hide the arrow of the tooltip",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#hide-the-arrow-of-the-tooltip",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["To remove the arrow from a tooltip, you can pass ",(0,o.jsx)(n.code,{children:"arrow={false}"})," to the ",(0,o.jsx)(n.code,{children:"Tooltip"})," component."]}),"\n",(0,o.jsx)(r.Z,{component:H,file:{data:"import { Icon, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip label=\"Search\" arrow={false}>\n    <Icon icon=\"search-o\" />\n  </Tooltip>\n);\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Icon, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip label=\"Search\" arrow={false}>\n    <Icon icon=\"search-o\" />\n  </Tooltip>\n);\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"tooltip-around-disabled-button",children:["Tooltip around disabled button",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tooltip-around-disabled-button",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["By default the ",(0,o.jsx)(n.code,{children:"Tooltip"})," is not shown when it is around a disabled ",(0,o.jsx)(n.code,{children:"Button"}),"."]}),"\n",(0,o.jsx)(r.Z,{component:N,file:{data:"import { Button, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip label=\"This is a tooltip\">\n    <Button disabled>Button</Button>\n  </Tooltip>\n);\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip label=\"This is a tooltip\">\n    <Button disabled>Button</Button>\n  </Tooltip>\n);\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.p,{children:["To show the ",(0,o.jsx)(n.code,{children:"Tooltip"})," on a disabled ",(0,o.jsx)(n.code,{children:"Button"}),", pass the ",(0,o.jsx)(n.code,{children:"shouldWrapChildren"})," prop."]}),"\n",(0,o.jsx)(r.Z,{component:D,file:{data:"import { Button, Flex, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Flex>\n    <Tooltip label=\"This is a tooltip\" shouldWrapChildren>\n      <Button disabled>Button</Button>\n    </Tooltip>\n  </Flex>\n);\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Flex, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Flex>\n    <Tooltip label=\"This is a tooltip\" shouldWrapChildren>\n      <Button disabled>Button</Button>\n    </Tooltip>\n  </Flex>\n);\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"tooltip-with-focusable-content",children:["Tooltip with focusable content",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tooltip-with-focusable-content",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(n.p,{children:"If the children of the tooltip is a focusable element, the tooltip will show when you focus or hover on the element, and will hide when you blur or move cursor out of the element."}),"\n",(0,o.jsx)(r.Z,{component:P,file:{data:"import { Button, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip label=\"This is a tooltip\">\n    <Button>Button</Button>\n  </Tooltip>\n);\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Button, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip label=\"This is a tooltip\">\n    <Button>Button</Button>\n  </Tooltip>\n);\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"tooltip-with-non-focusable-content",children:["Tooltip with non-focusable content",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tooltip-with-non-focusable-content",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["If the tooltip anchor is not a focusable content, just like the text string, you can wrap it with a ",(0,o.jsx)(n.code,{children:"Text"})," component and set ",(0,o.jsx)(n.code,{children:'tabIndex="0"'})," to make it tabbable."]}),"\n",(0,o.jsx)(r.Z,{component:R,file:{data:'import { Text, Tooltip } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Tooltip label="This is a tooltip">\n    <Text display="inline-block" tabIndex="0">Text content</Text>\n  </Tooltip>\n);\n\nexport default App;',path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:'import { Text, Tooltip } from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst App = () => (\n  <Tooltip label="This is a tooltip">\n    <Text display="inline-block" tabIndex="0">Text content</Text>\n  </Tooltip>\n);\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"adjust-tooltip-positioning",children:["Adjust tooltip positioning",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#adjust-tooltip-positioning",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.h4,{id:"using-the-offset-prop",children:["Using the ",(0,o.jsx)(n.code,{children:"offset"})," prop",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-offset-prop",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"offset"})," prop allows you to adjust the positioning of the tooltip by accepting an array of two numbers in the format ",(0,o.jsx)(n.code,{children:"[skidding, distance]"}),"."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Skidding"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"skidding"})," number determines the displacement of the ",(0,o.jsx)(n.code,{children:"TooltipContent"})," from the ",(0,o.jsx)(n.code,{children:"TooltipTrigger"})," and is measured in pixels."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.strong,{children:"Distance"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"distance"})," number controls the distance between the ",(0,o.jsx)(n.code,{children:"TooltipContent"})," and the ",(0,o.jsx)(n.code,{children:"TooltipTrigger"})," and is measured in pixels."]}),"\n",(0,o.jsx)(r.Z,{component:O,file:{data:'import { Box, Divider, Flex, Text, TextLabel, Tooltip } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [skidding, setSkidding] = useState(0);\n  const [distance, setDistance] = useState(8);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Box mb="2x">\n          <TextLabel>skidding</TextLabel>\n        </Box>\n        <Flex columnGap="4x">\n          <input\n            type="range"\n            name="skidding"\n            min={-48}\n            max={48}\n            value={skidding}\n            onChange={(e) => setSkidding(Number(e.target.value))}\n          />\n          <Text>{skidding}</Text>\n        </Flex>\n      </Box>\n      <Box mb="4x">\n        <Box mb="2x">\n          <TextLabel>distance</TextLabel>\n        </Box>\n        <Flex columnGap="4x">\n          <input\n            type="range"\n            name="distance"\n            min={-48}\n            max={48}\n            value={distance}\n            onChange={(e) => setDistance(Number(e.target.value))}\n          />\n          <Text>{distance}</Text>\n        </Flex>\n      </Box>\n      <Divider my="4x" />\n      <Tooltip\n        isOpen\n        label="This is a tooltip"\n        offset={[skidding, distance]}\n      >\n        <Text display="inline-block">Text content</Text>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:'import { Box, Divider, Flex, Text, TextLabel, Tooltip } from \'@tonic-ui/react\';\nimport React, { useState } from \'react\';\n\nconst App = () => {\n  const [skidding, setSkidding] = useState(0);\n  const [distance, setDistance] = useState(8);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Box mb="2x">\n          <TextLabel>skidding</TextLabel>\n        </Box>\n        <Flex columnGap="4x">\n          <input\n            type="range"\n            name="skidding"\n            min={-48}\n            max={48}\n            value={skidding}\n            onChange={(e) => setSkidding(Number(e.target.value))}\n          />\n          <Text>{skidding}</Text>\n        </Flex>\n      </Box>\n      <Box mb="4x">\n        <Box mb="2x">\n          <TextLabel>distance</TextLabel>\n        </Box>\n        <Flex columnGap="4x">\n          <input\n            type="range"\n            name="distance"\n            min={-48}\n            max={48}\n            value={distance}\n            onChange={(e) => setDistance(Number(e.target.value))}\n          />\n          <Text>{distance}</Text>\n        </Flex>\n      </Box>\n      <Divider my="4x" />\n      <Tooltip\n        isOpen\n        label="This is a tooltip"\n        offset={[skidding, distance]}\n      >\n        <Text display="inline-block">Text content</Text>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsxs)(n.p,{children:["By default, the tooltip's offset is set to ",(0,o.jsx)(n.code,{children:"[0, 8]"}),", where the first value represents the ",(0,o.jsx)(n.code,{children:"skidding"})," and the second value represents the ",(0,o.jsx)(n.code,{children:"distance"}),".",(0,o.jsx)("br",{}),"In the ",(0,o.jsx)(n.code,{children:"nextToCursor"})," and ",(0,o.jsx)(n.code,{children:"followCursor"})," examples below, the ",(0,o.jsx)(n.code,{children:"distance"})," value is set to 16. You may need to adjust this value to better suit your specific requirements."]}),"\n"]}),"\n",(0,o.jsxs)(n.h4,{id:"using-the-nexttocursor-prop",children:["Using the ",(0,o.jsx)(n.code,{children:"nextToCursor"})," prop",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-nexttocursor-prop",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"nextToCursor"})," prop positions the tooltip next to the cursor."]}),"\n",(0,o.jsx)(r.Z,{component:A,file:{data:"import {\n  Box,\n  Divider,\n  Flex,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  TextLabel,\n  Tooltip,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\n\nconst FormGroup = (props) => (\n  <Box mb=\"4x\" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [colorStyle] = useColorStyle();\n  const [placement, changePlacementBy] = useSelection('bottom-end');\n  const [skidding, setSkidding] = useState(8);\n  const [distance, setDistance] = useState(12);\n\n  return (\n    <>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            placement\n          </TextLabel>\n        </Box>\n        <Menu>\n          <MenuButton\n            variant=\"secondary\"\n            minWidth={150}\n          >\n            {placement}\n          </MenuButton>\n          <MenuList\n            width=\"max-content\"\n            minWidth={150}\n          >\n            {[\n              'top', 'top-start', 'top-end',\n              'bottom', 'bottom-start', 'bottom-end',\n              'left', 'left-start', 'left-end',\n              'right', 'right-start', 'right-end',\n            ].map(_placement => (\n              <MenuItem\n                key={_placement}\n                onClick={changePlacementBy(_placement)}\n              >\n                <Flex columnGap=\"2x\">\n                  {placement === _placement ? <Icon icon=\"check-s\" /> : <Box width=\"4x\" />}\n                  {_placement}\n                </Flex>\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Menu>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>skidding</TextLabel>\n        </Box>\n        <Flex columnGap=\"4x\">\n          <input\n            type=\"range\"\n            name=\"skidding\"\n            min={-48}\n            max={48}\n            value={skidding}\n            onChange={(e) => setSkidding(Number(e.target.value))}\n          />\n          <Text>{skidding}</Text>\n        </Flex>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>distance</TextLabel>\n        </Box>\n        <Flex columnGap=\"4x\">\n          <input\n            type=\"range\"\n            name=\"distance\"\n            min={-48}\n            max={48}\n            value={distance}\n            onChange={(e) => setDistance(Number(e.target.value))}\n          />\n          <Text>{distance}</Text>\n        </Flex>\n      </FormGroup>\n      <Divider my=\"4x\" />\n      <Tooltip\n        label=\"This is a tooltip\"\n        nextToCursor\n        offset={[skidding, distance]}\n        placement={placement}\n      >\n        <Flex\n          sx={{\n            backgroundColor: colorStyle.background.secondary,\n            border: 1,\n            borderColor: colorStyle.divider,\n            width: 240,\n            height: 180,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          Hover Me\n        </Flex>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import {\n  Box,\n  Divider,\n  Flex,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  TextLabel,\n  Tooltip,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\n\nconst FormGroup = (props) => (\n  <Box mb=\"4x\" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [colorStyle] = useColorStyle();\n  const [placement, changePlacementBy] = useSelection('bottom-end');\n  const [skidding, setSkidding] = useState(8);\n  const [distance, setDistance] = useState(12);\n\n  return (\n    <>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            placement\n          </TextLabel>\n        </Box>\n        <Menu>\n          <MenuButton\n            variant=\"secondary\"\n            minWidth={150}\n          >\n            {placement}\n          </MenuButton>\n          <MenuList\n            width=\"max-content\"\n            minWidth={150}\n          >\n            {[\n              'top', 'top-start', 'top-end',\n              'bottom', 'bottom-start', 'bottom-end',\n              'left', 'left-start', 'left-end',\n              'right', 'right-start', 'right-end',\n            ].map(_placement => (\n              <MenuItem\n                key={_placement}\n                onClick={changePlacementBy(_placement)}\n              >\n                <Flex columnGap=\"2x\">\n                  {placement === _placement ? <Icon icon=\"check-s\" /> : <Box width=\"4x\" />}\n                  {_placement}\n                </Flex>\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Menu>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>skidding</TextLabel>\n        </Box>\n        <Flex columnGap=\"4x\">\n          <input\n            type=\"range\"\n            name=\"skidding\"\n            min={-48}\n            max={48}\n            value={skidding}\n            onChange={(e) => setSkidding(Number(e.target.value))}\n          />\n          <Text>{skidding}</Text>\n        </Flex>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>distance</TextLabel>\n        </Box>\n        <Flex columnGap=\"4x\">\n          <input\n            type=\"range\"\n            name=\"distance\"\n            min={-48}\n            max={48}\n            value={distance}\n            onChange={(e) => setDistance(Number(e.target.value))}\n          />\n          <Text>{distance}</Text>\n        </Flex>\n      </FormGroup>\n      <Divider my=\"4x\" />\n      <Tooltip\n        label=\"This is a tooltip\"\n        nextToCursor\n        offset={[skidding, distance]}\n        placement={placement}\n      >\n        <Flex\n          sx={{\n            backgroundColor: colorStyle.background.secondary,\n            border: 1,\n            borderColor: colorStyle.divider,\n            width: 240,\n            height: 180,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          Hover Me\n        </Flex>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h4,{id:"using-the-followcursor-prop",children:["Using the ",(0,o.jsx)(n.code,{children:"followCursor"})," prop",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-followcursor-prop",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"followCursor"})," prop makes the tooltip follow the cursor as it moves."]}),"\n",(0,o.jsx)(r.Z,{component:C,file:{data:"import {\n  Box,\n  Divider,\n  Flex,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  TextLabel,\n  Tooltip,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\n\nconst FormGroup = (props) => (\n  <Box mb=\"4x\" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [colorStyle] = useColorStyle();\n  const [placement, changePlacementBy] = useSelection('bottom-end');\n  const [skidding, setSkidding] = useState(8);\n  const [distance, setDistance] = useState(12);\n\n  return (\n    <>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            placement\n          </TextLabel>\n        </Box>\n        <Menu>\n          <MenuButton\n            variant=\"secondary\"\n            minWidth={150}\n          >\n            {placement}\n          </MenuButton>\n          <MenuList\n            width=\"max-content\"\n            minWidth={150}\n          >\n            {[\n              'top', 'top-start', 'top-end',\n              'bottom', 'bottom-start', 'bottom-end',\n              'left', 'left-start', 'left-end',\n              'right', 'right-start', 'right-end',\n            ].map(_placement => (\n              <MenuItem\n                key={_placement}\n                onClick={changePlacementBy(_placement)}\n              >\n                <Flex columnGap=\"2x\">\n                  {placement === _placement ? <Icon icon=\"check-s\" /> : <Box width=\"4x\" />}\n                  {_placement}\n                </Flex>\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Menu>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>skidding</TextLabel>\n        </Box>\n        <Flex columnGap=\"4x\">\n          <input\n            type=\"range\"\n            name=\"skidding\"\n            min={-48}\n            max={48}\n            value={skidding}\n            onChange={(e) => setSkidding(Number(e.target.value))}\n          />\n          <Text>{skidding}</Text>\n        </Flex>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>distance</TextLabel>\n        </Box>\n        <Flex columnGap=\"4x\">\n          <input\n            type=\"range\"\n            name=\"distance\"\n            min={-48}\n            max={48}\n            value={distance}\n            onChange={(e) => setDistance(Number(e.target.value))}\n          />\n          <Text>{distance}</Text>\n        </Flex>\n      </FormGroup>\n      <Divider my=\"4x\" />\n      <Tooltip\n        label=\"This is a tooltip\"\n        followCursor\n        offset={[skidding, distance]}\n        placement={placement}\n      >\n        <Flex\n          sx={{\n            border: 1,\n            backgroundColor: colorStyle.background.secondary,\n            borderColor: colorStyle.divider,\n            width: 240,\n            height: 180,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          Hover Me\n        </Flex>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import {\n  Box,\n  Divider,\n  Flex,\n  Icon,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  TextLabel,\n  Tooltip,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport React, { useState } from 'react';\n\nconst FormGroup = (props) => (\n  <Box mb=\"4x\" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst App = () => {\n  const [colorStyle] = useColorStyle();\n  const [placement, changePlacementBy] = useSelection('bottom-end');\n  const [skidding, setSkidding] = useState(8);\n  const [distance, setDistance] = useState(12);\n\n  return (\n    <>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>\n            placement\n          </TextLabel>\n        </Box>\n        <Menu>\n          <MenuButton\n            variant=\"secondary\"\n            minWidth={150}\n          >\n            {placement}\n          </MenuButton>\n          <MenuList\n            width=\"max-content\"\n            minWidth={150}\n          >\n            {[\n              'top', 'top-start', 'top-end',\n              'bottom', 'bottom-start', 'bottom-end',\n              'left', 'left-start', 'left-end',\n              'right', 'right-start', 'right-end',\n            ].map(_placement => (\n              <MenuItem\n                key={_placement}\n                onClick={changePlacementBy(_placement)}\n              >\n                <Flex columnGap=\"2x\">\n                  {placement === _placement ? <Icon icon=\"check-s\" /> : <Box width=\"4x\" />}\n                  {_placement}\n                </Flex>\n              </MenuItem>\n            ))}\n          </MenuList>\n        </Menu>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>skidding</TextLabel>\n        </Box>\n        <Flex columnGap=\"4x\">\n          <input\n            type=\"range\"\n            name=\"skidding\"\n            min={-48}\n            max={48}\n            value={skidding}\n            onChange={(e) => setSkidding(Number(e.target.value))}\n          />\n          <Text>{skidding}</Text>\n        </Flex>\n      </FormGroup>\n      <FormGroup>\n        <Box mb=\"2x\">\n          <TextLabel>distance</TextLabel>\n        </Box>\n        <Flex columnGap=\"4x\">\n          <input\n            type=\"range\"\n            name=\"distance\"\n            min={-48}\n            max={48}\n            value={distance}\n            onChange={(e) => setDistance(Number(e.target.value))}\n          />\n          <Text>{distance}</Text>\n        </Flex>\n      </FormGroup>\n      <Divider my=\"4x\" />\n      <Tooltip\n        label=\"This is a tooltip\"\n        followCursor\n        offset={[skidding, distance]}\n        placement={placement}\n      >\n        <Flex\n          sx={{\n            border: 1,\n            backgroundColor: colorStyle.background.secondary,\n            borderColor: colorStyle.divider,\n            width: 240,\n            height: 180,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          Hover Me\n        </Flex>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"customizing-tooltip-appearance",children:["Customizing tooltip appearance",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#customizing-tooltip-appearance",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["To customize the appearance of a tooltip, you can pass style props to the Tooltip component. Here's an example that shows how to use the ",(0,o.jsx)(n.code,{children:"useColorMode"})," and ",(0,o.jsx)(n.code,{children:"useColorStyle"})," Hooks to determine the current color mode and color style, and then set the background and text colors of the tooltip accordingly. This can help ensure the tooltip looks consistent with your app's color scheme. Additionally, you can use a component as the label of the tooltip to render more complex content."]}),"\n",(0,o.jsx)(r.Z,{component:j,file:{data:"import { Box, Divider, Text, Tooltip, useColorMode } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const backgroundColor = {\n    dark: 'gray:80',\n    light: 'white',\n  }[colorMode];\n  const color = {\n    dark: 'white:primary',\n    light: 'black:primary',\n  }[colorMode];\n\n  return (\n    <>\n      <Tooltip\n        label=\"This is a tooltip\"\n        backgroundColor={backgroundColor}\n        color={color}\n      >\n        <Text display=\"inline-block\">Hover Me</Text>\n      </Tooltip>\n      <Divider my=\"4x\" />\n      <Tooltip\n        arrow={false}\n        label={(\n          <Box py=\"1x\">\n            <Text>Title</Text>\n            <Divider my=\"2x\" />\n            <Text>Content</Text>\n          </Box>\n        )}\n        backgroundColor={backgroundColor}\n        color={color}\n      >\n        <Text display=\"inline-block\">Hover Me</Text>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Box, Divider, Text, Tooltip, useColorMode } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const backgroundColor = {\n    dark: 'gray:80',\n    light: 'white',\n  }[colorMode];\n  const color = {\n    dark: 'white:primary',\n    light: 'black:primary',\n  }[colorMode];\n\n  return (\n    <>\n      <Tooltip\n        label=\"This is a tooltip\"\n        backgroundColor={backgroundColor}\n        color={color}\n      >\n        <Text display=\"inline-block\">Hover Me</Text>\n      </Tooltip>\n      <Divider my=\"4x\" />\n      <Tooltip\n        arrow={false}\n        label={(\n          <Box py=\"1x\">\n            <Text>Title</Text>\n            <Divider my=\"2x\" />\n            <Text>Content</Text>\n          </Box>\n        )}\n        backgroundColor={backgroundColor}\n        color={color}\n      >\n        <Text display=\"inline-block\">Hover Me</Text>\n      </Tooltip>\n    </>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"placement",children:["Placement",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#placement",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.code,{children:"placement"})," prop to control the placement of the tooltip."]}),"\n",(0,o.jsx)(n.pre,{disabled:!0,children:(0,o.jsx)(n.code,{className:"language-jsx",children:'<Tooltip label="Tooltip" placement="top">\n  Tooltip anchor\n</Tooltip>\n'})}),"\n",(0,o.jsx)(r.Z,{component:g,file:{data:"import { Box, Button, Grid, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Box display=\"inline-block\">\n    <Grid\n      templateColumns=\"repeat(3, minmax(80px,1fr))\"\n      templateRows=\"repeat(4, 80px)\"\n      gap=\"8x\"\n    >\n      {['top-start', 'top', 'top-end',\n        'right-start', 'right', 'right-end',\n        'bottom-start', 'bottom', 'bottom-end',\n        'left-start', 'left', 'left-end'\n      ].map(placement => (\n        <Tooltip\n          key={placement}\n          label=\"Tooltip\"\n          placement={placement}\n        >\n          <Button width=\"100%\">\n            {placement}\n          </Button>\n        </Tooltip>\n      ))}\n    </Grid>\n  </Box>\n);\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Box, Button, Grid, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Box display=\"inline-block\">\n    <Grid\n      templateColumns=\"repeat(3, minmax(80px,1fr))\"\n      templateRows=\"repeat(4, 80px)\"\n      gap=\"8x\"\n    >\n      {['top-start', 'top', 'top-end',\n        'right-start', 'right', 'right-end',\n        'bottom-start', 'bottom', 'bottom-end',\n        'left-start', 'left', 'left-end'\n      ].map(placement => (\n        <Tooltip\n          key={placement}\n          label=\"Tooltip\"\n          placement={placement}\n        >\n          <Button width=\"100%\">\n            {placement}\n          </Button>\n        </Tooltip>\n      ))}\n    </Grid>\n  </Box>\n);\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"more-examples",children:["More examples",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#more-examples",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.h4,{id:"menu-component-with-tooltip",children:[(0,o.jsx)(n.code,{children:"Menu"})," component with ",(0,o.jsx)(n.code,{children:"Tooltip"}),(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#menu-component-with-tooltip",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["This example demonstrates how to use the ",(0,o.jsx)(n.code,{children:"Menu"})," component along with a tooltip for navigating through a set of options or actions."]}),"\n",(0,o.jsx)(r.Z,{component:b,file:{data:"import {\n  Input,\n  InputGroup,\n  InputGroupPrepend,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  Tooltip,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport React, { useCallback, useRef, useState } from 'react';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const inputRef = useRef();\n  const [menuItem, setMenuItem] = useState('hostname');\n  const handleMenuClick = useCallback((event) => {\n    // [optional] persist `Synthetic Event` for React v16 and earlier versions\n    event.persist();\n\n    const { value } = event.target.attributes.value;\n    setMenuItem(value);\n\n    setTimeout(() => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, 0);\n  }, []);\n  const buttonText = {\n    'hostname': 'Search by: Endpoint name',\n    'filename': 'Search by: File name',\n  }[menuItem];\n\n  return (\n    <InputGroup>\n      <InputGroupPrepend>\n        <Menu>\n          <MenuButton mr=\"4x\">\n            <Text\n              color={colorMode === 'dark' ? 'white:secondary' : 'black:secondary'}\n            >\n              {buttonText}\n            </Text>\n          </MenuButton>\n          <MenuList\n            onClick={handleMenuClick}\n          >\n            <MenuItem value=\"hostname\">Endpoint name</MenuItem>\n            <MenuItem value=\"filename\">File name</MenuItem>\n          </MenuList>\n        </Menu>\n      </InputGroupPrepend>\n      <Tooltip\n        label=\"Use commas to separate multiple keywords\"\n        backgroundColor={colorStyle.background.secondary}\n        color={colorStyle.color.primary}\n        px=\"2x\"\n        py=\"3x\"\n      >\n        <Input\n          ref={inputRef}\n          borderTopLeftRadius={0}\n          borderBottomLeftRadius={0}\n          placeholder={{\n            'hostname': 'John Doe, Jane',\n            'filename': 'README.md, *.cmd',\n          }[menuItem]}\n        />\n      </Tooltip>\n    </InputGroup>\n  );\n};\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import {\n  Input,\n  InputGroup,\n  InputGroupPrepend,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  Tooltip,\n  useColorMode,\n  useColorStyle,\n} from '@tonic-ui/react';\nimport React, { useCallback, useRef, useState } from 'react';\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const inputRef = useRef();\n  const [menuItem, setMenuItem] = useState('hostname');\n  const handleMenuClick = useCallback((event) => {\n    // [optional] persist `Synthetic Event` for React v16 and earlier versions\n    event.persist();\n\n    const { value } = event.target.attributes.value;\n    setMenuItem(value);\n\n    setTimeout(() => {\n      if (inputRef.current) {\n        inputRef.current.focus();\n      }\n    }, 0);\n  }, []);\n  const buttonText = {\n    'hostname': 'Search by: Endpoint name',\n    'filename': 'Search by: File name',\n  }[menuItem];\n\n  return (\n    <InputGroup>\n      <InputGroupPrepend>\n        <Menu>\n          <MenuButton mr=\"4x\">\n            <Text\n              color={colorMode === 'dark' ? 'white:secondary' : 'black:secondary'}\n            >\n              {buttonText}\n            </Text>\n          </MenuButton>\n          <MenuList\n            onClick={handleMenuClick}\n          >\n            <MenuItem value=\"hostname\">Endpoint name</MenuItem>\n            <MenuItem value=\"filename\">File name</MenuItem>\n          </MenuList>\n        </Menu>\n      </InputGroupPrepend>\n      <Tooltip\n        label=\"Use commas to separate multiple keywords\"\n        backgroundColor={colorStyle.background.secondary}\n        color={colorStyle.color.primary}\n        px=\"2x\"\n        py=\"3x\"\n      >\n        <Input\n          ref={inputRef}\n          borderTopLeftRadius={0}\n          borderBottomLeftRadius={0}\n          placeholder={{\n            'hostname': 'John Doe, Jane',\n            'filename': 'README.md, *.cmd',\n          }[menuItem]}\n        />\n      </Tooltip>\n    </InputGroup>\n  );\n};\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h2,{id:"commonly-asked-questions",children:["Commonly Asked Questions",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#commonly-asked-questions",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.h3,{id:"resolving-tooltip-content-cut-off-with-popperprops",children:["Resolving tooltip content cut-off with ",(0,o.jsx)(n.code,{children:"PopperProps"}),(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#resolving-tooltip-content-cut-off-with-popperprops",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["By default, the ",(0,o.jsx)(n.code,{children:"Tooltip"})," component positions the tooltip relative to its parent container. In some cases, the tooltip content might be cut off when it extends outside the container that holds it."]}),"\n",(0,o.jsxs)(n.p,{children:["To address this issue, you can pass ",(0,o.jsx)(n.code,{children:"PopperProps={{ usePortal: true }}"})," to ",(0,o.jsx)(n.code,{children:"Tooltip"})," to make it positioned on the document root."]}),"\n",(0,o.jsx)(r.Z,{component:x,file:{data:"import { Text, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip\n    PopperProps={{ usePortal: true }}\n    label=\"This is a tooltip\"\n  >\n    <Text display=\"inline-block\">Hover Me</Text>\n  </Tooltip>\n);\n\nexport default App;",path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:"import { Text, Tooltip } from '@tonic-ui/react';\nimport React from 'react';\n\nconst App = () => (\n  <Tooltip\n    PopperProps={{ usePortal: true }}\n    label=\"This is a tooltip\"\n  >\n    <Text display=\"inline-block\">Hover Me</Text>\n  </Tooltip>\n);\n\nexport default App;",title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h3,{id:"automatically-adjusting-tooltip-placement-with-the-flip-modifier",children:["Automatically adjusting tooltip placement with the ",(0,o.jsx)(n.code,{children:"flip"})," modifier",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#automatically-adjusting-tooltip-placement-with-the-flip-modifier",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"flip"})," modifier is a useful feature that allows for automatic adjustment of tooltip placement when it is at risk of overflowing the specified boundary. To learn more about utilizing the ",(0,o.jsx)(n.code,{children:"flip"})," modifier, please refer to ",(0,o.jsx)(n.a,{href:"https://popper.js.org/docs/v2/modifiers/flip/",children:"Popper.js documentation"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["In the following example, the tooltip's placement is initially set to ",(0,o.jsx)(n.code,{children:"top"}),". However, if the placement is not suitable due to space constraints, the opposite ",(0,o.jsx)(n.code,{children:"bottom"})," placement will be used instead."]}),"\n",(0,o.jsx)(r.Z,{component:m,file:{data:'import { useToggle } from \'@tonic-ui/react-hooks\';\nimport {\n  Box,\n  Checkbox,\n  Divider,\n  Flex,\n  Scrollbar,\n  Space,\n  Text,\n  TextLabel,\n  Tooltip,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [isFlipModifierEnabled, toggleIsFlipModifierEnabled] = useToggle(true);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          Modifiers\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display="inline-flex" alignItems="center">\n          <Checkbox\n            checked={isFlipModifierEnabled}\n            onChange={() => toggleIsFlipModifierEnabled()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">Enable flip modifier</Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider my="4x" />\n      <Scrollbar\n        height={180}\n        width={180}\n        overflowY="visible"\n        border={1}\n        borderColor={colorStyle.divider}\n      >\n        <Flex\n          alignItems="center"\n          justifyContent="center"\n          height={300}\n        >\n          <Tooltip\n            isOpen\n            placement="top"\n            label="This is a tooltip"\n            PopperProps={{\n              modifiers: [\n                { // https://popper.js.org/docs/v2/modifiers/flip/\n                  name: \'flip\',\n                  enabled: isFlipModifierEnabled,\n                },\n              ],\n            }}\n          >\n            <Text display="inline-block">\n              Reference\n            </Text>\n          </Tooltip>\n        </Flex>\n      </Scrollbar>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/tooltip/index.page.mdx"},sandbox:{files:{},raw:'import { useToggle } from \'@tonic-ui/react-hooks\';\nimport {\n  Box,\n  Checkbox,\n  Divider,\n  Flex,\n  Scrollbar,\n  Space,\n  Text,\n  TextLabel,\n  Tooltip,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst App = () => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const [isFlipModifierEnabled, toggleIsFlipModifierEnabled] = useToggle(true);\n\n  return (\n    <>\n      <Box mb="4x">\n        <Text fontSize="lg" lineHeight="lg">\n          Modifiers\n        </Text>\n      </Box>\n      <FormGroup>\n        <TextLabel display="inline-flex" alignItems="center">\n          <Checkbox\n            checked={isFlipModifierEnabled}\n            onChange={() => toggleIsFlipModifierEnabled()}\n          />\n          <Space width="2x" />\n          <Text fontFamily="mono" whiteSpace="nowrap">Enable flip modifier</Text>\n        </TextLabel>\n      </FormGroup>\n      <Divider my="4x" />\n      <Scrollbar\n        height={180}\n        width={180}\n        overflowY="visible"\n        border={1}\n        borderColor={colorStyle.divider}\n      >\n        <Flex\n          alignItems="center"\n          justifyContent="center"\n          height={300}\n        >\n          <Tooltip\n            isOpen\n            placement="top"\n            label="This is a tooltip"\n            PopperProps={{\n              modifiers: [\n                { // https://popper.js.org/docs/v2/modifiers/flip/\n                  name: \'flip\',\n                  enabled: isFlipModifierEnabled,\n                },\n              ],\n            }}\n          >\n            <Text display="inline-block">\n              Reference\n            </Text>\n          </Tooltip>\n        </Flex>\n      </Scrollbar>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}}),"\n",(0,o.jsxs)(n.h2,{id:"props",children:["Props",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.h3,{id:"tooltip-1",children:["Tooltip",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#tooltip-1",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"PopperComponent"}),(0,o.jsx)(n.td,{align:"left",children:"ElementType"}),(0,o.jsx)(n.td,{align:"left",children:"Popper"}),(0,o.jsx)(n.td,{align:"left",children:"The component used for the popper."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"PopperProps"}),(0,o.jsx)(n.td,{align:"left",children:"object"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left",children:"Props applied to the Popper component."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TooltipArrowComponent"}),(0,o.jsx)(n.td,{align:"left",children:"ElementType"}),(0,o.jsx)(n.td,{align:"left",children:"TooltipArrow"}),(0,o.jsx)(n.td,{align:"left",children:"The component used for the tooltip arrow."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TooltipArrowProps"}),(0,o.jsx)(n.td,{align:"left",children:"object"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,o.jsx)(n.code,{children:"TooltipArrow"})," component."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionComponent"}),(0,o.jsx)(n.td,{align:"left",children:"ElementType"}),(0,o.jsx)(n.td,{align:"left",children:"Grow"}),(0,o.jsx)(n.td,{align:"left",children:"The component used for the transition."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionProps"}),(0,o.jsx)(n.td,{align:"left",children:"object"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,o.jsx)(n.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionProps.appear"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsx)(n.td,{align:"left"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"arrow"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", adds an arrow to the tooltip. Note: The arrow is not visible when ",(0,o.jsx)(n.code,{children:"followCursor"})," or ",(0,o.jsx)(n.code,{children:"nextToCursor"})," is enabled."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"children"}),(0,o.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,o.jsx)(n.code,{children:"(context) => ReactNode"})]}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"closeOnClick"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the tooltip will close upon clicking."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"closeOnEsc"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the tooltip will close upon pressing the escape key."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"closeOnPointerDown"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the tooltip will close while the pointer is pressed down."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"defaultIsOpen"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"false"}),(0,o.jsx)(n.td,{align:"left",children:"Whether the tooltip will be open by default."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"disabled"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the tooltip will not display."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"enterDelay"}),(0,o.jsx)(n.td,{align:"left",children:"number"}),(0,o.jsx)(n.td,{align:"left",children:"100"}),(0,o.jsx)(n.td,{align:"left",children:"The delay in milliseconds before the tooltip appears."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"followCursor"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the tooltip will follow the cursor."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"isOpen"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", show the tooltip."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"label"}),(0,o.jsx)(n.td,{align:"left",children:"string | ReactNode"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left",children:"If the tooltip label is a blank or empty string, the tooltip will not display."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"leaveDelay"}),(0,o.jsx)(n.td,{align:"left",children:"number"}),(0,o.jsx)(n.td,{align:"left",children:"0"}),(0,o.jsx)(n.td,{align:"left",children:"The delay in milliseconds before the tooltip disappears."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"nextToCursor"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the tooltip will be positioned next to the cursor."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"offset"}),(0,o.jsx)(n.td,{align:"left",children:"[skidding, distance]"}),(0,o.jsx)(n.td,{align:"left",children:"[0, 8]"}),(0,o.jsx)(n.td,{align:"left",children:"The skidding and distance of the tooltip."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"onClose"}),(0,o.jsx)(n.td,{align:"left",children:"function"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left",children:"Callback fired when the tooltip is closed."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"onOpen"}),(0,o.jsx)(n.td,{align:"left",children:"function"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left",children:"Callback fired when the tooltip is opened."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"openOnFocus"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the tooltip will open upon receiving focus."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"placement"}),(0,o.jsx)(n.td,{align:"left",children:"PopperJS.Placement"}),(0,o.jsx)(n.td,{align:"left",children:"'bottom'"}),(0,o.jsx)(n.td,{align:"left",children:"Position the tooltip relative to the trigger element as well as surrounding elements. One of: 'top', 'bottom', 'right', 'left', 'top-start', 'top-end', 'bottom-start', 'bottom-end', 'right-start', 'right-end', 'left-start', 'left-end'"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"shouldWrapChildren"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"false"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the tooltip will be wrapped in a ",(0,o.jsx)(n.code,{children:"Box"})," component. Otherwise, you have to ensure tooltip has only one child node."]})]})]})]})]})}var V=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,l.ah)(),e.components).wrapper;return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(W,e)})):W(e)}},16959:function(e,n,t){"use strict";t.d(n,{Z:function(){return j}});var o=t(67569),l=t(49427),r=t(5632),i=t(2784),a=t(65245),c=t(16245),s=t(76761),d=t(73205),p=t(98107),u=["size"];function m(){return(m=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}var x=(0,i.forwardRef)(function(e,n){var t=e.size,l=function(e,n){if(null==e)return{};var t,o,l=function(e,n){if(null==e)return{};var t,o,l={},r=Object.keys(e);for(o=0;o<r.length;o++)t=r[o],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)t=r[o],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}(e,u);return i.createElement(o.SVGIcon,m({size:t,viewBox:"0 0 1024 1024"},l),i.createElement("path",{d:"M755 140.3l0.5-0.3h0.3L512 0 268.3 140h-0.3l0.8 0.4L68.6 256v512L512 1024l443.4-256V256L755 140.3z m-30 506.4v171.2L548 920.1V534.7L883.4 341v215.7l-158.4 90z m-584.4-90.6V340.8L476 534.4v385.7L300 818.5V646.7l-159.4-90.6zM511.7 280l171.1-98.3 166.3 96-336.9 194.5-337-194.6 165.7-95.7L511.7 280z"}))});x.displayName="CodeSandboxIcon";var h=t(44285);function f(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,r,i,a=[],c=!0,s=!1;try{if(r=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;c=!1}else for(;!(c=(o=r.call(t)).done)&&(a.push(o.value),a.length!==n);c=!0);}catch(e){s=!0,l=e}finally{try{if(!c&&null!=t.return&&(i=t.return(),Object(i)!==i))return}finally{if(s)throw l}}return a}}(e,n)||function(e,n){if(e){if("string"==typeof e)return b(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return b(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function b(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var g={fontFamily:'"SFMono-Medium", "SF Mono", "Segoe UI Mono", Menlo, Consolas, Courier, monospace',fontSize:14,overflowX:"auto"},T=function(e){var n=e.component,t=e.file,u=e.sandbox,m=(0,r.useRouter)(),b=f((0,i.useReducer)(function(e){return!e},!1),2),T=b[0],j=b[1],y=f((0,o.useColorMode)(),1)[0],v={dark:s.y,light:s.q}[y],k=f((0,l.useToggle)(!1),2),w=k[0],E=k[1],C=(0,c.Z)(null==t?void 0:t.data),I=C.onCopy,S=C.hasCopied,B=(0,i.useCallback)(function(){I()},[I]),M=(0,i.useCallback)(function(){(0,d.b)(u)},[u]),F=(0,i.useCallback)(function(){j(),E(!1)},[j,E]);return i.createElement(a.nu,{code:null==t?void 0:t.data,disabled:!0,language:"jsx",theme:v},i.createElement(o.Box,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[y],p:"4x"},i.createElement(o.Box,{fontSize:"sm",lineHeight:"sm"},i.createElement(i.Fragment,{key:T},i.createElement(n,null)))),i.createElement(o.Flex,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},i.createElement(h.Z,{"data-track":w?"CodeBlock|hide_source|".concat((0,p.Z)({path:m.pathname})):"CodeBlock|show_source|".concat((0,p.Z)({path:m.pathname})),onClick:E},i.createElement(o.Tooltip,{label:w?"Hide the source":"Show the source"},i.createElement(o.Icon,{icon:"code",size:{sm:"5x",md:"4x"}}))),i.createElement(h.Z,{"data-track":"CodeBlock|copy_source|".concat((0,p.Z)({path:m.pathname})),onClick:B},i.createElement(o.Tooltip,{label:S?"Copied":"Copy the source"},i.createElement(o.Icon,{icon:"file-copy-o",size:{sm:"5x",md:"4x"}}))),i.createElement(h.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(m.pathname),onClick:M},i.createElement(o.Tooltip,{label:"Edit in CodeSandbox"},i.createElement(x,{size:{sm:"5x",md:"4x"}}))),i.createElement(h.Z,{"data-track":"CodeBlock|reset|".concat(m.pathname),onClick:F},i.createElement(o.Tooltip,{label:"Reset the demo"},i.createElement(o.Icon,{icon:"redo",size:{sm:"5x",md:"4x"}})))),i.createElement(o.Fade,{in:w},i.createElement(o.Collapse,{in:w,unmountOnExit:!0},i.createElement(a.uz,{style:g}))))};T.displayName="Demo";var j=T},49949:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/tooltip",function(){return t(81842)}])}},function(e){e.O(0,[2888,9774,179],function(){return e(e.s=49949)}),_N_E=e.O()}]);