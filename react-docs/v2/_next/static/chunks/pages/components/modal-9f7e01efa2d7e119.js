(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4157],{68858:function(e,n,t){"use strict";t.r(n),t.d(n,{default:function(){return en}});var o=t(52322),l=t(45392),a=t(96835),r=t(62080),i=t(13462),s=t(21400),c=t(40736),d=t(52235),u=t(35358),h=t(76168),m=t(49857),x=t(65019),p=t(2784);function f(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,a,r,i=[],s=!0,c=!1;try{if(a=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(o=a.call(t)).done)&&(i.push(o.value),i.length!==n);s=!0);}catch(e){c=!0,l=e}finally{try{if(!s&&null!=t.return&&(r=t.return(),Object(r)!==r))return}finally{if(c)throw l}}return i}}(e,n)||function(e,n){if(e){if("string"==typeof e)return g(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return g(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function g(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var b=function(){var e=f((0,x.Z)(!1),2),n=e[0],t=e[1],o=f((0,x.Z)(!1),2),l=o[0],a=o[1];return p.createElement(p.Fragment,null,p.createElement(r.Z,{onClick:function(){return t(!0)}},"Launch modal"),p.createElement(i.Z,{closeOnEsc:!0,closeOnOutsideClick:!0,isClosable:!0,isOpen:n,onClose:function(){return t(!1)},size:"sm"},p.createElement(s.Z,null),p.createElement(c.Z,null,p.createElement(d.Z,null,"Modal"),p.createElement(u.Z,null,"Modal body text goes here."),p.createElement(h.Z,{justifyContent:"space-between"},p.createElement(r.Z,{disabled:l,variant:"primary",onClick:function(){return a(!0)}},"Launch nested modal"),p.createElement(m.Z,null,p.createElement(r.Z,{onClick:function(){return t(!1)},minWidth:"20x"},"Close"))))),p.createElement(i.Z,{closeOnEsc:!0,closeOnOutsideClick:!0,isClosable:!0,isOpen:l,onClose:function(){return a(!1)},size:"xs"},p.createElement(s.Z,null),p.createElement(c.Z,null,p.createElement(d.Z,null,"Nested Modal"),p.createElement(u.Z,null,"Modal body text goes here."),p.createElement(h.Z,{columnGap:"2x"},p.createElement(r.Z,{variant:"primary",onClick:function(){return a(!1)},minWidth:"20x"},"Yes"),p.createElement(r.Z,{onClick:function(){return a(!1)},minWidth:"20x"},"No")))))},y=t(28165),C=t(40596),v=t(85017),j=t(99870),k=t(72448),M=t(70758),Z=t(78366),T=t(67622),B=t(73645),w=t(39256),E=t(1847),F=t(99293),S=t(69860),O=t(52571),I=t(99113),G=t(97273),L=t(52842),z=t(56098),H=t(6194),N=t(3398),P=t(41965),A=t(69269),R=t(66601),V=t(24231);function W(){return(W=Object.assign?Object.assign.bind():function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var o in t)Object.prototype.hasOwnProperty.call(t,o)&&(e[o]=t[o])}return e}).apply(this,arguments)}function _(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,a,r,i=[],s=!0,c=!1;try{if(a=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(o=a.call(t)).done)&&(i.push(o.value),i.length!==n);s=!0);}catch(e){c=!0,l=e}finally{try{if(!s&&null!=t.return&&(r=t.return(),Object(r)!==r))return}finally{if(c)throw l}}return i}}(e,n)||function(e,n){if(e){if("string"==typeof e)return D(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return D(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function D(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var U=function(e){var n=_((0,C.Z)(),1)[0],t=_((0,v.Z)({colorMode:n}),1)[0];return p.createElement(m.Z,W({backgroundColor:t.background.secondary,border:1,borderColor:t.divider,fontFamily:"mono",py:"3x",px:"3x",whiteSpace:"pre"},e))},K=function(e){return p.createElement(m.Z,W({mb:"4x"},e))},X=function(e){var n=_((0,p.useState)(e),2),t=n[0],o=n[1];return[t,function(e){return function(){return o(e)}}]},Y="\n// import\nimport { Global } from '@emotion/react';\n\n// example\n<Modal>\n  <Global\n    styles={css`\n      body {\n        overflow: hidden;\n      }\n    `}\n  />\n  <ModalOverlay />\n  <ModalContent>\n    <ModalHeader />\n    <ModalBody />\n    <ModalFooter />\n  </ModalContent>\n</Modal>\n".trim(),$={name:"1sy9iaq",styles:"body{overflow:hidden;}"},J=function(){var e=(0,p.useRef)(),n=_((0,C.Z)(),1)[0],t=_((0,v.Z)({colorMode:n}),1)[0],o=t.color.tertiary,l=_((0,x.Z)(!1),2),a=l[0],f=l[1],g=_(X("auto"),2),b=g[0],D=g[1],J=_(X("inside"),2),q=J[0],Q=J[1],ee=_(X("default"),2),en=ee[0],et=ee[1],eo=_(X("default"),2),el=eo[0],ea=eo[1],er=_((0,x.Z)(!0),2),ei=er[0],es=er[1],ec=_((0,x.Z)(!0),2),ed=ec[0],eu=ec[1],eh=_((0,x.Z)(!0),2),em=eh[0],ex=eh[1],ep=_((0,x.Z)(!0),2),ef=ep[0],eg=ep[1],eb=_((0,x.Z)(!0),2),ey=eb[0],eC=eb[1],ev=_((0,x.Z)(!0),2),ej=ev[0],ek=ev[1],eM=_((0,x.Z)(!0),2),eZ=eM[0],eT=eM[1],eB=_((0,x.Z)(!0),2),ew=eB[0],eE=eB[1],eF=_((0,x.Z)(!0),2),eS=eF[0],eO=eF[1],eI=_((0,x.Z)(!0),2),eG=eI[0],eL=eI[1],ez=_((0,x.Z)(!0),2),eH=ez[0],eN=ez[1],eP=_((0,x.Z)(!0),2),eA=eP[0],eR=eP[1],eV={},eW={};return"full"!==b&&("default"!==el&&(eV.py=el),"default"!==en&&(eW["inside"===q?"height":"minHeight"]=en)),p.createElement(p.Fragment,null,p.createElement(m.Z,null,p.createElement(j.Z,{label:"Click to launch modal",openOnFocus:!1},p.createElement(r.Z,{onClick:function(){return f(!0)}},"Launch modal"))),p.createElement(k.Z,{my:"4x"}),p.createElement(m.Z,{mb:"4x"},p.createElement(M.Z,{fontSize:"lg",lineHeight:"lg"},"Modal props")),p.createElement(K,null,p.createElement(m.Z,{mb:"2x"},p.createElement(j.Z,{placement:"right",label:p.createElement(p.Fragment,null,p.createElement(M.Z,{mb:"2x"},"Use the ",p.createElement(Z.Z,null,"scrollBehavior")," prop to control how scrolling should behave:"),p.createElement(m.Z,{as:"ul",my:"2x"},p.createElement("li",null,"If set to ",p.createElement(Z.Z,null,"inside"),", only the ",p.createElement(Z.Z,null,"ModalBody")," will scroll."),p.createElement("li",null,"If set to ",p.createElement(Z.Z,null,"outside"),", the entire ",p.createElement(Z.Z,null,"ModalContent")," will scroll within the viewport.")))},p.createElement(T.Z,{display:"inline-block"},p.createElement(B.Z,{alignItems:"center",columnGap:"2x"},"scrollBehavior",p.createElement(P.Z,null))))),p.createElement(w.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},["inside","outside"].map(function(e){return p.createElement(r.Z,{key:e,selected:e===q,onClick:Q(e),minWidth:"15x"},e)}))),p.createElement(K,null,p.createElement(m.Z,{mb:"2x"},p.createElement(T.Z,null,"size")),p.createElement(w.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},["auto","xs","sm","md","lg","xl","full"].map(function(e){return p.createElement(r.Z,{key:e,selected:e===b,onClick:D(e),minWidth:"15x"},e)}))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:ei,disabled:!ef,onChange:function(){return es()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"autoFocus"))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:ed,disabled:!ey&&!em,onChange:function(){return eu()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"closeOnEsc"))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:em,disabled:!ey&&!ed,onChange:function(){return ex()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"closeOnOutsideClick"))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:ef,onChange:function(){return eg()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"ensureFocus"))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:ey,disabled:!ed&&!em,onChange:function(){return eC()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"isClosable"))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:ej,disabled:!ef,onChange:function(){return ek()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"returnFocusOnClose"))),p.createElement(k.Z,{my:"4x"}),p.createElement(m.Z,{mb:"4x"},p.createElement(M.Z,{fontSize:"lg",lineHeight:"lg"},"Modal style props")),p.createElement(K,null,p.createElement(m.Z,{mb:"2x"},p.createElement(T.Z,null,"Initial content height")),p.createElement(w.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},["default","stretch"].map(function(e){return p.createElement(r.Z,{disabled:"full"===b,key:e,selected:e===en,onClick:et(e),minWidth:"15x"},e)}))),p.createElement(K,null,p.createElement(m.Z,{mb:"2x"},p.createElement(T.Z,null,"Vertical padding")),p.createElement(w.Z,{variant:"secondary",sx:{"> *:not(:first-of-type)":{marginLeft:-1}}},["default","3rem"].map(function(e){return p.createElement(r.Z,{disabled:"full"===b,key:e,selected:e===el,onClick:ea(e),minWidth:"15x"},e)}))),p.createElement(K,null,p.createElement(m.Z,{mb:"2x"},p.createElement(T.Z,null,"Pass below props to ModalContent for settings initial height and vertical margins. Note that the props are different when ",p.createElement(Z.Z,null,"scrollBehavior")," changes.")),p.createElement(U,null,"const modalStyleProps = ".concat(JSON.stringify(eV,null,2),";\nconst modalContentStyleProps = ").concat(JSON.stringify(eW,null,2),';\n\n// example\n<Modal\n  scrollBehavior="').concat(q,'"\n  {...modalStyleProps}\n>\n  <ModalOverlay />\n  <ModalContent {...contentStyleProps}>\n    <ModalHeader />\n    <ModalBody />\n    <ModalFooter />\n  </ModalContent>\n</Modal>'))),p.createElement(k.Z,{my:"4x"}),p.createElement(m.Z,{mb:"4x"},p.createElement(M.Z,{fontSize:"lg",lineHeight:"lg"},"Modal composition")),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:eZ,onChange:function(){return eT()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"ModalOverlay"))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:ew,onChange:function(){return eE()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"ModalHeader"))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:eS,onChange:function(){return eO()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"ModalBody"))),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center"},p.createElement(E.Z,{checked:eG,onChange:function(){return eL()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,{fontFamily:"mono",whiteSpace:"nowrap"},"ModalFooter"))),p.createElement(k.Z,{my:"4x"}),p.createElement(m.Z,{mb:"4x"},p.createElement(M.Z,{fontSize:"lg",lineHeight:"lg"},"Extra modal setup")),p.createElement(K,null,p.createElement(T.Z,{display:"flex",alignItems:"center",mb:"3x"},p.createElement(E.Z,{checked:eA,onChange:function(){return eR()}}),p.createElement(F.Z,{width:"2x"}),p.createElement(M.Z,null,"Enable body scroll locking")),p.createElement(m.Z,{ml:"6x"},p.createElement(m.Z,{mb:"4x"},p.createElement(M.Z,{mb:"2x"},"When setting ",p.createElement(Z.Z,null,'scrollBehavior="outside"')," to enable outside scrolling, you should also use ",p.createElement("strong",null,"Body Scroll Locking")," to prevent the user from scrolling the page while the modal is open."),p.createElement(M.Z,{mb:"2x"},p.createElement("strong",null,"Body Scroll Locking")," is currently not available with default setup, you can follow the instructions below to append global styles to the body to prevent scrolling.")),p.createElement(U,null,Y))),p.createElement(i.Z,W({TransitionComponent:null,autoFocus:ei,closeOnEsc:ed,closeOnOutsideClick:em,ensureFocus:ef,initialFocusRef:e,isClosable:ey,isOpen:a,onClose:function(){return f(!1)},returnFocusOnClose:ej,scrollBehavior:q,size:b},eV),eA&&p.createElement(y.xB,{styles:$}),eZ&&p.createElement(s.Z,null),p.createElement(c.Z,eW,ew&&p.createElement(d.Z,null,"auto"===b&&p.createElement(M.Z,null,"Auto-sized Modal"),"xs"===b&&p.createElement(M.Z,null,"Extra Small Modal"),"sm"===b&&p.createElement(M.Z,null,"Small Modal"),"md"===b&&p.createElement(M.Z,null,"Medium Modal"),"lg"===b&&p.createElement(M.Z,null,"Large Modal"),"xl"===b&&p.createElement(M.Z,null,"Extra Large Modal"),"full"===b&&p.createElement(M.Z,null,"Full-width Modal")),eS&&p.createElement(u.Z,null,eH&&p.createElement(S.Z,{variant:"outline",severity:"info",mb:"4x",isClosable:!0,onClose:function(){return eN()}},p.createElement(M.Z,null,"This is an info alert")),p.createElement(O.Z,null,p.createElement(I.Z,{mb:"4x"},p.createElement(G.Z,null,"Tab 1"),p.createElement(G.Z,null,"Tab 2")),p.createElement(L.Z,null,p.createElement(z.Z,null,p.createElement(V.Z,{mb:"4x"}),p.createElement(H.Z,{templateColumns:"auto 1fr",rowGap:"2x",columnGap:"3x",alignItems:"center",mb:"4x"},p.createElement(A.Z,{color:o}),p.createElement(N.Z,{ref:e,placeholder:"User name"}),p.createElement(R.Z,{color:o}),p.createElement(N.Z,{placeholder:"Email address"}))),p.createElement(z.Z,null,p.createElement(m.Z,{backgroundColor:t.background.tertiary,minHeight:1e3,px:"3x",py:"2x"},p.createElement(M.Z,null,"This is a very long content that will overflow the modal")))))),eG&&p.createElement(h.Z,null,p.createElement(H.Z,{templateColumns:"1fr 1fr",columnGap:"2x"},p.createElement(r.Z,{variant:"primary"},"OK"),p.createElement(r.Z,{onClick:function(){return f(!1)}},"Cancel"))))))},q=t(61619),Q=function(){return p.createElement(q.Z,{direction:"column",spacing:"4x"},p.createElement(c.Z,{width:480},p.createElement(d.Z,null,"Modal Title"),p.createElement(u.Z,null,p.createElement(S.Z,{variant:"outline",severity:"warning",mb:"4x"},p.createElement(M.Z,null,"This is a warning alert")),p.createElement(M.Z,{mb:"4x"},"Modal body text goes here."),p.createElement(V.Z,null)),p.createElement(h.Z,null,p.createElement(r.Z,{variant:"primary",minWidth:"20x"},"Save Changes"),p.createElement(F.Z,{width:"2x"}),p.createElement(r.Z,{minWidth:"20x"},"Cancel"))),p.createElement(c.Z,{width:480},p.createElement(u.Z,null,p.createElement(M.Z,{mb:"4x"},"Modal body text goes here."),p.createElement(V.Z,null)),p.createElement(h.Z,null,p.createElement(r.Z,{variant:"primary",minWidth:"20x"},"Save Changes"),p.createElement(F.Z,{width:"2x"}),p.createElement(r.Z,{minWidth:"20x"},"Cancel"))),p.createElement(c.Z,{width:480},p.createElement(u.Z,null,p.createElement(M.Z,{mb:"4x"},"Modal body text goes here."),p.createElement(V.Z,null))),p.createElement(c.Z,{width:480},p.createElement(m.Z,{px:"4x",py:"4x"},"You can create a custom modal with any sort of content.")))};function ee(e){var n=Object.assign({div:"div",h1:"h1",p:"p",h2:"h2",a:"a",svg:"svg",use:"use",pre:"pre",code:"code",h3:"h3",h4:"h4",table:"table",thead:"thead",tr:"tr",th:"th",tbody:"tbody",td:"td"},(0,l.ah)(),e.components);return(0,o.jsxs)(n.div,{className:"main-content",children:["\n","\n","\n","\n",(0,o.jsx)(n.h1,{id:"modal",children:"Modal"}),"\n",(0,o.jsx)(n.p,{children:"Modal dialogs are used to inform users about a task and can contain critical information, require decisions, or involve multiple tasks. Modal dialogs disable app functionality when they appear, and remain on screen until confirmed, dismissed, or a required action has been taken."}),"\n",(0,o.jsxs)(n.h2,{id:"import",children:["Import",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#import",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  ModalCloseButton,\n  useModal,\n} from '@tonic-ui/react';\n"})}),"\n",(0,o.jsxs)(n.h2,{id:"modal-components",children:["Modal components",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#modal-components",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(n.p,{children:"Below is a static modal example, including modal header (optional), modal body (required when padding is necessary), and modal footer (optional)."}),"\n",(0,o.jsx)(n.p,{children:"You can also compose your modal components when customization is needed."}),"\n",(0,o.jsx)(a.Z,Object.assign({},{component:Q,file:{data:'import {\n  Alert,\n  Box,\n  Button,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Space,\n  Stack,\n  Text,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\nimport SkeletonBlock from \'@/components/SkeletonBlock\';\n\nconst App = () => {\n  return (\n    <Stack direction="column" spacing="4x">\n      <ModalContent width={480}>\n        <ModalHeader>\n          Modal Title\n        </ModalHeader>\n        <ModalBody>\n          <Alert variant="outline" severity="warning" mb="4x">\n            <Text>This is a warning alert</Text>\n          </Alert>\n          <Text mb="4x">\n            Modal body text goes here.\n          </Text>\n          <SkeletonBlock />\n        </ModalBody>\n        <ModalFooter>\n          <Button variant="primary" minWidth="20x">Save Changes</Button>\n          <Space width="2x" />\n          <Button minWidth="20x">Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n      <ModalContent width={480}>\n        <ModalBody>\n          <Text mb="4x">\n            Modal body text goes here.\n          </Text>\n          <SkeletonBlock />\n        </ModalBody>\n        <ModalFooter>\n          <Button variant="primary" minWidth="20x">Save Changes</Button>\n          <Space width="2x" />\n          <Button minWidth="20x">Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n      <ModalContent width={480}>\n        <ModalBody>\n          <Text mb="4x">\n            Modal body text goes here.\n          </Text>\n          <SkeletonBlock />\n        </ModalBody>\n      </ModalContent>\n      <ModalContent width={480}>\n        <Box px="4x" py="4x">\n          You can create a custom modal with any sort of content.\n        </Box>\n      </ModalContent>\n    </Stack>\n  );\n};\n\nexport default App;',path:"pages/components/modal/index.page.mdx"},sandbox:{files:{"src/components/SkeletonBlock.js":'import {\n  Flex,\n  Skeleton,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst SkeletonBlock = (props) => (\n  <Flex {...props}>\n    <Flex flex="none" mr="4x" alignItems="center">\n      <Skeleton variant="circle" width="10x" height="10x" />\n    </Flex>\n    <Flex flex="auto" flexDirection="column" rowGap="2x">\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </Flex>\n  </Flex>\n);\n\nexport default SkeletonBlock;'},raw:'import {\n  Alert,\n  Box,\n  Button,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  Space,\n  Stack,\n  Text,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\nimport SkeletonBlock from \'@/components/SkeletonBlock\';\n\nconst App = () => {\n  return (\n    <Stack direction="column" spacing="4x">\n      <ModalContent width={480}>\n        <ModalHeader>\n          Modal Title\n        </ModalHeader>\n        <ModalBody>\n          <Alert variant="outline" severity="warning" mb="4x">\n            <Text>This is a warning alert</Text>\n          </Alert>\n          <Text mb="4x">\n            Modal body text goes here.\n          </Text>\n          <SkeletonBlock />\n        </ModalBody>\n        <ModalFooter>\n          <Button variant="primary" minWidth="20x">Save Changes</Button>\n          <Space width="2x" />\n          <Button minWidth="20x">Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n      <ModalContent width={480}>\n        <ModalBody>\n          <Text mb="4x">\n            Modal body text goes here.\n          </Text>\n          <SkeletonBlock />\n        </ModalBody>\n        <ModalFooter>\n          <Button variant="primary" minWidth="20x">Save Changes</Button>\n          <Space width="2x" />\n          <Button minWidth="20x">Cancel</Button>\n        </ModalFooter>\n      </ModalContent>\n      <ModalContent width={480}>\n        <ModalBody>\n          <Text mb="4x">\n            Modal body text goes here.\n          </Text>\n          <SkeletonBlock />\n        </ModalBody>\n      </ModalContent>\n      <ModalContent width={480}>\n        <Box px="4x" py="4x">\n          You can create a custom modal with any sort of content.\n        </Box>\n      </ModalContent>\n    </Stack>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(n.h2,{id:"usage",children:["Usage",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#usage",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(n.p,{children:"Click the button below to toggle a modal. The modal will show up in the center of the screen."}),"\n",(0,o.jsx)(a.Z,Object.assign({},{component:J,file:{data:'import { Global, css } from \'@emotion/react\';\nimport {\n  Alert,\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Code,\n  Divider,\n  Flex,\n  Grid,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Space,\n  Tab,\n  Tabs,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Text,\n  TextLabel,\n  Tooltip,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { EmailIcon, InfoOIcon, UserIcon } from \'@tonic-ui/react-icons\';\nimport {\n  useToggle,\n} from \'@tonic-ui/react-hooks\';\nimport React, { useRef, useState } from \'react\';\nimport SkeletonBlock from \'@/components/SkeletonBlock\';\n\nconst CodeBlock = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Box\n      backgroundColor={colorStyle.background.secondary}\n      border={1}\n      borderColor={colorStyle.divider}\n      fontFamily="mono"\n      py="3x"\n      px="3x"\n      whiteSpace="pre"\n      {...props}\n    />\n  );\n};\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst bodyScrollLockCode = `\n// import\nimport { Global } from \'@emotion/react\';\n\n// example\n<Modal>\n  <Global\n    styles={css\\`\n      body {\n        overflow: hidden;\n      }\n    \\`}\n  />\n  <ModalOverlay />\n  <ModalContent>\n    <ModalHeader />\n    <ModalBody />\n    <ModalFooter />\n  </ModalContent>\n</Modal>\n`.trim();\n\nconst App = () => {\n  const initialFocusRef = useRef();\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const iconColor = colorStyle.color.tertiary;\n  const [isOpen, toggleModal] = useToggle(false);\n  const [size, changeSizeBy] = useSelection(\'auto\');\n  const [scrollBehavior, changeScrollBehaviorBy] = useSelection(\'inside\');\n  const [initialContentHeight, changeInitialContentHeightBy] = useSelection(\'default\');\n  const [verticalPadding, changeVerticalPaddingBy] = useSelection(\'default\');\n  const [autoFocus, toggleAutoFocus] = useToggle(true);\n  const [closeOnEsc, toggleCloseOnEsc] = useToggle(true);\n  const [closeOnOutsideClick, toggleCloseOnOutsideClick] = useToggle(true);\n  const [ensureFocus, toggleEnsureFocus] = useToggle(true);\n  const [isClosable, toggleIsCloseButtonVisible] = useToggle(true);\n  const [returnFocusOnClose, toggleReturnFocusOnClose] = useToggle(true);\n  const [isOverlayVisible, toggleIsOverlayVisible] = useToggle(true);\n  const [isHeaderVisible, toggleIsHeaderVisible] = useToggle(true);\n  const [isBodyVisible, toggleIsBodyVisible] = useToggle(true);\n  const [isFooterVisible, toggleIsFooterVisible] = useToggle(true);\n  const [isAlertVisible, toggleIsAlertVisible] = useToggle(true);\n  const [enableBodyScrollLock, toggleBodyScrollLock] = useToggle(true);\n  const modalStyleProps = {};\n  const modalContentStyleProps = {};\n\n  if (size !== \'full\') {\n    if (verticalPadding !== \'default\') {\n      modalStyleProps.py = verticalPadding;\n    }\n\n    if (initialContentHeight !== \'default\') {\n      const propKey = (scrollBehavior === \'inside\') ? \'height\' : \'minHeight\';\n      modalContentStyleProps[propKey] = initialContentHeight;\n    }\n  }\n\n  return (<>\n    <Box>\n      <Tooltip label="Click to launch modal" openOnFocus={false}>\n        <Button onClick={() => toggleModal(true)}>\n          Launch modal\n        </Button>\n      </Tooltip>\n    </Box>\n    <Divider my="4x" />\n    <Box mb="4x">\n      <Text fontSize="lg" lineHeight="lg">\n        Modal props\n      </Text>\n    </Box>\n    <FormGroup>\n      <Box mb="2x">\n        <Tooltip\n          placement="right"\n          label={(\n            <>\n              <Text mb="2x">\n                Use the <Code>scrollBehavior</Code> prop to control how scrolling should behave:\n              </Text>\n              <Box as="ul" my="2x">\n                <li>If set to <Code>inside</Code>, only the <Code>ModalBody</Code> will scroll.</li>\n                <li>If set to <Code>outside</Code>, the entire <Code>ModalContent</Code> will scroll within the viewport.</li>\n              </Box>\n            </>\n          )}\n        >\n          <TextLabel display="inline-block">\n            <Flex alignItems="center" columnGap="2x">\n              scrollBehavior\n              <InfoOIcon />\n            </Flex>\n          </TextLabel>\n        </Tooltip>\n      </Box>\n      <ButtonGroup\n        variant="secondary"\n        sx={{\n          \'> *:not(:first-of-type)\': {\n            marginLeft: -1\n          }\n        }}\n      >\n        {[\'inside\', \'outside\'].map(value => (\n          <Button\n            key={value}\n            selected={value === scrollBehavior}\n            onClick={changeScrollBehaviorBy(value)}\n            minWidth="15x"\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </FormGroup>\n    <FormGroup>\n      <Box mb="2x">\n        <TextLabel>\n          size\n        </TextLabel>\n      </Box>\n      <ButtonGroup\n        variant="secondary"\n        sx={{\n          \'> *:not(:first-of-type)\': {\n            marginLeft: -1\n          }\n        }}\n      >\n        {[\'auto\', \'xs\', \'sm\', \'md\', \'lg\', \'xl\', \'full\'].map(value => (\n          <Button\n            key={value}\n            selected={value === size}\n            onClick={changeSizeBy(value)}\n            minWidth="15x"\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={autoFocus}\n          disabled={!ensureFocus}\n          onChange={() => toggleAutoFocus()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">autoFocus</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={closeOnEsc}\n          disabled={!isClosable && !closeOnOutsideClick}\n          onChange={() => toggleCloseOnEsc()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">closeOnEsc</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={closeOnOutsideClick}\n          disabled={!isClosable && !closeOnEsc}\n          onChange={() => toggleCloseOnOutsideClick()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">closeOnOutsideClick</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={ensureFocus}\n          onChange={() => toggleEnsureFocus()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ensureFocus</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={isClosable}\n          disabled={!closeOnEsc && !closeOnOutsideClick}\n          onChange={() => toggleIsCloseButtonVisible()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">isClosable</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={returnFocusOnClose}\n          disabled={!ensureFocus}\n          onChange={() => toggleReturnFocusOnClose()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">returnFocusOnClose</Text>\n      </TextLabel>\n    </FormGroup>\n    <Divider my="4x" />\n    <Box mb="4x">\n      <Text fontSize="lg" lineHeight="lg">\n        Modal style props\n      </Text>\n    </Box>\n    <FormGroup>\n      <Box mb="2x">\n        <TextLabel>\n          Initial content height\n        </TextLabel>\n      </Box>\n      <ButtonGroup\n        variant="secondary"\n        sx={{\n          \'> *:not(:first-of-type)\': {\n            marginLeft: -1\n          }\n        }}\n      >\n        {[\'default\', \'stretch\'].map(value => (\n          <Button\n            disabled={size === \'full\'}\n            key={value}\n            selected={value === initialContentHeight}\n            onClick={changeInitialContentHeightBy(value)}\n            minWidth="15x"\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </FormGroup>\n    <FormGroup>\n      <Box mb="2x">\n        <TextLabel>\n          Vertical padding\n        </TextLabel>\n      </Box>\n      <ButtonGroup\n        variant="secondary"\n        sx={{\n          \'> *:not(:first-of-type)\': {\n            marginLeft: -1\n          }\n        }}\n      >\n        {[\'default\', \'3rem\'].map(value => (\n          <Button\n            disabled={size === \'full\'}\n            key={value}\n            selected={value === verticalPadding}\n            onClick={changeVerticalPaddingBy(value)}\n            minWidth="15x"\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </FormGroup>\n    <FormGroup>\n      <Box mb="2x">\n        <TextLabel>\n          Pass below props to ModalContent for settings initial height and vertical margins. Note that the props are different when <Code>scrollBehavior</Code> changes.\n        </TextLabel>\n      </Box>\n      <CodeBlock>\n        {`const modalStyleProps = ${JSON.stringify(modalStyleProps, null, 2)};\\nconst modalContentStyleProps = ${JSON.stringify(modalContentStyleProps, null, 2)};\\n\\n// example\\n<Modal\\n  scrollBehavior="${scrollBehavior}"\\n  {...modalStyleProps}\\n>\\n  <ModalOverlay />\\n  <ModalContent {...contentStyleProps}>\\n    <ModalHeader />\\n    <ModalBody />\\n    <ModalFooter />\\n  </ModalContent>\\n</Modal>`}\n      </CodeBlock>\n    </FormGroup>\n    <Divider my="4x" />\n    <Box mb="4x">\n      <Text fontSize="lg" lineHeight="lg">\n        Modal composition\n      </Text>\n    </Box>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox checked={isOverlayVisible} onChange={() => toggleIsOverlayVisible()} />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ModalOverlay</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox checked={isHeaderVisible} onChange={() => toggleIsHeaderVisible()} />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ModalHeader</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox checked={isBodyVisible} onChange={() => toggleIsBodyVisible()} />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ModalBody</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox checked={isFooterVisible} onChange={() => toggleIsFooterVisible()} />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ModalFooter</Text>\n      </TextLabel>\n    </FormGroup>\n    <Divider my="4x" />\n    <Box mb="4x">\n      <Text fontSize="lg" lineHeight="lg">\n        Extra modal setup\n      </Text>\n    </Box>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center" mb="3x">\n        <Checkbox\n          checked={enableBodyScrollLock}\n          onChange={() => toggleBodyScrollLock()}\n        />\n        <Space width="2x" />\n        <Text>\n          Enable body scroll locking\n        </Text>\n      </TextLabel>\n      <Box ml="6x">\n        <Box mb="4x">\n          <Text mb="2x">\n            When setting <Code>{\'scrollBehavior="outside"\'}</Code> to enable outside scrolling, you should also use <strong>Body Scroll Locking</strong> to prevent the user from scrolling the page while the modal is open.\n          </Text>\n          <Text mb="2x">\n            <strong>Body Scroll Locking</strong> is currently not available with default setup, you can follow the instructions below to append global styles to the body to prevent scrolling.\n          </Text>\n        </Box>\n        <CodeBlock>\n          {bodyScrollLockCode}\n        </CodeBlock>\n      </Box>\n    </FormGroup>\n    <Modal\n      TransitionComponent={null}\n      autoFocus={autoFocus}\n      closeOnEsc={closeOnEsc}\n      closeOnOutsideClick={closeOnOutsideClick}\n      ensureFocus={ensureFocus}\n      initialFocusRef={initialFocusRef}\n      isClosable={isClosable}\n      isOpen={isOpen}\n      onClose={() => toggleModal(false)}\n      returnFocusOnClose={returnFocusOnClose}\n      scrollBehavior={scrollBehavior}\n      size={size}\n      {...modalStyleProps}\n    >\n      {enableBodyScrollLock && (\n        <Global\n          styles={css`\n            body {\n              overflow: hidden;\n            }\n          `}\n        />\n      )}\n      {isOverlayVisible && (\n        <ModalOverlay />\n      )}\n      <ModalContent\n        {...modalContentStyleProps}\n      >\n        {isHeaderVisible && (\n          <ModalHeader>\n            {size === \'auto\' && <Text>Auto-sized Modal</Text>}\n            {size === \'xs\' && <Text>Extra Small Modal</Text>}\n            {size === \'sm\' && <Text>Small Modal</Text>}\n            {size === \'md\' && <Text>Medium Modal</Text>}\n            {size === \'lg\' && <Text>Large Modal</Text>}\n            {size === \'xl\' && <Text>Extra Large Modal</Text>}\n            {size === \'full\' && <Text>Full-width Modal</Text>}\n          </ModalHeader>\n        )}\n        {isBodyVisible && (\n          <ModalBody>\n            {isAlertVisible && (\n              <Alert variant="outline" severity="info" mb="4x" isClosable onClose={() => toggleIsAlertVisible()}>\n                <Text>This is an info alert</Text>\n              </Alert>\n            )}\n            <Tabs>\n              <TabList mb="4x">\n                <Tab>Tab 1</Tab>\n                <Tab>Tab 2</Tab>\n              </TabList>\n              <TabPanels>\n                <TabPanel>\n                  <SkeletonBlock mb="4x" />\n                  <Grid\n                    templateColumns="auto 1fr"\n                    rowGap="2x"\n                    columnGap="3x"\n                    alignItems="center"\n                    mb="4x"\n                  >\n                    <UserIcon color={iconColor} />\n                    <Input ref={initialFocusRef} placeholder="User name" />\n                    <EmailIcon color={iconColor} />\n                    <Input placeholder="Email address" />\n                  </Grid>\n                </TabPanel>\n                <TabPanel>\n                  <Box\n                    backgroundColor={colorStyle.background.tertiary}\n                    minHeight={1000}\n                    px="3x"\n                    py="2x"\n                  >\n                    <Text>\n                      This is a very long content that will overflow the modal\n                    </Text>\n                  </Box>\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n          </ModalBody>\n        )}\n        {isFooterVisible && (\n          <ModalFooter>\n            <Grid\n              templateColumns="1fr 1fr"\n              columnGap="2x"\n            >\n              <Button variant="primary">\n                OK\n              </Button>\n              <Button onClick={() => toggleModal(false)}>\n                Cancel\n              </Button>\n            </Grid>\n          </ModalFooter>\n        )}\n      </ModalContent>\n    </Modal>\n  </>);\n};\n\nexport default App;',path:"pages/components/modal/index.page.mdx"},sandbox:{files:{"src/components/SkeletonBlock.js":'import {\n  Flex,\n  Skeleton,\n} from \'@tonic-ui/react\';\nimport React from \'react\';\n\nconst SkeletonBlock = (props) => (\n  <Flex {...props}>\n    <Flex flex="none" mr="4x" alignItems="center">\n      <Skeleton variant="circle" width="10x" height="10x" />\n    </Flex>\n    <Flex flex="auto" flexDirection="column" rowGap="2x">\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </Flex>\n  </Flex>\n);\n\nexport default SkeletonBlock;'},raw:'import { Global, css } from \'@emotion/react\';\nimport {\n  Alert,\n  Box,\n  Button,\n  ButtonGroup,\n  Checkbox,\n  Code,\n  Divider,\n  Flex,\n  Grid,\n  Input,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Space,\n  Tab,\n  Tabs,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Text,\n  TextLabel,\n  Tooltip,\n  useColorMode,\n  useColorStyle,\n} from \'@tonic-ui/react\';\nimport { EmailIcon, InfoOIcon, UserIcon } from \'@tonic-ui/react-icons\';\nimport {\n  useToggle,\n} from \'@tonic-ui/react-hooks\';\nimport React, { useRef, useState } from \'react\';\nimport SkeletonBlock from \'@/components/SkeletonBlock\';\n\nconst CodeBlock = (props) => {\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n\n  return (\n    <Box\n      backgroundColor={colorStyle.background.secondary}\n      border={1}\n      borderColor={colorStyle.divider}\n      fontFamily="mono"\n      py="3x"\n      px="3x"\n      whiteSpace="pre"\n      {...props}\n    />\n  );\n};\n\nconst FormGroup = (props) => (\n  <Box mb="4x" {...props} />\n);\n\nconst useSelection = (defaultValue) => {\n  const [value, setValue] = useState(defaultValue);\n  const changeBy = (value) => () => setValue(value);\n  return [value, changeBy];\n};\n\nconst bodyScrollLockCode = `\n// import\nimport { Global } from \'@emotion/react\';\n\n// example\n<Modal>\n  <Global\n    styles={css\\`\n      body {\n        overflow: hidden;\n      }\n    \\`}\n  />\n  <ModalOverlay />\n  <ModalContent>\n    <ModalHeader />\n    <ModalBody />\n    <ModalFooter />\n  </ModalContent>\n</Modal>\n`.trim();\n\nconst App = () => {\n  const initialFocusRef = useRef();\n  const [colorMode] = useColorMode();\n  const [colorStyle] = useColorStyle({ colorMode });\n  const iconColor = colorStyle.color.tertiary;\n  const [isOpen, toggleModal] = useToggle(false);\n  const [size, changeSizeBy] = useSelection(\'auto\');\n  const [scrollBehavior, changeScrollBehaviorBy] = useSelection(\'inside\');\n  const [initialContentHeight, changeInitialContentHeightBy] = useSelection(\'default\');\n  const [verticalPadding, changeVerticalPaddingBy] = useSelection(\'default\');\n  const [autoFocus, toggleAutoFocus] = useToggle(true);\n  const [closeOnEsc, toggleCloseOnEsc] = useToggle(true);\n  const [closeOnOutsideClick, toggleCloseOnOutsideClick] = useToggle(true);\n  const [ensureFocus, toggleEnsureFocus] = useToggle(true);\n  const [isClosable, toggleIsCloseButtonVisible] = useToggle(true);\n  const [returnFocusOnClose, toggleReturnFocusOnClose] = useToggle(true);\n  const [isOverlayVisible, toggleIsOverlayVisible] = useToggle(true);\n  const [isHeaderVisible, toggleIsHeaderVisible] = useToggle(true);\n  const [isBodyVisible, toggleIsBodyVisible] = useToggle(true);\n  const [isFooterVisible, toggleIsFooterVisible] = useToggle(true);\n  const [isAlertVisible, toggleIsAlertVisible] = useToggle(true);\n  const [enableBodyScrollLock, toggleBodyScrollLock] = useToggle(true);\n  const modalStyleProps = {};\n  const modalContentStyleProps = {};\n\n  if (size !== \'full\') {\n    if (verticalPadding !== \'default\') {\n      modalStyleProps.py = verticalPadding;\n    }\n\n    if (initialContentHeight !== \'default\') {\n      const propKey = (scrollBehavior === \'inside\') ? \'height\' : \'minHeight\';\n      modalContentStyleProps[propKey] = initialContentHeight;\n    }\n  }\n\n  return (<>\n    <Box>\n      <Tooltip label="Click to launch modal" openOnFocus={false}>\n        <Button onClick={() => toggleModal(true)}>\n          Launch modal\n        </Button>\n      </Tooltip>\n    </Box>\n    <Divider my="4x" />\n    <Box mb="4x">\n      <Text fontSize="lg" lineHeight="lg">\n        Modal props\n      </Text>\n    </Box>\n    <FormGroup>\n      <Box mb="2x">\n        <Tooltip\n          placement="right"\n          label={(\n            <>\n              <Text mb="2x">\n                Use the <Code>scrollBehavior</Code> prop to control how scrolling should behave:\n              </Text>\n              <Box as="ul" my="2x">\n                <li>If set to <Code>inside</Code>, only the <Code>ModalBody</Code> will scroll.</li>\n                <li>If set to <Code>outside</Code>, the entire <Code>ModalContent</Code> will scroll within the viewport.</li>\n              </Box>\n            </>\n          )}\n        >\n          <TextLabel display="inline-block">\n            <Flex alignItems="center" columnGap="2x">\n              scrollBehavior\n              <InfoOIcon />\n            </Flex>\n          </TextLabel>\n        </Tooltip>\n      </Box>\n      <ButtonGroup\n        variant="secondary"\n        sx={{\n          \'> *:not(:first-of-type)\': {\n            marginLeft: -1\n          }\n        }}\n      >\n        {[\'inside\', \'outside\'].map(value => (\n          <Button\n            key={value}\n            selected={value === scrollBehavior}\n            onClick={changeScrollBehaviorBy(value)}\n            minWidth="15x"\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </FormGroup>\n    <FormGroup>\n      <Box mb="2x">\n        <TextLabel>\n          size\n        </TextLabel>\n      </Box>\n      <ButtonGroup\n        variant="secondary"\n        sx={{\n          \'> *:not(:first-of-type)\': {\n            marginLeft: -1\n          }\n        }}\n      >\n        {[\'auto\', \'xs\', \'sm\', \'md\', \'lg\', \'xl\', \'full\'].map(value => (\n          <Button\n            key={value}\n            selected={value === size}\n            onClick={changeSizeBy(value)}\n            minWidth="15x"\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={autoFocus}\n          disabled={!ensureFocus}\n          onChange={() => toggleAutoFocus()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">autoFocus</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={closeOnEsc}\n          disabled={!isClosable && !closeOnOutsideClick}\n          onChange={() => toggleCloseOnEsc()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">closeOnEsc</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={closeOnOutsideClick}\n          disabled={!isClosable && !closeOnEsc}\n          onChange={() => toggleCloseOnOutsideClick()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">closeOnOutsideClick</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={ensureFocus}\n          onChange={() => toggleEnsureFocus()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ensureFocus</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={isClosable}\n          disabled={!closeOnEsc && !closeOnOutsideClick}\n          onChange={() => toggleIsCloseButtonVisible()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">isClosable</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox\n          checked={returnFocusOnClose}\n          disabled={!ensureFocus}\n          onChange={() => toggleReturnFocusOnClose()}\n        />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">returnFocusOnClose</Text>\n      </TextLabel>\n    </FormGroup>\n    <Divider my="4x" />\n    <Box mb="4x">\n      <Text fontSize="lg" lineHeight="lg">\n        Modal style props\n      </Text>\n    </Box>\n    <FormGroup>\n      <Box mb="2x">\n        <TextLabel>\n          Initial content height\n        </TextLabel>\n      </Box>\n      <ButtonGroup\n        variant="secondary"\n        sx={{\n          \'> *:not(:first-of-type)\': {\n            marginLeft: -1\n          }\n        }}\n      >\n        {[\'default\', \'stretch\'].map(value => (\n          <Button\n            disabled={size === \'full\'}\n            key={value}\n            selected={value === initialContentHeight}\n            onClick={changeInitialContentHeightBy(value)}\n            minWidth="15x"\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </FormGroup>\n    <FormGroup>\n      <Box mb="2x">\n        <TextLabel>\n          Vertical padding\n        </TextLabel>\n      </Box>\n      <ButtonGroup\n        variant="secondary"\n        sx={{\n          \'> *:not(:first-of-type)\': {\n            marginLeft: -1\n          }\n        }}\n      >\n        {[\'default\', \'3rem\'].map(value => (\n          <Button\n            disabled={size === \'full\'}\n            key={value}\n            selected={value === verticalPadding}\n            onClick={changeVerticalPaddingBy(value)}\n            minWidth="15x"\n          >\n            {value}\n          </Button>\n        ))}\n      </ButtonGroup>\n    </FormGroup>\n    <FormGroup>\n      <Box mb="2x">\n        <TextLabel>\n          Pass below props to ModalContent for settings initial height and vertical margins. Note that the props are different when <Code>scrollBehavior</Code> changes.\n        </TextLabel>\n      </Box>\n      <CodeBlock>\n        {`const modalStyleProps = ${JSON.stringify(modalStyleProps, null, 2)};\\nconst modalContentStyleProps = ${JSON.stringify(modalContentStyleProps, null, 2)};\\n\\n// example\\n<Modal\\n  scrollBehavior="${scrollBehavior}"\\n  {...modalStyleProps}\\n>\\n  <ModalOverlay />\\n  <ModalContent {...contentStyleProps}>\\n    <ModalHeader />\\n    <ModalBody />\\n    <ModalFooter />\\n  </ModalContent>\\n</Modal>`}\n      </CodeBlock>\n    </FormGroup>\n    <Divider my="4x" />\n    <Box mb="4x">\n      <Text fontSize="lg" lineHeight="lg">\n        Modal composition\n      </Text>\n    </Box>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox checked={isOverlayVisible} onChange={() => toggleIsOverlayVisible()} />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ModalOverlay</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox checked={isHeaderVisible} onChange={() => toggleIsHeaderVisible()} />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ModalHeader</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox checked={isBodyVisible} onChange={() => toggleIsBodyVisible()} />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ModalBody</Text>\n      </TextLabel>\n    </FormGroup>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center">\n        <Checkbox checked={isFooterVisible} onChange={() => toggleIsFooterVisible()} />\n        <Space width="2x" />\n        <Text fontFamily="mono" whiteSpace="nowrap">ModalFooter</Text>\n      </TextLabel>\n    </FormGroup>\n    <Divider my="4x" />\n    <Box mb="4x">\n      <Text fontSize="lg" lineHeight="lg">\n        Extra modal setup\n      </Text>\n    </Box>\n    <FormGroup>\n      <TextLabel display="flex" alignItems="center" mb="3x">\n        <Checkbox\n          checked={enableBodyScrollLock}\n          onChange={() => toggleBodyScrollLock()}\n        />\n        <Space width="2x" />\n        <Text>\n          Enable body scroll locking\n        </Text>\n      </TextLabel>\n      <Box ml="6x">\n        <Box mb="4x">\n          <Text mb="2x">\n            When setting <Code>{\'scrollBehavior="outside"\'}</Code> to enable outside scrolling, you should also use <strong>Body Scroll Locking</strong> to prevent the user from scrolling the page while the modal is open.\n          </Text>\n          <Text mb="2x">\n            <strong>Body Scroll Locking</strong> is currently not available with default setup, you can follow the instructions below to append global styles to the body to prevent scrolling.\n          </Text>\n        </Box>\n        <CodeBlock>\n          {bodyScrollLockCode}\n        </CodeBlock>\n      </Box>\n    </FormGroup>\n    <Modal\n      TransitionComponent={null}\n      autoFocus={autoFocus}\n      closeOnEsc={closeOnEsc}\n      closeOnOutsideClick={closeOnOutsideClick}\n      ensureFocus={ensureFocus}\n      initialFocusRef={initialFocusRef}\n      isClosable={isClosable}\n      isOpen={isOpen}\n      onClose={() => toggleModal(false)}\n      returnFocusOnClose={returnFocusOnClose}\n      scrollBehavior={scrollBehavior}\n      size={size}\n      {...modalStyleProps}\n    >\n      {enableBodyScrollLock && (\n        <Global\n          styles={css`\n            body {\n              overflow: hidden;\n            }\n          `}\n        />\n      )}\n      {isOverlayVisible && (\n        <ModalOverlay />\n      )}\n      <ModalContent\n        {...modalContentStyleProps}\n      >\n        {isHeaderVisible && (\n          <ModalHeader>\n            {size === \'auto\' && <Text>Auto-sized Modal</Text>}\n            {size === \'xs\' && <Text>Extra Small Modal</Text>}\n            {size === \'sm\' && <Text>Small Modal</Text>}\n            {size === \'md\' && <Text>Medium Modal</Text>}\n            {size === \'lg\' && <Text>Large Modal</Text>}\n            {size === \'xl\' && <Text>Extra Large Modal</Text>}\n            {size === \'full\' && <Text>Full-width Modal</Text>}\n          </ModalHeader>\n        )}\n        {isBodyVisible && (\n          <ModalBody>\n            {isAlertVisible && (\n              <Alert variant="outline" severity="info" mb="4x" isClosable onClose={() => toggleIsAlertVisible()}>\n                <Text>This is an info alert</Text>\n              </Alert>\n            )}\n            <Tabs>\n              <TabList mb="4x">\n                <Tab>Tab 1</Tab>\n                <Tab>Tab 2</Tab>\n              </TabList>\n              <TabPanels>\n                <TabPanel>\n                  <SkeletonBlock mb="4x" />\n                  <Grid\n                    templateColumns="auto 1fr"\n                    rowGap="2x"\n                    columnGap="3x"\n                    alignItems="center"\n                    mb="4x"\n                  >\n                    <UserIcon color={iconColor} />\n                    <Input ref={initialFocusRef} placeholder="User name" />\n                    <EmailIcon color={iconColor} />\n                    <Input placeholder="Email address" />\n                  </Grid>\n                </TabPanel>\n                <TabPanel>\n                  <Box\n                    backgroundColor={colorStyle.background.tertiary}\n                    minHeight={1000}\n                    px="3x"\n                    py="2x"\n                  >\n                    <Text>\n                      This is a very long content that will overflow the modal\n                    </Text>\n                  </Box>\n                </TabPanel>\n              </TabPanels>\n            </Tabs>\n          </ModalBody>\n        )}\n        {isFooterVisible && (\n          <ModalFooter>\n            <Grid\n              templateColumns="1fr 1fr"\n              columnGap="2x"\n            >\n              <Button variant="primary">\n                OK\n              </Button>\n              <Button onClick={() => toggleModal(false)}>\n                Cancel\n              </Button>\n            </Grid>\n          </ModalFooter>\n        )}\n      </ModalContent>\n    </Modal>\n  </>);\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(n.h3,{id:"how-to-close-a-modal",children:["How to close a modal",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#how-to-close-a-modal",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.h4,{id:"using-the-isclosable-prop",children:["Using the ",(0,o.jsx)(n.code,{children:"isClosable"})," prop",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-isclosable-prop",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"isClosable"})," prop is used to make a modal closable by adding a close button to it. By default, the value of ",(0,o.jsx)(n.code,{children:"isClosable"})," is false. To make a modal closable, set ",(0,o.jsx)(n.code,{children:"isClosable"})," to true."]}),"\n",(0,o.jsx)(n.pre,{disabled:!0,children:(0,o.jsx)(n.code,{className:"language-jsx",children:"<Modal isOpen={isOpen} isClosable onClose={onClose}>\n  <ModalOverlay />\n  <ModalContent>\n    <ModalHeader />\n    <ModalBody />\n    <ModalFooter />\n  </ModalContent>\n</Modal>\n"})}),"\n",(0,o.jsxs)(n.h4,{id:"using-the-modalclosebutton-component",children:["Using the ",(0,o.jsx)(n.code,{children:"ModalCloseButton"})," component",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#using-the-modalclosebutton-component",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"ModalCloseButton"})," component provides an easy way to add a close button to a modal. This button is specifically designed to handle closing the modal, so you don't need to write any additional code to handle it. If you use ",(0,o.jsx)(n.code,{children:"ModalCloseButton"}),", you can omit the ",(0,o.jsx)(n.code,{children:"isClosable"})," prop in the ",(0,o.jsx)(n.code,{children:"Modal"})," component."]}),"\n",(0,o.jsxs)(n.p,{children:["Besides the default functionality of the ",(0,o.jsx)(n.code,{children:"ModalCloseButton"}),", you can also pass additional props, such as ",(0,o.jsx)(n.code,{children:"data-test"})," or ",(0,o.jsx)(n.code,{children:"data-tracking"})," attributes, to the ",(0,o.jsx)(n.code,{children:"ModalCloseButton"})," component as needed."]}),"\n",(0,o.jsx)(n.pre,{disabled:!0,children:(0,o.jsx)(n.code,{className:"language-jsx",children:'<Modal isOpen={isOpen} onClose={onClose}>\n  <ModalOverlay />\n  <ModalContent>\n    <ModalHeader />\n    <ModalBody />\n    <ModalFooter />\n    <ModalCloseButton data-test="modal-close-button" />\n  </ModalContent>\n</Modal>\n'})}),"\n",(0,o.jsxs)(n.h3,{id:"nested-modals",children:["Nested modals",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#nested-modals",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsx)(n.p,{children:"In some cases, you may need to open a modal that is positioned relative to its parent modal, especially when a confirmation is required."}),"\n",(0,o.jsx)(n.p,{children:"To achieve this, you can create a nested modal. A nested modal is simply a modal that is opened from within another modal. This way, the nested modal is positioned relative to its parent modal."}),"\n",(0,o.jsxs)(n.p,{children:["One way to implement a nested modal is to use the ",(0,o.jsx)(n.code,{children:"useToggle"})," hook to control modal visibility. This hook can be used to toggle the state of a modal between open and closed, allowing you to easily show and hide nested modals."]}),"\n",(0,o.jsx)(a.Z,Object.assign({},{component:b,file:{data:'import {\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React from \'react\';\n\nconst App = () => {\n  const [isOpen, toggleModal] = useToggle(false);\n  const [isNestedOpen, toggleNestedModal] = useToggle(false);\n\n  return (\n    <>\n      <Button onClick={() => toggleModal(true)}>Launch modal</Button>\n      <Modal\n        closeOnEsc\n        closeOnOutsideClick\n        isClosable\n        isOpen={isOpen}\n        onClose={() => toggleModal(false)}\n        size="sm"\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            Modal\n          </ModalHeader>\n          <ModalBody>\n            Modal body text goes here.\n          </ModalBody>\n          <ModalFooter justifyContent="space-between">\n            <Button\n              disabled={isNestedOpen}\n              variant="primary"\n              onClick={() => toggleNestedModal(true)}\n            >\n              Launch nested modal\n            </Button>\n            <Box>\n              <Button onClick={() => toggleModal(false)} minWidth="20x">\n                Close\n              </Button>\n            </Box>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      <Modal\n        closeOnEsc\n        closeOnOutsideClick\n        isClosable\n        isOpen={isNestedOpen}\n        onClose={() => toggleNestedModal(false)}\n        size="xs"\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            Nested Modal\n          </ModalHeader>\n          <ModalBody>\n            Modal body text goes here.\n          </ModalBody>\n          <ModalFooter columnGap="2x">\n            <Button variant="primary" onClick={() => toggleNestedModal(false)} minWidth="20x">\n              Yes\n            </Button>\n            <Button onClick={() => toggleNestedModal(false)} minWidth="20x">\n              No\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default App;',path:"pages/components/modal/index.page.mdx"},sandbox:{files:{},raw:'import {\n  Box,\n  Button,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n} from \'@tonic-ui/react\';\nimport { useToggle } from \'@tonic-ui/react-hooks\';\nimport React from \'react\';\n\nconst App = () => {\n  const [isOpen, toggleModal] = useToggle(false);\n  const [isNestedOpen, toggleNestedModal] = useToggle(false);\n\n  return (\n    <>\n      <Button onClick={() => toggleModal(true)}>Launch modal</Button>\n      <Modal\n        closeOnEsc\n        closeOnOutsideClick\n        isClosable\n        isOpen={isOpen}\n        onClose={() => toggleModal(false)}\n        size="sm"\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            Modal\n          </ModalHeader>\n          <ModalBody>\n            Modal body text goes here.\n          </ModalBody>\n          <ModalFooter justifyContent="space-between">\n            <Button\n              disabled={isNestedOpen}\n              variant="primary"\n              onClick={() => toggleNestedModal(true)}\n            >\n              Launch nested modal\n            </Button>\n            <Box>\n              <Button onClick={() => toggleModal(false)} minWidth="20x">\n                Close\n              </Button>\n            </Box>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      <Modal\n        closeOnEsc\n        closeOnOutsideClick\n        isClosable\n        isOpen={isNestedOpen}\n        onClose={() => toggleNestedModal(false)}\n        size="xs"\n      >\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>\n            Nested Modal\n          </ModalHeader>\n          <ModalBody>\n            Modal body text goes here.\n          </ModalBody>\n          <ModalFooter columnGap="2x">\n            <Button variant="primary" onClick={() => toggleNestedModal(false)} minWidth="20x">\n              Yes\n            </Button>\n            <Button onClick={() => toggleNestedModal(false)} minWidth="20x">\n              No\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default App;',title:"Tonic UI"}})),"\n",(0,o.jsxs)(n.h2,{id:"props",children:["Props",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#props",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.h3,{id:"modal-1",children:["Modal",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#modal-1",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"autoFocus"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"false"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the modal will automatically set focus on the first focusable element inside the modal when it is opened.",(0,o.jsx)("br",{}),"⚠️ This only works if ",(0,o.jsx)(n.code,{children:"initialFocusRef"})," is not defined and ",(0,o.jsx)(n.code,{children:"ensureFocus"})," is set to ",(0,o.jsx)(n.code,{children:"true"}),"."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"children"}),(0,o.jsxs)(n.td,{align:"left",children:["ReactNode | ",(0,o.jsx)(n.code,{children:"(context) => ReactNode"})]}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left",children:"A function child can be used intead of a React element. This function is called with the context object."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"closeOnEsc"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"false"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", close the modal when the ",(0,o.jsx)(n.code,{children:"esc"})," key is pressed."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"closeOnOutsideClick"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"false"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", close the modal when click outside of the modal."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"ensureFocus"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"false"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", it ensures that the user's focus remains within the modal when it is open, preventing them from interacting with elements outside the modal."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"finalFocusRef"}),(0,o.jsx)(n.td,{align:"left",children:"RefObject"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["The ",(0,o.jsx)(n.code,{children:"ref"})," of the element that should receive focus when the modal closes.",(0,o.jsx)("br",{}),"⚠️ This only works if ",(0,o.jsx)(n.code,{children:"ensureFocus"})," is set to ",(0,o.jsx)(n.code,{children:"true"}),"."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"initialFocusRef"}),(0,o.jsx)(n.td,{align:"left",children:"RefObject"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["The ",(0,o.jsx)(n.code,{children:"ref"})," of the element that should receive focus when the modal opens.",(0,o.jsx)("br",{}),"⚠️ This only works if ",(0,o.jsx)(n.code,{children:"ensureFocus"})," is set to ",(0,o.jsx)(n.code,{children:"true"}),"."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"isClosable"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"false"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", a close button will appear on the right side."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"isOpen"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"false"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the modal is shown."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"onClose"}),(0,o.jsx)(n.td,{align:"left",children:"function"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left",children:"Callback fired when the modal closes."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"returnFocusOnClose"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsxs)(n.td,{align:"left",children:["If ",(0,o.jsx)(n.code,{children:"true"}),", the focus will be restored to the element that was focused on when the modal was initially opened.",(0,o.jsx)("br",{}),"⚠️ This only works if ",(0,o.jsx)(n.code,{children:"ensureFocus"})," is set to ",(0,o.jsx)(n.code,{children:"true"}),"."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"size"}),(0,o.jsx)(n.td,{align:"left",children:"string"}),(0,o.jsx)(n.td,{align:"left",children:"'auto'"}),(0,o.jsx)(n.td,{align:"left",children:"Change the size of the modal. One of: 'auto', 'xs', 'sm', 'md', 'lg', 'xl', 'full'"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"scrollBehavior"}),(0,o.jsx)(n.td,{align:"left",children:"string"}),(0,o.jsx)(n.td,{align:"left",children:"'inside'"}),(0,o.jsx)(n.td,{align:"left",children:"Control the scroll behavior of the modal if the content overflows. One of: 'inside', 'outside'"})]})]})]}),"\n",(0,o.jsxs)(n.h3,{id:"modaloverlay",children:["ModalOverlay",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#modaloverlay",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionComponent"}),(0,o.jsx)(n.td,{align:"left",children:"ElementType"}),(0,o.jsx)(n.td,{align:"left",children:"Fade"}),(0,o.jsx)(n.td,{align:"left",children:"The component used for the transition."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionProps"}),(0,o.jsx)(n.td,{align:"left",children:"object"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,o.jsx)(n.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionProps.appear"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsx)(n.td,{align:"left"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"children"}),(0,o.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left"})]})]})]}),"\n",(0,o.jsxs)(n.h3,{id:"modalcontent",children:["ModalContent",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#modalcontent",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsxs)(n.tbody,{children:[(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionComponent"}),(0,o.jsx)(n.td,{align:"left",children:"ElementType"}),(0,o.jsx)(n.td,{align:"left",children:"Fade"}),(0,o.jsx)(n.td,{align:"left",children:"The component used for the transition."})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionProps"}),(0,o.jsx)(n.td,{align:"left",children:"object"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsxs)(n.td,{align:"left",children:["Props applied to the ",(0,o.jsx)(n.a,{href:"http://reactcommunity.org/react-transition-group/transition#Transition-props",children:"Transition"})," element."]})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"TransitionProps.appear"}),(0,o.jsx)(n.td,{align:"left",children:"boolean"}),(0,o.jsx)(n.td,{align:"left",children:"true"}),(0,o.jsx)(n.td,{align:"left"})]}),(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"children"}),(0,o.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left"})]})]})]}),"\n",(0,o.jsxs)(n.h3,{id:"modalheader",children:["ModalHeader",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#modalheader",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"children"}),(0,o.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,o.jsxs)(n.h3,{id:"modalbody",children:["ModalBody",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#modalbody",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"children"}),(0,o.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,o.jsxs)(n.h3,{id:"modalfooter",children:["ModalFooter",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#modalfooter",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"children"}),(0,o.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left"})]})})]}),"\n",(0,o.jsxs)(n.h3,{id:"modalclosebutton",children:["ModalCloseButton",(0,o.jsx)(n.a,{"aria-hidden":!0,className:"anchor-link",tabIndex:"-1",href:"#modalclosebutton",children:(0,o.jsx)(n.svg,{children:(0,o.jsx)(n.use,{xlinkHref:"#anchor-link-icon"})})})]}),"\n",(0,o.jsxs)(n.table,{children:[(0,o.jsx)(n.thead,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.th,{align:"left",children:"Name"}),(0,o.jsx)(n.th,{align:"left",children:"Type"}),(0,o.jsx)(n.th,{align:"left",children:"Default"}),(0,o.jsx)(n.th,{align:"left",children:"Description"})]})}),(0,o.jsx)(n.tbody,{children:(0,o.jsxs)(n.tr,{children:[(0,o.jsx)(n.td,{align:"left",children:"children"}),(0,o.jsx)(n.td,{align:"left",children:"ReactNode"}),(0,o.jsx)(n.td,{align:"left"}),(0,o.jsx)(n.td,{align:"left"})]})})]})]})}var en=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=Object.assign({},(0,l.ah)(),e.components).wrapper;return n?(0,o.jsx)(n,Object.assign({},e,{children:(0,o.jsx)(ee,e)})):ee(e)}},96835:function(e,n,t){"use strict";t.d(n,{Z:function(){return E}});var o=t(27216),l=t(40596),a=t(49857),r=t(73645),i=t(99870),s=t(62272),c=t(14594),d=t(65019),u=t(37384),h=t(99554),m=t(69111),x=t(5632),p=t(2784),f=t(65245);function g(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var b=function(e){var n=document.createElement("textarea");n.value=e,n.setAttribute("readonly",""),n.style.position="absolute",n.style.left="-9999px",document.body.appendChild(n);var t=document.getSelection().rangeCount>0&&document.getSelection().getRangeAt(0);n.select(),document.execCommand("copy"),document.body.removeChild(n),t&&(document.getSelection().removeAllRanges(),document.getSelection().addRange(t))},y=function(e){var n,t=function(e){if(Array.isArray(e))return e}(n=(0,p.useState)(!1))||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,a,r,i=[],s=!0,c=!1;try{for(a=(t=t.call(e)).next;!(s=(o=a.call(t)).done)&&(i.push(o.value),2!==i.length);s=!0);}catch(e){c=!0,l=e}finally{try{if(!s&&null!=t.return&&(r=t.return(),Object(r)!==r))return}finally{if(c)throw l}}return i}}(n,2)||function(e,n){if(e){if("string"==typeof e)return g(e,2);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return g(e,2)}}(n,2)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),o=t[0],l=t[1];return{value:e,onCopy:function(){b(e),l(!0),setTimeout(function(){return l(!1)},1500)},hasCopied:o}},C=t(63768),v=t(76761),j=t(73205),k=t(98107),M=t(44285),Z=["component","defaultExpanded","expanded","file","sandbox"];function T(e,n){return function(e){if(Array.isArray(e))return e}(e)||function(e,n){var t=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=t){var o,l,a,r,i=[],s=!0,c=!1;try{if(a=(t=t.call(e)).next,0===n){if(Object(t)!==t)return;s=!1}else for(;!(s=(o=a.call(t)).done)&&(i.push(o.value),i.length!==n);s=!0);}catch(e){c=!0,l=e}finally{try{if(!s&&null!=t.return&&(r=t.return(),Object(r)!==r))return}finally{if(c)throw l}}return i}}(e,n)||function(e,n){if(e){if("string"==typeof e)return B(e,n);var t=Object.prototype.toString.call(e).slice(8,-1);if("Object"===t&&e.constructor&&(t=e.constructor.name),"Map"===t||"Set"===t)return Array.from(e);if("Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t))return B(e,n)}}(e,n)||function(){throw TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function B(e,n){(null==n||n>e.length)&&(n=e.length);for(var t=0,o=Array(n);t<n;t++)o[t]=e[t];return o}var w=function(e){var n,t=e.component,g=e.defaultExpanded,b=e.expanded,B=e.file,w=e.sandbox;!function(e,n){if(null!=e){var t,o,l=function(e,n){if(null==e)return{};var t,o,l={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],!(n.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}}}(e,Z);var E=(0,x.useRouter)(),F=T((0,p.useReducer)(function(e){return!e},!1),2),S=F[0],O=F[1],I=(0,o.u)(),G=T((0,l.Z)(),1)[0],L={dark:v.y,light:v.q}[G],z=T((0,d.Z)(null!=b?b:void 0!==g&&g),2),H=z[0],N=z[1],P=y(null==B?void 0:B.data),A=P.onCopy,R=P.hasCopied,V=(0,p.useCallback)(function(){A()},[A]),W=(0,p.useCallback)(function(){(0,j.b)(w)},[w]),_=(0,p.useCallback)(function(){O(),N(!1)},[O,N]);return((0,p.useEffect)(function(){void 0!==b&&b!==H&&N(b)},[b,H,N]),t)?p.createElement(f.nu,{code:null==B?void 0:B.data,disabled:!0,language:"jsx",theme:L},p.createElement(a.Z,{border:1,borderColor:{dark:"gray:70",light:"gray:30"}[G],p:"4x"},p.createElement(a.Z,{fontSize:"sm",lineHeight:"sm"},p.createElement(p.Fragment,{key:S},p.createElement(t,null)))),p.createElement(r.Z,{columnGap:"2x",justifyContent:"flex-end",mb:"4x"},p.createElement(M.Z,{"data-track":H?"CodeBlock|hide_source|".concat((0,k.Z)({path:E.pathname})):"CodeBlock|show_source|".concat((0,k.Z)({path:E.pathname})),onClick:N},p.createElement(i.Z,{label:H?"Hide the source":"Show the source"},p.createElement(u.Z,null))),p.createElement(M.Z,{"data-track":"CodeBlock|copy_source|".concat((0,k.Z)({path:E.pathname})),onClick:V},p.createElement(i.Z,{label:R?"Copied":"Copy the source"},p.createElement(h.Z,null))),p.createElement(M.Z,{"data-track":"CodeBlock|edit_in_codesandbox|".concat(E.pathname),onClick:W},p.createElement(i.Z,{label:"Edit in CodeSandbox"},p.createElement(C.Z,null))),p.createElement(M.Z,{"data-track":"CodeBlock|reset|".concat(E.pathname),onClick:_},p.createElement(i.Z,{label:"Reset the demo"},p.createElement(m.Z,null)))),p.createElement(s.Z,{in:H},p.createElement(c.Z,{in:H,unmountOnExit:!0},p.createElement(a.Z,{as:f.uz,sx:{fontFamily:"mono",fontSize:"md",lineHeight:"md",mb:"4x","& > .prism-code":{padding:"".concat(null==I?void 0:null===(n=I.space)||void 0===n?void 0:n["4x"]," !important"),overflowX:"auto"}}})))):p.createElement(f.nu,{code:null==B?void 0:B.data,disabled:!0,language:"jsx",theme:L},p.createElement(a.Z,{as:f.uz,sx:{fontFamily:"mono",fontSize:"sm","& > .prism-code":{overflowX:"auto"}}}))};w.displayName="Demo";var E=w},24231:function(e,n,t){"use strict";var o=t(73645),l=t(57861),a=t(2784);n.Z=function(e){return a.createElement(o.Z,e,a.createElement(o.Z,{flex:"none",mr:"4x",alignItems:"center"},a.createElement(l.Z,{variant:"circle",width:"10x",height:"10x"})),a.createElement(o.Z,{flex:"auto",flexDirection:"column",rowGap:"2x"},a.createElement(l.Z,null),a.createElement(l.Z,null),a.createElement(l.Z,null)))}},40891:function(e,n,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/components/modal",function(){return t(68858)}])},10525:function(e,n,t){"use strict";t.d(n,{Z:function(){return l}});var o=t(2784),l=function(e){var n=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=(0,o.useRef)(!1);n&&!t.current&&("function"==typeof e&&e(),t.current=!0)}},66601:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}}),t(2784);var o=t(75928),l=t(52903),a=(0,o.Z)((0,l.BX)(l.HY,{children:[(0,l.tZ)("path",{d:"M8 8.75l8-5.55v-0.2c0-0.552-0.448-1-1-1v0h-14c-0.552 0-1 0.448-1 1v0 0.19z"}),(0,l.tZ)("path",{d:"M8 10l-8-5.54v8.54c0 0.552 0.448 1 1 1v0h14c0.552 0 1-0.448 1-1v0-8.54z"})]}),"EmailIcon")},99554:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}}),t(2784);var o=t(75928),l=t(52903),a=(0,o.Z)((0,l.tZ)("path",{d:"M12 0h-6c-0.5 0-1 0.5-1 1v3h-3c-0.5 0-1 0.5-1 1v10c0 0.5 0.5 1 1 1h8c0.5 0 1-0.5 1-1v-3h3c0.5 0 1-0.5 1-1v-8l-3-3zM12 1.4l1.6 1.6h-1.6v-1.6zM10 15h-8v-10h5v3h3v7zM8 7v-1.6l1.6 1.6h-1.6zM14 11h-3v-4l-3-3h-2v-3h5v3h3v7z"}),"FileCopyOIcon")},41965:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}}),t(2784);var o=t(75928),l=t(52903),a=(0,o.Z)((0,l.tZ)("path",{d:"M8 0c-4.418 0-8 3.582-8 8s3.582 8 8 8c4.418 0 8-3.582 8-8v0c0-4.418-3.582-8-8-8v0zM8 14.5c-3.59 0-6.5-2.91-6.5-6.5s2.91-6.5 6.5-6.5c3.59 0 6.5 2.91 6.5 6.5v0c-0.006 3.588-2.912 6.494-6.499 6.5h-0.001zM6 7v1h1v3h-1v1h4v-1h-1v-4zM9 4h-2v2h2z"}),"InfoOIcon")},69111:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}}),t(2784);var o=t(75928),l=t(52903),a=(0,o.Z)((0,l.tZ)("path",{d:"M10 7l1.995-1.995c-0.921-1.215-2.365-1.992-3.99-1.992-2.758 0-4.993 2.235-4.993 4.993s2.235 4.993 4.993 4.993c1.839 0 3.446-0.995 4.313-2.475l0.013-0.024 1.732 1c-1.233 2.111-3.487 3.507-6.068 3.507-3.867 0-7.003-3.135-7.003-7.003s3.135-7.003 7.003-7.003c2.183 0 4.133 0.999 5.417 2.565l0.010 0.012 1.579-1.579v5z"}),"RedoIcon")},69269:function(e,n,t){"use strict";t.d(n,{Z:function(){return a}}),t(2784);var o=t(75928),l=t(52903),a=(0,o.Z)((0,l.tZ)("path",{d:"M13.472 16h-10.944c-4.577 0-1.796-4-0.485-5.333 1.138-1.15 2.572-2.005 4.178-2.441l0.065-0.015v-0.61c-1.362-0.657-2.286-2.028-2.286-3.614 0-2.209 1.791-4 4-4s4 1.791 4 4c0 1.586-0.923 2.957-2.262 3.604l-0.024 0.010v0.61c1.671 0.452 3.105 1.307 4.243 2.456l0.001 0.001c1.311 1.333 4.092 5.333-0.485 5.333z"}),"UserIcon")},39256:function(e,n,t){"use strict";t.d(n,{Z:function(){return f}});var o=t(53860),l=t(56818),a=t(92307),r=t.n(a),i=t(2784),s=t(98827),c=t(12711),d=t(34730),u=t(52903),h=t(49857),m=["children","orientation","size","variant"],x=r()(function(e){return(0,o.Zj)({},e)}),p=(0,i.forwardRef)(function(e,n){var t=(0,s.Z)({props:e,name:"ButtonGroup"}),a=t.children,r=t.orientation,i=void 0===r?"horizontal":r,p=t.size,f=t.variant,g=(0,o.Kd)(t,m),b=(0,d.K7)({orientation:i}),y=x({orientation:i,size:void 0===p?"md":p,variant:void 0===f?"default":f});return(0,u.tZ)(c.u.Provider,{value:y,children:(0,u.tZ)(h.Z,(0,o.Zj)((0,o.Zj)((0,o.Zj)({ref:n},b),g),{},{children:(0,l.Pu)(a,y)}))})});p.displayName="ButtonGroup";var f=p},1847:function(e,n,t){"use strict";t.d(n,{Z:function(){return Z}});var o=t(53860),l=t(20325),a=t(56818),r=t(13409),i=t(5081),s=t(2784),c=t(98827),d=t(35353),u=t(40596),h=t(27216),m="blue",x=t(52903),p=t(95530),f=function(e){return(0,x.tZ)(p.Z,(0,o.Zj)((0,o.Zj)({viewBox:"0 0 16 16"},e),{},{children:(0,x.tZ)("g",{fill:"currentColor",children:(0,x.tZ)("path",{d:"M6 11.060l-3-3-1 1 4 4 9-9-1-1z"})})}))};f.displayName="IconChecked";var g=function(e){return(0,x.tZ)(p.Z,(0,o.Zj)((0,o.Zj)({viewBox:"0 0 24 24"},e),{},{children:(0,x.tZ)("g",{fill:"currentColor",children:(0,x.tZ)("rect",{height:"18",width:"18",x:"3",y:"3"})})}))};g.displayName="IconIndeterminate";var b=t(49857),y=["indeterminate","size","variantColor","sx"],C=(0,s.forwardRef)(function(e,n){var t,l,r,s,c,d,p,C,v,j,k,M,Z=e.indeterminate,T=e.size,B=void 0===T?"md":T,w=e.variantColor,E=void 0===w?m:w,F=e.sx,S=(0,o.Kd)(e,y),O=(0,h.u)().sizes,I=(0,u.Z)(),G=(0,o.ZQ)(I,1)[0],L={lg:O["6x"],md:O["4x"],sm:O["3x"]}[B],z=function(e){return'input[type="'.concat("checkbox",'"]')+(0,i.Zs)(e)+" + &"},H=(0,o.Zj)((0,o._x)((0,o._x)((0,o._x)({position:"relative",border:1,width:{lg:"6x",md:"4x",sm:"3x"}[B],height:{lg:"6x",md:"4x",sm:"3x"}[B],zIndex:0},z()+"> *",{opacity:0}),z(":checked")+"> *",{opacity:1}),z("[data-indeterminate]")+"> *",{opacity:1}),Z?(t=({dark:"".concat(E,":60"),light:"".concat(E,":60")})[G],l=({dark:"".concat(E,":50"),light:"".concat(E,":50")})[G],r=({dark:"".concat(E,":50"),light:"".concat(E,":50")})[G],s=({dark:"".concat(E,":60"),light:"".concat(E,":60")})[G],(0,o._x)((0,o._x)((0,o._x)((0,o._x)({},z("[data-indeterminate]"),{borderColor:{dark:"gray:50",light:"gray:40"}[G],color:t}),z("[data-indeterminate]:hover:not(:disabled)"),{borderColor:r,color:l}),z("[data-indeterminate]:focus-visible"),{outlineColor:s,outlineStyle:"solid",outlineWidth:"1h"}),z("[data-indeterminate]:disabled"),{borderColor:{dark:"gray:60",light:"gray:40"}[G],color:{dark:"gray:60",light:"gray:40"}[G],opacity:.28})):(c=({dark:"white:emphasis",light:"white:emphasis"})[G],d="transparent",p=({dark:"".concat(E,":60"),light:"".concat(E,":60")})[G],C=({dark:"".concat(E,":50"),light:"".concat(E,":50")})[G],v=({dark:"".concat(E,":50"),light:"".concat(E,":50")})[G],j=({dark:"gray:60",light:"gray:40"})[G],k=({dark:"".concat(E,":60"),light:"".concat(E,":60")})[G],M=({dark:"".concat(E,":60"),light:"".concat(E,":60")})[G],(0,o._x)((0,o._x)((0,o._x)((0,o._x)((0,o._x)((0,o._x)((0,o._x)((0,o._x)({backgroundColor:d,borderColor:{dark:"gray:50",light:"gray:40"}[G],color:c},z(":hover"),{backgroundColor:d,borderColor:v,color:c}),z(":disabled"),{backgroundColor:d,borderColor:j,color:c,opacity:.28}),z(":focus-visible"),{outlineColor:M,outlineStyle:"solid",outlineWidth:"1h"}),z(":checked"),{backgroundColor:p,borderColor:k,color:c}),z(":checked:hover:not(:disabled)"),{backgroundColor:C,borderColor:v,color:c}),z(":checked:focus-visible"),{backgroundColor:"inherit",borderColor:"transparent",color:c}),z(":checked:focus-visible")+"> div:first-of-type",{backgroundColor:p}),z(":checked:disabled"),{backgroundColor:{dark:"gray:60",light:"gray:40"}[G],borderColor:j,color:{dark:"white:emphasis",light:"black:primary"}[G],opacity:.28})));return(0,x.tZ)(b.Z,(0,o.Zj)((0,o.Zj)((0,o.Zj)({"aria-hidden":(0,a.Qm)(!0),role:"checkbox",sx:[H].concat((0,o.u)((0,i.rY)(F)))},{display:"inline-flex",alignItems:"center",justifyContent:"center",flexShrink:0,userSelect:"none"}),S),{},{children:Z?(0,x.tZ)(g,{size:L}):(0,x.tZ)(f,{size:L})}))});C.displayName="CheckboxControlBox";var v=t(16301),j=function(){if(!s.useContext)throw Error("The `useContext` hook is not available with your React version.");return(0,s.useContext)(v.w)},k=["checked","children","defaultChecked","disabled","id","indeterminate","inputProps","inputRef","name","onBlur","onChange","onClick","onFocus","size","value","variantColor"],M=(0,s.forwardRef)(function(e,n){var t,u,h=(0,c.Z)({props:e,name:"Checkbox"}),p=h.checked,f=h.children,g=h.defaultChecked,y=h.disabled,v=h.id,M=h.indeterminate,Z=h.inputProps,T=h.inputRef,B=h.name,w=h.onBlur,E=h.onChange,F=h.onClick,S=h.onFocus,O=h.size,I=h.value,G=h.variantColor,L=(0,o.Kd)(h,k),z=p,H=y,N=B,P=E,A=O,R=G,V=(0,s.useRef)(),W=(0,l.Z)(T,V),_=j();if(_){var D,U,K,X,Y=(0,o.Zj)({},_),$=Y.disabled,J=Y.name,q=Y.size,Q=Y.value,ee=Y.variantColor,en=Y.onChange;void 0!==Q&&(z=(0,i.rY)(Q).includes(I)),H=$||H,N=null!=J?J:N,P=(0,a.PP)(P,en),A=null!==(D=null!==(U=A)&&void 0!==U?U:q)&&void 0!==D?D:"md",R=null!==(K=null!==(X=R)&&void 0!==X?X:ee)&&void 0!==K?K:m}else A=null!==(t=A)&&void 0!==t?t:"md",R=null!==(u=R)&&void 0!==u?u:m;var et={display:"inline-flex",verticalAlign:"top",alignItems:"center",cursor:H?"not-allowed":"pointer"};return(0,x.BX)(b.Z,(0,o.Zj)((0,o.Zj)((0,o.Zj)({as:"label",ref:n},et),L),{},{children:[(0,x.tZ)(d.Z,(0,o.Zj)({as:"input",checked:z,"data-indeterminate":(0,a.PB)(M),defaultChecked:g,disabled:H,id:v,name:N,onBlur:w,onChange:P,onClick:F,onFocus:S,ref:W,type:"checkbox",value:I},Z)),(0,x.tZ)(C,{indeterminate:M,size:A,variantColor:R}),!(0,r.Rw)(f)&&(0,x.tZ)(b.Z,{ml:"2x",userSelect:"none",opacity:H?.28:1,children:f})]}))});M.displayName="Checkbox";var Z=M},16301:function(e,n,t){"use strict";t.d(n,{w:function(){return o}});var o=(0,t(2784).createContext)()},6194:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var o=t(53860),l=t(2784),a=t(98827),r=t(52903),i=t(49857),s=["gap","rowGap","columnGap","column","row","area","autoFlow","autoRows","autoColumns","templateRows","templateColumns","templateAreas"],c=(0,l.forwardRef)(function(e,n){var t=(0,a.Z)({props:e,name:"Grid"}),l=t.gap,c=t.rowGap,d=t.columnGap,u=t.column,h=t.row,m=t.area,x=t.autoFlow,p=t.autoRows,f=t.autoColumns,g=t.templateRows,b=t.templateColumns,y=t.templateAreas,C=(0,o.Kd)(t,s);return(0,r.tZ)(i.Z,(0,o.Zj)({ref:n,display:"grid",gridGap:l,gridRowGap:c,gridColumnGap:d,gridColumn:u,gridRow:h,gridArea:m,gridAutoFlow:x,gridAutoRows:p,gridAutoColumns:f,gridTemplateRows:g,gridTemplateColumns:b,gridTemplateAreas:y},C))});c.displayName="Grid";var d=c},3398:function(e,n,t){"use strict";t.d(n,{Z:function(){return m}});var o=t(53860),l=t(2784),a=t(98827),r=t(70202),i=t(28729),s=t(40374),c=t(52737),d=t(52903),u=["size","variant","css"],h=(0,l.forwardRef)(function(e,n){var t,l,h=(0,a.Z)({props:e,name:"Input"}),m=h.size,x=h.variant,p=h.css,f=(0,o.Kd)(h,u),g=(0,s.Z)(),b=(0,o.Zj)({},g),y=b.size,C=b.variant,v=null!==(t=null!=m?m:y)&&void 0!==t?t:c.zm,j=null!==(l=null!=x?x:C)&&void 0!==l?l:c.oD,k=g?[(0,i.zM)({variant:j}),p]:p,M=(0,i.zG)({size:v,variant:j});return(0,d.tZ)(r.Z,(0,o.Zj)((0,o.Zj)({ref:n,as:"input",css:k},M),f))});h.displayName="Input";var m=h},35358:function(e,n,t){"use strict";t.d(n,{Z:function(){return u}});var o=t(53860),l=t(2784),a=t(98827),r=t(53638),i=t(13692),s=t(52903),c=t(49857),d=(0,l.forwardRef)(function(e,n){var t=(0,a.Z)({props:e,name:"ModalBody"}),l=(0,i.Z)(),d=(0,o.Zj)({},l).scrollBehavior,u=(0,r.mS)({scrollBehavior:d});return(0,s.tZ)(c.Z,(0,o.Zj)((0,o.Zj)({ref:n},u),t))});d.displayName="ModalBody";var u=d},76168:function(e,n,t){"use strict";t.d(n,{Z:function(){return d}});var o=t(53860),l=t(2784),a=t(98827),r=t(53638),i=t(52903),s=t(49857),c=(0,l.forwardRef)(function(e,n){var t=(0,a.Z)({props:e,name:"ModalFooter"}),l=(0,r.IB)();return(0,i.tZ)(s.Z,(0,o.Zj)((0,o.Zj)({ref:n},l),t))});c.displayName="ModalFooter";var d=c},52235:function(e,n,t){"use strict";t.d(n,{Z:function(){return u}});var o=t(53860),l=t(2784),a=t(98827),r=t(53638),i=t(13692),s=t(52903),c=t(49857),d=(0,l.forwardRef)(function(e,n){var t=(0,a.Z)({props:e,name:"ModalHeader"}),l=(0,i.Z)(),d=(0,o.Zj)({},l).isClosable,u=(0,r.vZ)({isClosable:d});return(0,s.tZ)(c.Z,(0,o.Zj)((0,o.Zj)({ref:n},u),t))});d.displayName="ModalHeader";var u=d},57861:function(e,n,t){"use strict";t.d(n,{Z:function(){return v}});var o,l,a=t(53860),r=t(10525),i=t(56818),s=t(2784),c=t(98827),d=t(28165),u=t(40596),h=(0,d.F4)(o||(o=(0,a.AI)(["\n  0% {\n    opacity: 1;\n  }\n  50% {\n    opacity: .4;\n  }\n  100% {\n    opacity: 1;\n  }\n"]))),m=(0,d.F4)(l||(l=(0,a.AI)(["\n  0% {\n    transform: translateX(-100%);\n  }\n  50% {\n    // +0.5s of delay between each loop\n    transform: translateX(100%);\n  }\n  100% {\n    transform: translateX(100%);\n  }\n"]))),x=function(e){var n=e.animation,t=e.colorMode;return"pulse"===n?{animation:"".concat(h," 1.5s ease-in-out .5s infinite")}:"wave"===n?{position:"relative",overflow:"hidden",__after:{animation:"".concat(m," 1.6s linear .5s infinite"),background:"linear-gradient(90deg,".concat(["transparent","rgba(255, 255, 255, ".concat({dark:.08,light:.32}[t],")"),"transparent"].join(","),")"),content:'""',position:"absolute",inset:0,transform:"translateX(-100%)"}}:{animation:n}},p=function(e){var n=e.variant;return"text"===n?{height:"3x",borderRadius:"sm",_empty:{"::before":{content:'"\\00a0"'}}}:"rectangle"===n?{}:"circle"===n?{borderRadius:"50%"}:{}},f=function(e){var n=e.animation,t=e.variant,o=(0,u.Z)(),l=(0,a.ZQ)(o,1)[0],r={dark:"rgba(255, 255, 255, 0.08)",light:"rgba(0, 0, 0, 0.08)"}[l],i=x({animation:n,colorMode:l}),s=p({variant:t});return(0,a.Zj)((0,a.Zj)({display:"block",backgroundColor:r},i),s)},g=t(52903),b=t(49857),y=["animation","variant"],C=(0,s.forwardRef)(function(e,n){var t=(0,c.Z)({props:e,name:"Skeleton"}),o=t.animation,l=t.variant,s=(0,a.Kd)(t,y),d=void 0===l?"text":l,u="".concat(C.displayName,":");(0,r.Z)(function(){(0,i.TL)('variant="rect"',{prefix:u,alternative:'variant="rectangle"',willRemove:!0})},"rect"===d),"rect"===d&&(d="rectangle");var h=f({animation:o,variant:d});return(0,g.tZ)(b.Z,(0,a.Zj)((0,a.Zj)({ref:n},h),s))});C.displayName="Skeleton";var v=C},56098:function(e,n,t){"use strict";t.d(n,{Z:function(){return g}});var o=t(53860),l=t(10424),a=t(13409),r=t(56818),i=t(5081),s=t(2784),c=t(98827),d=t(65204),u=t(99252),h=t(61809),m=t(52903),x=t(49857),p=["children","index"],f=(0,s.forwardRef)(function(e,n){var t,g=(0,c.Z)({props:e,name:"TabPanel"}),b=g.children,y=g.index,C=(0,o.Kd)(g,p),v=(0,s.useState)(y),j=(0,o.ZQ)(v,2),k=j[0],M=j[1],Z=(0,u.Z)(),T=(0,i.zU)(null==Z?void 0:Z.registerTabPanel),B=(0,i.zU)(null==Z?void 0:Z.unregisterTabPanel),w="".concat(d.Z.name,":Tab-").concat(k),E="".concat(d.Z.name,":TabPanel-").concat(k),F=(t=null==Z?void 0:Z.index,!(0,a.le)(k)&&!(0,a.le)(t)&&k===t),S=(0,h.Jv)({tabIndex:0});(0,l.Z)(function(){if((0,a.le)(k)){var e=T();return M(e),function(){B(e)}}return T(k),function(){B(k)}});var O=function(){return(0,o.Zj)((0,o.Zj)({"aria-hidden":(0,r.Qm)(!F),"aria-labelledby":w,hidden:!F,id:E,ref:n,role:"tabpanel",tabIndex:0},S),C)},I={getTabPanelProps:O,index:k,isSelected:F},G="".concat(f.displayName,":");return(Object.defineProperties(I,{isActive:{get:function(){return(0,r.TL)("isActive",{prefix:G,alternative:"isSelected",willRemove:!0}),F}}}),"function"==typeof b)?b(I):(0,m.tZ)(x.Z,(0,o.Zj)((0,o.Zj)({},O()),{},{children:b}))});f.displayName="TabPanel";var g=f},52842:function(e,n,t){"use strict";t.d(n,{Z:function(){return c}});var o=t(53860),l=t(2784),a=t(98827),r=t(52903),i=t(49857),s=(0,l.forwardRef)(function(e,n){var t=(0,a.Z)({props:e,name:"TabPanels"});return(0,r.tZ)(i.Z,(0,o.Zj)({ref:n},t))});s.displayName="TabPanels";var c=s},67622:function(e,n,t){"use strict";t.d(n,{Z:function(){return u}});var o=t(53860),l=t(2784),a=t(98827),r=t(70758),i=t(91334),s=t(52903),c=["size"],d=(0,l.forwardRef)(function(e,n){var t=(0,a.Z)({props:e,name:"TextLabel"}),l=t.size,d=(0,o.Kd)(t,c),u=(0,i.w)({size:l});return(0,s.tZ)(r.Z,(0,o.Zj)((0,o.Zj)({as:"label",ref:n},u),d))});d.displayName="TextLabel";var u=d},35353:function(e,n,t){"use strict";t.d(n,{Z:function(){return c}});var o=t(53860),l=t(2784),a=t(98827),r=t(52903),i=t(49857),s=(0,l.forwardRef)(function(e,n){var t=(0,a.Z)({props:e,name:"VisuallyHidden"});return(0,r.tZ)(i.Z,(0,o.Zj)((0,o.Zj)({ref:n},{position:"absolute",width:1,height:1,padding:0,border:0,overflow:"hidden",clipPath:"inset(50%)",whiteSpace:"nowrap"}),t))});s.displayName="VisuallyHidden";var c=s}},function(e){e.O(0,[9860,1096,2888,9774,179],function(){return e(e.s=40891)}),_N_E=e.O()}]);