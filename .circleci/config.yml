# https://circleci.com/blog/persisting-data-in-workflows-when-to-use-caching-artifacts-and-workspaces/

version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.4.3

workflows:
  version: 2
  build-n-deploy:
    jobs:
      # The `build-v0` job will run on all branches except `gh-pages` and will not run on tags.
      - build-v0:
          filters:
            branches:
              only: v0
      # The `deploy-v0` job will run only on the `v0` branch.
      - deploy-v0:
          requires:
            - build-v0
          filters:
            branches:
              only: v0
      # The `build-pr` job will run on all branches (except `gh-pages` and `v0`) that have associated pull requests open.
      - build-pr:
          filters:
            branches:
              ignore:
                - gh-pages
                - v0
      # The `deploy-pr` job runs for all branches (except `gh-pages` and `v0`) that have associated pull requests open.
      - deploy-pr:
          requires:
            - build-pr
          filters:
            branches:
              ignore:
                - gh-pages
                - v0
      # The `build-tag` job will not run on all branches and will run only on the matched tags.
      - build-tag:
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^styled-ui-docs.*/
      # The `deploy-tag` job will not run on branches and will run on tags starting with 'styled-ui-docs'.
      - deploy-tag:
          requires:
            - build-tag
          filters:
            branches:
              ignore: /.*/
            tags:
              only:
                - /^styled-ui-docs.*/

# https://circleci.com/docs/2.0/executor-types/
jobs:
  build-v0:
    docker:
      - image: cimg/node:16.20-browsers
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          # https://googlechromelabs.github.io/chrome-for-testing/
          chrome-version: 116.0.5845.96 # TODO: remove when chromedriver downloads are fixed
      - run:
          name: Setup environment
          command: |
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_COMMIT=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export CI_COMMIT_SHORT=${CIRCLE_SHA1:0:8}" >> $BASH_ENV
            echo "export CI_TAG=${CIRCLE_TAG}" >> $BASH_ENV
            echo "export TONIC_UI_DOC_VERSION=v0" >> $BASH_ENV
      - run:
          name: Check package version
          command: |
            git --version
            node --version
            java --version
            google-chrome --version
            npm --version
            yarn --version
      - run:
          name: Install packages
          command: |
            yarn
            yarn list --silent react react-dom
      - run:
          name: Test
          command: |
            yarn test
      - run:
          name: Build
          command: |
            echo "BASE_PATH=/tonic-ui/react/${TONIC_UI_DOC_VERSION}" > packages/docs/.env.production
            yarn build
            yarn eslint
      - run:
          name: Compress build artifacts
          command: |
            tar -zcvf ci.tar.gz --dereference --directory packages/docs/dist react
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory.
          # This is a directory on the container which is taken to be the root directory of the workspace.
          root: .
          paths:
            - ci.tar.gz

  build-pr:
    docker:
      - image: cimg/node:16.20-browsers
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          # https://googlechromelabs.github.io/chrome-for-testing/
          chrome-version: 116.0.5845.96 # TODO: remove when chromedriver downloads are fixed
      - run:
          name: Setup environment
          command: |
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_COMMIT=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export CI_COMMIT_SHORT=${CIRCLE_SHA1:0:8}" >> $BASH_ENV
            echo "export CI_PULL_REQUEST_NUMBER=${CIRCLE_PULL_REQUEST##*/}" >> $BASH_ENV
            echo "export CI_TAG=${CIRCLE_TAG}" >> $BASH_ENV
            echo "export TONIC_UI_DOC_VERSION=pr-${CIRCLE_PULL_REQUEST##*/}" >> $BASH_ENV
      - run:
          name: Check package version
          command: |
            git --version
            node --version
            java --version
            google-chrome --version
            npm --version
            yarn --version
      - run:
          name: Install packages
          command: |
            yarn
            yarn list --silent react react-dom
      - run:
          name: Test
          command: |
            yarn test
      - run:
          name: Build
          command: |
            echo "BASE_PATH=/tonic-ui-demo/react/${TONIC_UI_DOC_VERSION}" > packages/docs/.env.production
            yarn build
            yarn eslint
      - run:
          name: Compress build artifacts
          command: |
            tar -zcvf ci.tar.gz --dereference --directory packages/docs/dist react
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory.
          # This is a directory on the container which is taken to be the root directory of the workspace.
          root: .
          paths:
            - ci.tar.gz

  build-tag:
    docker:
      - image: cimg/node:16.20-browsers
    steps:
      - checkout
      - browser-tools/install-browser-tools:
          # https://googlechromelabs.github.io/chrome-for-testing/
          chrome-version: 116.0.5845.96 # TODO: remove when chromedriver downloads are fixed
      - run:
          name: Setup environment
          command: |
            PACKAGE_VERSION=$(cat packages/docs/package.json \
              | grep version \
              | head -1 \
              | awk -F: '{ print $2 }' \
              | sed 's/[",]//g' \
              | tr -d '[[:space:]]')
            echo "export PACKAGE_VERSION=${PACKAGE_VERSION}" >> $BASH_ENV
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_COMMIT=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export CI_COMMIT_SHORT=${CIRCLE_SHA1:0:8}" >> $BASH_ENV
            echo "export CI_TAG=${CIRCLE_TAG}" >> $BASH_ENV
            echo "export TONIC_UI_DOC_VERSION=${PACKAGE_VERSION}" >> $BASH_ENV
      - run:
          name: Check package version
          command: |
            git --version
            node --version
            java --version
            google-chrome --version
            npm --version
            yarn --version
      - run:
          name: Install packages
          command: |
            yarn
            yarn list --silent react react-dom
      - run:
          name: Test
          command: |
            yarn test            
      - run:
          name: Build
          command: |
            echo "BASE_PATH=/tonic-ui/react/${TONIC_UI_DOC_VERSION}" > packages/docs/.env.production
            yarn build
            yarn eslint
      - run:
          name: Compress build artifacts
          command: |
            tar -zcvf ci.tar.gz --dereference --directory packages/docs/dist react
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory.
          # This is a directory on the container which is taken to be the root directory of the workspace.
          root: .
          paths:
            - ci.tar.gz

  deploy-v0:
    docker:
      - image: cimg/node:16.20
    steps:
      - run:
          name: Configuration
          command: |
            git config --global user.email "no-reply@github.com"
            git config --global user.name "ci-build"
            npm config set loglevel warn
            npm config set scripts-prepend-node-path auto
      - checkout:
          path: tonic-ui
      - add_ssh_keys:
          fingerprints:
            - "92:e5:99:6a:e1:24:28:b6:fb:a4:33:9a:a1:b1:a7:c6"
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace
      - run:
          name: Setup environment
          command: |
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_COMMIT=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export CI_COMMIT_SHORT=${CIRCLE_SHA1:0:8}" >> $BASH_ENV
            echo "export CI_PULL_REQUEST_NUMBER=${CIRCLE_PULL_REQUEST##*/}" >> $BASH_ENV
            echo "export CI_TAG=${CIRCLE_TAG}" >> $BASH_ENV
            echo "export TONIC_UI_DOC_VERSION=v0" >> $BASH_ENV
      - run:
          name: Extract build artifacts
          command: |
            mkdir -p dist
            tar -zxvf workspace/ci.tar.gz --directory dist
      - run:
          name: Deploy to gh-pages
          command: |
            cd tonic-ui
            git checkout gh-pages
            rm -rf "react/${TONIC_UI_DOC_VERSION}"
            mkdir -p "react/${TONIC_UI_DOC_VERSION}"
            cp -af ../dist/react/** "react/${TONIC_UI_DOC_VERSION}/"
            git add "react/${TONIC_UI_DOC_VERSION}"
            git commit -m "[CI] Deploy '${CI_COMMIT_SHORT}' to 'gh-pages'"
            git push origin gh-pages

  deploy-pr:
    docker:
      - image: cimg/node:16.20
    steps:
      - run:
          name: Configuration
          command: |
            git config --global user.email "no-reply@github.com"
            git config --global user.name "ci-build"
            npm config set loglevel warn
            npm config set scripts-prepend-node-path auto
      - checkout:
          path: tonic-ui
      - add_ssh_keys:
          fingerprints:
            - "73:b4:70:76:97:74:c2:f5:c9:bf:71:83:8c:a6:da:a6"
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace
      - run:
          name: Setup environment
          command: |
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_COMMIT=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export CI_COMMIT_SHORT=${CIRCLE_SHA1:0:8}" >> $BASH_ENV
            echo "export CI_PULL_REQUEST_NUMBER=${CIRCLE_PULL_REQUEST##*/}" >> $BASH_ENV
            echo "export CI_TAG=${CIRCLE_TAG}" >> $BASH_ENV
            echo "export TONIC_UI_DEMO_REPO=tonic-ui-demo" >> $BASH_ENV
            echo "export TONIC_UI_DEMO_REPO_URL=https://github.com/trendmicro-frontend/tonic-ui-demo.git" >> $BASH_ENV
            echo "export TONIC_UI_DEMO_URL=https://trendmicro-frontend.github.io/tonic-ui-demo" >> $BASH_ENV
            echo "export TONIC_UI_DOC_VERSION=pr-${CIRCLE_PULL_REQUEST##*/}" >> $BASH_ENV
      - run:
          name: Extract build artifacts
          command: |
            mkdir -p dist
            tar -zxvf workspace/ci.tar.gz --directory dist
      - run:
          name: Deploy to gh-pages
          command: |
            git clone ${TONIC_UI_DEMO_REPO_URL} ${TONIC_UI_DEMO_REPO}
            cd ${TONIC_UI_DEMO_REPO}
            git checkout gh-pages
            rm -rf "react/${TONIC_UI_DOC_VERSION}"
            mkdir -p "react/${TONIC_UI_DOC_VERSION}"
            cp -af ../dist/react/** "react/${TONIC_UI_DOC_VERSION}/"
            git add "react/${TONIC_UI_DOC_VERSION}"
            git commit -m "Deploy '${TONIC_UI_DOC_VERSION}' to '${TONIC_UI_DEMO_REPO_URL}'"
            git push -u ${TONIC_UI_DEMO_REPO_URL} gh-pages
            cd ..
            npx --yes -- octokit-cli issues create-comment --owner trendmicro-frontend --repo tonic-ui --issue_number ${CI_PULL_REQUEST_NUMBER} --body "Successfully deployed ${CI_COMMIT} to ${TONIC_UI_DEMO_URL}/react/${TONIC_UI_DOC_VERSION}/"

  deploy-tag:
    docker:
      - image: cimg/node:16.20
    steps:
      - run:
          name: Configuration
          command: |
            git config --global user.email "no-reply@github.com"
            git config --global user.name "ci-build"
            npm config set loglevel warn
            npm config set scripts-prepend-node-path auto
      - checkout:
          path: tonic-ui
      - add_ssh_keys:
          fingerprints:
            - "92:e5:99:6a:e1:24:28:b6:fb:a4:33:9a:a1:b1:a7:c6"
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace
      - run:
          name: Setup environment
          command: |
            PACKAGE_VERSION=$(cat tonic-ui/packages/docs/package.json \
              | grep version \
              | head -1 \
              | awk -F: '{ print $2 }' \
              | sed 's/[",]//g' \
              | tr -d '[[:space:]]')
            echo "export PACKAGE_VERSION=${PACKAGE_VERSION}" >> $BASH_ENV
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_COMMIT=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export CI_COMMIT_SHORT=${CIRCLE_SHA1:0:8}" >> $BASH_ENV
            echo "export CI_PULL_REQUEST_NUMBER=${CIRCLE_PULL_REQUEST##*/}" >> $BASH_ENV
            echo "export CI_TAG=${CIRCLE_TAG}" >> $BASH_ENV
            echo "export TONIC_UI_DOC_VERSION=${PACKAGE_VERSION}" >> $BASH_ENV
      - run:
          name: Extract build artifacts
          command: |
            mkdir -p dist
            tar -zxvf workspace/ci.tar.gz --directory dist
      - run:
          name: Deploy to gh-pages
          command: |
            cd tonic-ui
            git checkout gh-pages
            rm -rf "react/${TONIC_UI_DOC_VERSION}"
            mkdir -p "react/${TONIC_UI_DOC_VERSION}"
            cp -af ../dist/react/** "react/${TONIC_UI_DOC_VERSION}/"
            git add "react/${TONIC_UI_DOC_VERSION}"
            git commit -m "[CI] Deploy '${TONIC_UI_DOC_VERSION}' to 'gh-pages' (tag='${CI_TAG}')"
            git push origin gh-pages
