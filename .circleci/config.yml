# https://circleci.com/blog/persisting-data-in-workflows-when-to-use-caching-artifacts-and-workspaces/

version: 2.1

orbs:
  browser-tools: circleci/browser-tools@1.2.1

workflows:
  version: 2
  build-n-deploy:
    jobs:
      - build:
          filters:
            branches:
              ignore: gh-pages
      - deploy-tonic-ui-docs:
          requires:
            - build
          filters:
            branches:
              only: master
      - deploy-tonic-ui-demo:
          requires:
            - build
          filters:
            branches:
              ignore: master

# https://circleci.com/docs/2.0/executor-types/
jobs:
  build:
    docker:
      - image: cimg/node:14.17.6-browsers
    steps:
      - browser-tools/install-browser-tools
      - checkout
      - run:
          name: Setup environment variables
          command: |
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_COMMIT=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export CI_COMMIT_SHORT=${CIRCLE_SHA1:0:8}" >> $BASH_ENV
            echo "export CI_TAG=${CIRCLE_TAG}" >> $BASH_ENV
      - run:
          name: Check package version
          command: |
            git --version
            node --version
            java --version
            google-chrome --version
            npm --version
            yarn --version
      - run:
          name: Install packages
          command: |
            yarn
            yarn list --silent react react-dom
      - run:
          name: Test
          command: |
            yarn test            
      - run:
          name: Build
          command: |
            if [[ "${CI_BRANCH}" != "master" ]]; then
              CI_PULL_REQUEST_NUMBER=${CIRCLE_PULL_REQUEST##*/}
              TONIC_UI_DEMO_REPO=tonic-ui-demo
              echo "ASSET_PREFIX=/${TONIC_UI_DEMO_REPO}/pr-${CI_PULL_REQUEST_NUMBER}" > packages/docs/.env.production
            fi
            yarn build
            yarn eslint
      - run:
          name: Compress build artifacts
          command: |
            tar -zcvf ci.tar.gz --directory packages/docs docs
      - persist_to_workspace:
          # Must be an absolute path, or relative path from working_directory.
          # This is a directory on the container which is taken to be the root directory of the workspace.
          root: .
          paths:
            - ci.tar.gz

  deploy-tonic-ui-docs:
    docker:
      - image: cimg/node:12.22
    steps:
      - run:
          name: Configuration
          command: |
            git config --global user.email "no-reply@github.com"
            git config --global user.name "ci-build"
            npm config set loglevel warn
            npm config set scripts-prepend-node-path auto
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "92:e5:99:6a:e1:24:28:b6:fb:a4:33:9a:a1:b1:a7:c6"
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace
      - run:
          name: Extract build artifacts
          command: |
            tar zxvf workspace/ci.tar.gz
      - run:
          name: Disable jekyll builds
          command: |
            touch docs/.nojekyll
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            npx --yes -- gh-pages \
              --dist "docs" \
              --dotfiles \
              --message '[ci skip] deploy docs to gh-pages' \
              --no-history

  deploy-tonic-ui-demo:
    docker:
      - image: cimg/node:12.22
    steps:
      - run:
          name: Configuration
          command: |
            git config --global user.email "no-reply@github.com"
            git config --global user.name "ci-build"
            npm config set loglevel warn
            npm config set scripts-prepend-node-path auto
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "73:b4:70:76:97:74:c2:f5:c9:bf:71:83:8c:a6:da:a6"
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: workspace
      - run:
          name: Setup environment variables
          command: |
            echo "export CI_BRANCH=${CIRCLE_BRANCH}" >> $BASH_ENV
            echo "export CI_BUILD_NUMBER=${CIRCLE_BUILD_NUM}" >> $BASH_ENV
            echo "export CI_COMMIT=${CIRCLE_SHA1}" >> $BASH_ENV
            echo "export CI_COMMIT_SHORT=${CIRCLE_SHA1:0:8}" >> $BASH_ENV
            echo "export CI_PULL_REQUEST_NUMBER=${CIRCLE_PULL_REQUEST##*/}" >> $BASH_ENV
            echo "export CI_TAG=${CIRCLE_TAG}" >> $BASH_ENV
            echo "export TONIC_UI_DEMO_REPO=tonic-ui-demo" >> $BASH_ENV
            echo "export TONIC_UI_DEMO_REPO_URL=https://github.com/trendmicro-frontend/tonic-ui-demo.git" >> $BASH_ENV
            echo "export TONIC_UI_DEMO_URL=https://trendmicro-frontend.github.io/tonic-ui-demo" >> $BASH_ENV
      - run:
          name: Extract build artifacts
          command: |
            tar zxvf workspace/ci.tar.gz
      - run:
          name: Deploy docs to gh-pages branch
          command: |
            git clone ${TONIC_UI_DEMO_REPO_URL} .${TONIC_UI_DEMO_REPO}
            cd .${TONIC_UI_DEMO_REPO}
            git checkout gh-pages
            rm -rf .git
            rm -rf "pr-${CI_PULL_REQUEST_NUMBER}"
            mkdir -p "pr-${CI_PULL_REQUEST_NUMBER}"
            cp -af ../docs/** "pr-${CI_PULL_REQUEST_NUMBER}/"
            git init
            git checkout --orphan gh-pages
            git add .
            git commit -m "Deploy pr-${CI_PULL_REQUEST_NUMBER} to ${TONIC_UI_DEMO_REPO_URL}"
            git remote add origin ${TONIC_UI_DEMO_REPO_URL}
            git push -u --force ${TONIC_UI_DEMO_REPO_URL} gh-pages
            cd ..
            npx --yes -- octokit-cli issues create-comment --owner trendmicro-frontend --repo tonic-ui --issue_number ${CI_PULL_REQUEST_NUMBER} --body "Successfully deployed ${CI_COMMIT} to ${TONIC_UI_DEMO_URL}/pr-${CI_PULL_REQUEST_NUMBER}/"
